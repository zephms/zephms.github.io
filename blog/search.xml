<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>跨语言数据协同平台</title>
      <link href="/new/2021/09/03/%E8%BD%AE%E5%AD%90/%E8%B7%A8%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%8D%8F%E5%90%8C%E5%B9%B3%E5%8F%B0/"/>
      <url>/new/2021/09/03/%E8%BD%AE%E5%AD%90/%E8%B7%A8%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%8D%8F%E5%90%8C%E5%B9%B3%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这是最初的模样:</p><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端:"></a>服务器端:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">跨语言数据协同平台</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">v0.1.0 第一个用python实现的完整试验版</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask <span class="comment"># 出错请安装: pip install Flask</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Channel</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, initData=[], cap=<span class="number">3</span>, timeout=<span class="number">1010</span></span>):</span></span><br><span class="line">        <span class="comment"># timeout 是秒级小数</span></span><br><span class="line">        self.timeout = timeout</span><br><span class="line">        self.cap = cap</span><br><span class="line">        self.data = initData</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getOne</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.data:</span><br><span class="line">            temp = self.data[-<span class="number">1</span>]</span><br><span class="line">            self.data = self.data[:-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">return</span> temp</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            curTime = time.time()</span><br><span class="line">            <span class="keyword">while</span> time.time() &gt; curTime+self.timeout:</span><br><span class="line">                <span class="keyword">if</span> self.data:</span><br><span class="line">                    temp = self.data[-<span class="number">1</span>]</span><br><span class="line">                    self.data = self.data[:-<span class="number">1</span>]</span><br><span class="line">                    <span class="keyword">return</span> temp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    time.sleep(<span class="number">0.05</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;timeout&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pushOne</span>(<span class="params">self, d</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.data)&lt;self.cap:</span><br><span class="line">            self.data.insert(<span class="number">0</span>, d)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            curTime = time.time()</span><br><span class="line">            <span class="keyword">while</span> time.time() &gt; curTime+self.timeout:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(self.data)&lt;self.cap:</span><br><span class="line">                    self.data.insert(<span class="number">0</span>, d)</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    time.sleep(<span class="number">0.05</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">startServer</span>():</span></span><br><span class="line">    host = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line">    host = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">    port = <span class="number">8083</span></span><br><span class="line">    debug = <span class="literal">True</span></span><br><span class="line">    app = Flask(__name__)</span><br><span class="line">    channels = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">    @app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;p&gt;Hello, World! 欢迎来到跨编程语言数据协同平台&lt;/p&gt;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @app.route(<span class="params"><span class="string">&quot;/push/&lt;ch&gt;/&lt;d&gt;&quot;</span></span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">ch, d</span>):</span></span><br><span class="line">        <span class="keyword">if</span> ch <span class="keyword">in</span> channels.keys():</span><br><span class="line">            ret = channels[ch].pushOne(d)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            channels[ch] = Channel(initData=[d])</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span></span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="meta">    @app.route(<span class="params"><span class="string">&quot;/get/&lt;ch&gt;&quot;</span></span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">ch</span>):</span></span><br><span class="line">        <span class="keyword">if</span> ch <span class="keyword">in</span> channels.keys():</span><br><span class="line">            ret = channels[ch].getOne()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            channels[ch] = Channel()</span><br><span class="line">            ret = channels[ch].getOne()</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="meta">    @app.route(<span class="params"><span class="string">&quot;/check&quot;</span></span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span>():</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span></span><br><span class="line"></span><br><span class="line">    app.run(host, port, debug)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    startServer()</span><br><span class="line">    <span class="comment"># p=Process(target=startServer)</span></span><br><span class="line">    <span class="comment"># p.start()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># time.sleep(5)</span></span><br><span class="line">    <span class="comment"># print(&quot;11111111111111111111&quot;)</span></span><br><span class="line">    <span class="comment"># pipeManager = PipeManager([&quot;127.0.0.1&quot;, 8083])</span></span><br><span class="line">    <span class="comment"># print(pipeManager.check())</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="python端"><a href="#python端" class="headerlink" title="python端:"></a>python端:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PipeManager</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, hp</span>):</span></span><br><span class="line">        self.host = hp[<span class="number">0</span>]</span><br><span class="line">        self.port = <span class="built_in">int</span>(hp[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">self</span>):</span></span><br><span class="line">        resp = requests.get(self.host + <span class="string">&quot;:&quot;</span> + <span class="built_in">str</span>(self.port)+<span class="string">&quot;/check&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> resp.text</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">self, channel, d</span>):</span></span><br><span class="line">        resp = requests.get(self.host + <span class="string">&quot;:&quot;</span> + <span class="built_in">str</span>(self.port) + <span class="string">&quot;/push/&quot;</span> + channel + <span class="string">&quot;/&quot;</span> + d)</span><br><span class="line">        <span class="keyword">return</span> resp.text</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, channel</span>):</span></span><br><span class="line">        resp = requests.get(self.host + <span class="string">&quot;:&quot;</span> + <span class="built_in">str</span>(self.port) + <span class="string">&quot;/get/&quot;</span> + channel)</span><br><span class="line">        <span class="keyword">return</span> resp.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pipeManager = PipeManager([<span class="string">&quot;http://127.0.0.1&quot;</span>, <span class="number">8083</span>])</span><br><span class="line"><span class="keyword">assert</span> pipeManager.check == <span class="string">&quot;ok&quot;</span> <span class="comment"># 检验通畅</span></span><br><span class="line"></span><br><span class="line">pipeManager.push(<span class="string">&quot;py-node&quot;</span>, <span class="string">&quot;hello, Nodejs&quot;</span>)</span><br><span class="line">pipeManager.push(<span class="string">&quot;py-go&quot;</span>, <span class="string">&quot;hello, go&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="golang端"><a href="#golang端" class="headerlink" title="golang端:"></a>golang端:</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="comment">// v0.1.0</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> PipeManager <span class="keyword">struct</span> &#123;</span><br><span class="line">host <span class="keyword">string</span></span><br><span class="line">port <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pipeManager *PipeManager)</span> <span class="title">check</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">resp, err := http.Get(<span class="string">&quot;http://&quot;</span>+pipeManager.host+<span class="string">&quot;:&quot;</span>+pipeManager.port+<span class="string">&quot;/check&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">s,err:=ioutil.ReadAll(resp.Body)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(s)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pipeManager *PipeManager)</span> <span class="title">push</span> <span class="params">(channel, d <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">resp, err := http.Get(<span class="string">&quot;http://&quot;</span>+pipeManager.host+<span class="string">&quot;:&quot;</span>+pipeManager.port+<span class="string">&quot;/push/&quot;</span>+channel+<span class="string">&quot;/&quot;</span>+d)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">s,err:=ioutil.ReadAll(resp.Body)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(s)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pipeManager *PipeManager)</span> <span class="title">get</span> <span class="params">(channel <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">resp, err := http.Get(<span class="string">&quot;http://&quot;</span>+pipeManager.host+<span class="string">&quot;:&quot;</span>+pipeManager.port+<span class="string">&quot;/get/&quot;</span>+channel)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">s,err:=ioutil.ReadAll(resp.Body)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(s)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">pipeManager := PipeManager&#123;<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;8083&quot;</span>&#125;</span><br><span class="line"><span class="keyword">if</span> pipeManager.check() != <span class="string">&quot;ok&quot;</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;连接失败&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;hhh&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="node-js端-有bug-修复中"><a href="#node-js端-有bug-修复中" class="headerlink" title="node.js端(有bug 修复中):"></a>node.js端(有bug 修复中):</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>); </span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"><span class="keyword">var</span> qs = <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>); </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> options = &#123; </span><br><span class="line">    hostname: <span class="string">&#x27;127.0.0.1&#x27;</span>, </span><br><span class="line">    port: <span class="number">8083</span>, </span><br><span class="line">    path: <span class="string">&#x27;/get/py-node/&#x27;</span>, </span><br><span class="line">    method: <span class="string">&#x27;GET&#x27;</span> </span><br><span class="line">&#125;; </span><br><span class="line"><span class="comment">// var req = http.request(options, function (res) &#123; </span></span><br><span class="line"><span class="comment">//     console.log(&#x27;STATUS: &#x27; + res.statusCode); </span></span><br><span class="line"><span class="comment">//     console.log(&#x27;HEADERS: &#x27; + JSON.stringify(res.headers)); </span></span><br><span class="line"><span class="comment">//     res.setEncoding(&#x27;utf8&#x27;); </span></span><br><span class="line"><span class="comment">//     res.on(&#x27;data&#x27;, function (chunk) &#123; </span></span><br><span class="line"><span class="comment">//         console.log(&#x27;BODY: &#x27; + chunk); </span></span><br><span class="line"><span class="comment">//     &#125;); </span></span><br><span class="line"><span class="comment">// &#125;); </span></span><br><span class="line"><span class="comment">// req.on(&#x27;error&#x27;, function (e) &#123; </span></span><br><span class="line"><span class="comment">//     console.log(&#x27;problem with request: &#x27; + e.message); </span></span><br><span class="line"><span class="comment">// &#125;); </span></span><br><span class="line"><span class="comment">// req.end();</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PipeManager</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">HP</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.host = HP[<span class="number">0</span>],</span><br><span class="line">        <span class="built_in">this</span>.port = HP[<span class="number">1</span>],</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.port)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> options = &#123;</span><br><span class="line">            hostname:<span class="built_in">this</span>.host,</span><br><span class="line">            port:<span class="built_in">this</span>.port,</span><br><span class="line">            path:<span class="string">&#x27;/check&#x27;</span>,</span><br><span class="line">            method:<span class="string">&#x27;GET&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(options)</span><br><span class="line">        <span class="keyword">var</span> req = http.request(options, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;STATUS: &#x27;</span> + res.statusCode); </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;HEADERS: &#x27;</span> + <span class="built_in">JSON</span>.stringify(res.headers)); </span><br><span class="line">            res.setEncoding(<span class="string">&#x27;utf8&#x27;</span>); </span><br><span class="line">            res.on(<span class="string">&#x27;data&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">chunk</span>) </span>&#123; </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;BODY: &#x27;</span> + chunk); </span><br><span class="line">            &#125;); </span><br><span class="line">        &#125;)</span><br><span class="line">        req.on(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123; </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;problem with request: &#x27;</span> + e.message); </span><br><span class="line">        &#125;); </span><br><span class="line">        req.end();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pipeManager = <span class="keyword">new</span> PipeManager([<span class="string">&quot;http://127.0.0.1&quot;</span>, <span class="number">8083</span>])</span><br><span class="line">pipeManager.check()</span><br><span class="line"></span><br><span class="line"><span class="comment">// var startTime = Date.now()</span></span><br><span class="line"><span class="comment">// var myfunction =function(startTime)&#123;</span></span><br><span class="line"><span class="comment">//    var timeNow = Date.now()</span></span><br><span class="line"><span class="comment">//    console.log(&#x27;当前时间&#x27;+timeNow+&#x27;|| 时差：&#x27;+(timeNow-startTime));</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// var myInterval=setInterval(myfunction,5000,startTime);</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 轮子 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>高速单页面访问爬虫</title>
      <link href="/new/2021/09/02/GOLANG/%E9%AB%98%E9%80%9F%E5%8D%95%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E7%88%AC%E8%99%AB/"/>
      <url>/new/2021/09/02/GOLANG/%E9%AB%98%E9%80%9F%E5%8D%95%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>我们需要访问一个网站(某购物网站),访问一些已知的url(不同商品的页面,url是确定且已知的),并查询某一页面上的一个元素(一个特定位置的数据)</p><ul><li><p>访问过多次数会被封ip</p></li><li><p>有时一次访问不到,需要分几次</p></li><li><p>速度越快越好</p></li></ul><p>(最后的结果是,在200M家庭宽带上,实现412此访问,稳定在25-30秒,几乎不存在访问不到的情况)</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>最开始,我们使用较为简单的python request库来实现的第一版,探明了网站的大致原理</p><p>我们需要的只是极致的速度,并不需要太花里胡哨的解析功能,因此我们选择了速度最快的正则表达式,而不是beautiful soup,甚至lxml都没使用</p><p>然后,我们自然而然地尝试使用多线程并行解决,35个线程并行的时候速度达到最快,可在85秒左右跑完</p><p>但是速度依旧不尽人意,</p><p>我们认为,是每一个访问请求,都需要完整地执行,另外线程过于重,切换麻烦</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>最后,我们选择了go…..</p><p>en 换编程语言解决问题</p><p>(又一次 写一半懒得写了 代码贴这得了)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;math/rand&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;net/url&quot;</span></span><br><span class="line"><span class="string">&quot;regexp&quot;</span></span><br><span class="line"><span class="string">&quot;runtime&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 代理服务器</span></span><br><span class="line"><span class="keyword">const</span> proxyServer = <span class="string">&quot;http-dyn.abuyun.com:9020&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 代理隧道验证信息</span></span><br><span class="line"><span class="comment">//const proxyUser  = &quot;H4EL31417FG3813D&quot;</span></span><br><span class="line"><span class="comment">//const proxyPass  = &quot;3646428CBCF2C7C2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> AbuyunProxy <span class="keyword">struct</span> &#123;</span><br><span class="line">AppID <span class="keyword">string</span></span><br><span class="line">AppSecret <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> RawData <span class="keyword">struct</span> &#123;</span><br><span class="line">x <span class="keyword">string</span></span><br><span class="line">count <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p AbuyunProxy)</span> <span class="title">ProxyClient</span><span class="params">()</span> <span class="title">http</span>.<span class="title">Client</span></span> &#123;</span><br><span class="line">proxyUrl, _ := url.Parse(<span class="string">&quot;http://&quot;</span>+ p.AppID +<span class="string">&quot;:&quot;</span>+ p.AppSecret +<span class="string">&quot;@&quot;</span>+ proxyServer)</span><br><span class="line"><span class="keyword">return</span> http.Client&#123;Transport: &amp;http.Transport&#123;Proxy: http.ProxyURL(proxyUrl)&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">tempCut</span><span class="params">(s <span class="keyword">string</span>, no <span class="keyword">int</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> no==<span class="number">1</span>&#123;</span><br><span class="line">a := strings.Split(s, <span class="string">&quot;&lt;h2 class=\&quot;u-header-3\&quot;&gt;&quot;</span>)[<span class="number">1</span>]</span><br><span class="line">b := strings.Split(a, <span class="string">&quot;&lt;/h2&gt;&quot;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> no==<span class="number">2</span>&#123;</span><br><span class="line">a := strings.Split(s, <span class="string">&quot;name=\&quot;pdpAvailQty\&quot;\n\t\t\t\tvalue=\&quot;&quot;</span>)[<span class="number">1</span>]</span><br><span class="line">b := strings.Split(a, <span class="string">&quot;\&quot; /&gt;&quot;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;err&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">oriGet</span><span class="params">(x <span class="keyword">string</span>, count <span class="keyword">int</span>, dc *<span class="keyword">chan</span> RawData)</span></span>  &#123;</span><br><span class="line">UAs := [<span class="number">35</span>] <span class="keyword">string</span> &#123;</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident/6.0)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&quot;</span>,</span><br><span class="line"><span class="string">&quot;Opera/9.25 (Windows NT 5.1; U; en)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (compatible; Konqueror/3.5; Linux) KHTML/3.5.5 (like Gecko) (Kubuntu)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12&quot;</span>,</span><br><span class="line"><span class="string">&quot;Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.7 (KHTML, like Gecko) Ubuntu/11.04 Chromium/16.0.912.77 Chrome/16.0.912.77 Safari/535.7&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0 &quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.164 Safari/537.36&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (iPad; CPU OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (iPod; U; CPU like Mac OS X; en) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/3A101a Safari/419.3&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.94 Safari/537.36&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Linux; Android 4.0.4; Galaxy Nexus Build/IMM76B) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.133 Mobile Safari/535.19&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Android; Mobile; rv:14.0) Gecko/14.0 Firefox/14.0&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Linux; U; Android 4.0.4; en-gb; GT-I9300 Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Linux; U; Android 2.2; en-gb; GT-P1000 Build/FROYO) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.3; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41 Safari/535.1 QQBrowser/6.9.11079.201&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.3; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.472.33 Safari/534.3 SE 2.X MetaSr 1.0&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.3; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.3; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 6.1; ) AppleWebKit/534.12 (KHTML, like Gecko) Maxthon/3.0 Safari/534.12&quot;</span>,</span><br><span class="line"><span class="string">&quot;Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.9.168 Version/11.50&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0) Gecko/20100101 Firefox/6.0&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.163 Safari/535.1&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">targetUrl := fmt.Sprint(<span class="string">&quot;https://www.ti.com.cn/store/ti/zh/p/product/?p=&quot;</span>, x)</span><br><span class="line"><span class="comment">//targetUrl = &quot;http://pv.sohu.com/cityjson&quot;</span></span><br><span class="line"><span class="comment">// 初始化 proxy http client</span></span><br><span class="line">pxs := [...]AbuyunProxy &#123;</span><br><span class="line">&#123;<span class="string">&quot;H4EL31417FG3813D&quot;</span>, <span class="string">&quot;3646428CBCF2C7C2&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;HBZ0VS69I187WZ7D&quot;</span>, <span class="string">&quot;3736DEFA0B0FC628&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;H7Z826O900342Z5D&quot;</span>, <span class="string">&quot;6487A3C95BA89C6C&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;HDW041TFV8V79SAD&quot;</span>, <span class="string">&quot;24DE8D842E37BA15&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;H8D12G1P81E5UQ8D&quot;</span>, <span class="string">&quot;C4A4731DC6EB1A61&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;H669560TZW0709FD&quot;</span>, <span class="string">&quot;2359C5F8D4DF8717&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;H2BWGO7O837E6L5D&quot;</span>, <span class="string">&quot;9E4F3B6D90054AE4&quot;</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line">aProxies := pxs[rand.Intn(<span class="number">7</span>)]</span><br><span class="line">client := aProxies.ProxyClient()</span><br><span class="line"></span><br><span class="line">request, _ := http.NewRequest(<span class="string">&quot;GET&quot;</span>, targetUrl, bytes.NewBuffer([]<span class="keyword">byte</span>(<span class="string">``</span>)))</span><br><span class="line"></span><br><span class="line">request.Header.Set(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;close&quot;</span>)</span><br><span class="line">request.Header.Set(<span class="string">&quot;User-Agent&quot;</span>, UAs[rand.Intn(<span class="number">35</span>)])</span><br><span class="line">client.Timeout = <span class="number">8</span>*time.Second</span><br><span class="line">response, err := client.Do(request)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">//panic(&quot;failed to connect: &quot; + err.Error())</span></span><br><span class="line"><span class="keyword">if</span> count&lt;=<span class="number">5</span>&#123;</span><br><span class="line">nextcount := count +<span class="number">1</span></span><br><span class="line">*dc &lt;- RawData&#123;x, nextcount&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//fmt.Println(&quot;货物 &lt;h2 class=\&quot;u-header-3\&quot;&gt;具有跟踪功能的 4.5-42V 宽输入电压、电流模式同步降压控制器&lt;/h2&gt; 库存 name=\&quot;pdpAvailQty\&quot;\t\t\t\tvalue=\&quot;0\&quot; /&gt;&quot;)</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">bodyByte, err := ioutil.ReadAll(response.Body)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> count &lt;= <span class="number">5</span> &#123;</span><br><span class="line">nextcount := count + <span class="number">1</span></span><br><span class="line">*dc &lt;- RawData&#123;x, nextcount&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;读取 Body 时出错&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">response.Body.Close()</span><br><span class="line"></span><br><span class="line">body := <span class="keyword">string</span>(bodyByte)</span><br><span class="line"><span class="keyword">if</span> response.StatusCode==<span class="number">200</span> &#123;</span><br><span class="line">reg := regexp.MustCompile(<span class="string">`&lt;h2 class=&quot;u-header-3&quot;&gt;(.*)&lt;/h2&gt;`</span>)</span><br><span class="line">name := reg.FindString(body)</span><br><span class="line"><span class="comment">//fmt.Println(&quot;==============&quot;)</span></span><br><span class="line"><span class="keyword">if</span> name != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">reg1 := regexp.MustCompile(<span class="string">`name=&quot;pdpAvailQty&quot;\n\t\t\t\tvalue=&quot;(.*)&quot; /&gt;`</span>)</span><br><span class="line">inv := reg1.FindString(body)</span><br><span class="line"><span class="keyword">if</span> inv != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line"><span class="comment">//fmt.Println(&quot;货物&quot;, name, &quot;库存&quot;, strings.Replace(inv, &quot;\n&quot;, &quot;&quot;, -1))</span></span><br><span class="line">kcstr := tempCut(inv, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> kcstr == <span class="string">&quot;0&quot;</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;货物&quot;</span>, tempCut(name, <span class="number">1</span>), <span class="string">&quot;库存&quot;</span>, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;\n==============\n&quot;</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%c[0;41;36m%s%c[0m\n&quot;</span>, <span class="number">0x1B</span>, <span class="string">&quot;有货有货!\t&quot;</span>+tempCut(name, <span class="number">1</span>)+<span class="string">&quot;\t库存&quot;</span>+kcstr, <span class="number">0x1B</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;\n==============\n&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> response.StatusCode==<span class="number">404</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;货物编号&quot;</span>, x, <span class="string">&quot;不存在&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> response.StatusCode==<span class="number">403</span> &#123;</span><br><span class="line"><span class="comment">//fmt.Println(&quot;\n\n\n\n\n&quot;)</span></span><br><span class="line"><span class="comment">//fmt.Println(&quot;403&quot;)</span></span><br><span class="line"><span class="comment">//fmt.Println(&quot;\n\n\n\n\n&quot;)</span></span><br><span class="line"><span class="keyword">if</span> count&lt;=<span class="number">5</span>&#123;</span><br><span class="line">nextcount := count +<span class="number">1</span></span><br><span class="line">*dc &lt;- RawData&#123;x, nextcount&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//fmt.Println(&quot;货物 &lt;h2 class=\&quot;u-header-3\&quot;&gt;具有跟踪功能的 4.5-42V 宽输入电压、电流模式同步降压控制器&lt;/h2&gt; 库存 name=\&quot;pdpAvailQty\&quot;value=\&quot;0\&quot; /&gt;)&quot;)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(response.StatusCode)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//fmt.Println(&quot;Response Status:&quot;, response.Status==&quot;200 OK&quot;)</span></span><br><span class="line"><span class="comment">//fmt.Println(&quot;Response Header:&quot;, response.Header)</span></span><br><span class="line"><span class="comment">//fmt.Println(&quot;Response Body:\n&quot;, body)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">runtime.GOMAXPROCS(runtime.NumCPU())</span><br><span class="line"><span class="comment">//targetUrl := &quot;http://pv.sohu.com/cityjson&quot;</span></span><br><span class="line"><span class="comment">//targetUrl := &quot;https://www.abuyun.com/switch-ip&quot;</span></span><br><span class="line">start := time.Now().Unix()</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">if</span> start&gt;<span class="number">1630382820</span>&#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(<span class="number">10</span>*time.Millisecond)</span><br><span class="line">fmt.Println(<span class="string">&quot;等待中&quot;</span>, start)</span><br><span class="line">start = time.Now().Unix()</span><br><span class="line">&#125;</span><br><span class="line">Datachannel := <span class="built_in">make</span>(<span class="keyword">chan</span> RawData, <span class="number">100</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">goodsStr, e := ioutil.ReadFile(<span class="string">&quot;./goods.txt&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> e != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;read file error&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">countSplit := strings.Split(<span class="keyword">string</span>(goodsStr), <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(countSplit); i++ &#123;</span><br><span class="line"><span class="keyword">if</span> countSplit[i] != <span class="string">&quot;&quot;</span>&#123;</span><br><span class="line"><span class="comment">//time.Sleep(10*time.Millisecond)</span></span><br><span class="line">Datachannel &lt;- RawData&#123;strings.Replace(countSplit[i], <span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="number">-1</span>), <span class="number">1</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> rd RawData</span><br><span class="line"><span class="keyword">var</span> blankTime <span class="keyword">int64</span></span><br><span class="line">blankTime = <span class="number">1000000000000000000</span></span><br><span class="line"><span class="comment">//flag := true</span></span><br><span class="line"><span class="keyword">for</span> <span class="literal">true</span> &#123;</span><br><span class="line">time.Sleep(<span class="number">20</span>*time.Millisecond)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(Datachannel) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">if</span> blankTime + <span class="number">4</span> &lt; time.Now().Unix() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;程序结束&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//if flag &#123;</span></span><br><span class="line"><span class="comment">//flag = false</span></span><br><span class="line"><span class="comment">//fmt.Println(&quot; ==  RawData空了 ==&quot;)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//flag = true</span></span><br><span class="line">rd = &lt;- Datachannel</span><br><span class="line"><span class="keyword">go</span> oriGet(rd.x, rd.count,  &amp;Datachannel)</span><br><span class="line">blankTime = time.Now().Unix()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;over !&quot;</span>)</span><br><span class="line">end := time.Now().Unix()</span><br><span class="line">fmt.Print(<span class="string">&quot;总共耗时:&quot;</span>)</span><br><span class="line">fmt.Println(end-start)</span><br><span class="line">inputText := <span class="string">&quot;&quot;</span></span><br><span class="line">fmt.Scanf(<span class="string">&quot;%s&quot;</span>, &amp;inputText)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GOLANG </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>js操作dom对象</title>
      <link href="/new/2021/08/20/JS/js%E6%93%8D%E4%BD%9Cdom%E5%AF%B9%E8%B1%A1/"/>
      <url>/new/2021/08/20/JS/js%E6%93%8D%E4%BD%9Cdom%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>1</p><h2 id="一-什么是DOM"><a href="#一-什么是DOM" class="headerlink" title="一, 什么是DOM"></a>一, 什么是DOM</h2><p>HTML Document Object Model（文档对象模型）</p><ul><li>  HTML DOM 定义了访问和操作HTML文档的标准方法</li><li>  HTML DOM 把 HTML 文档呈现为带有元素、属性和文本的树结构（节点树)</li></ul><h2 id="二-DOM树"><a href="#二-DOM树" class="headerlink" title="二, DOM树"></a>二, DOM树</h2><p>把一篇HTML,可以根据其包含结构,组成一棵树</p><p>具体去百度叭</p><h2 id="三-DOM节点"><a href="#三-DOM节点" class="headerlink" title="三, DOM节点"></a>三, DOM节点</h2><h3 id="节点类型"><a href="#节点类型" class="headerlink" title="节点类型:"></a>节点类型:</h3><p>DOM 是这样规定的：</p><ul><li>整个文档是一个文档节点 </li><li>每个 HTML 标签是一个元素节点 </li><li>包含在 HTML 元素中的文本是文本节点 </li><li>每一个 HTML 属性是一个属性节点</li></ul><h3 id="节点关系"><a href="#节点关系" class="headerlink" title="节点关系:"></a>节点关系:</h3><p>节点树中的节点彼此拥有层级关系。<br>父(parent),子(child)和同胞(sibling)等术语用于描述这些关系。父节点拥有子节点。同级的子节点被称为同胞（兄弟或姐妹）。</p><ul><li>  在节点树中，顶端节点被称为根（root）</li><li>  每个节点都有父节点、除了根（它没有父节点）</li><li>  一个节点可拥有任意数量的孩子</li><li>  同胞是拥有相同父节点的节点</li></ul><h2 id="四-代码操作节点"><a href="#四-代码操作节点" class="headerlink" title="四, 代码操作节点"></a>四, 代码操作节点</h2><h3 id="获得DOM节点"><a href="#获得DOM节点" class="headerlink" title="获得DOM节点"></a>获得DOM节点</h3><ul><li>直接搜索节点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;idname&#x27;</span>);<span class="comment">//按照id查找，拿到的是一个标签对象</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;classname&#x27;</span>);<span class="comment">//按照class标签去找，得到的是一个数组里存放的标签</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;tagname&#x27;</span>);<span class="comment">//通过标签名去找，拿到的也是一个数组</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;yuan&#x27;</span>); <span class="comment">//按照name属性去找,拿到的也是一个数组</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>由于得到的结果是一个数组,因此就可以有对应的length属性,去获得总共有多少个节点,然后进一步操作</p><ul><li>上下文爬得 (通过一个节点,去获得另一个节点)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">parentElement           <span class="comment">// 父节点标签元素</span></span><br><span class="line">children                <span class="comment">// 所有子标签</span></span><br><span class="line">firstElementChild       <span class="comment">// 第一个子标签元素</span></span><br><span class="line">lastElementChild        <span class="comment">// 最后一个子标签元素</span></span><br><span class="line">nextElementtSibling     <span class="comment">// 下一个兄弟标签元素</span></span><br><span class="line">previousElementSibling  <span class="comment">// 上一个兄弟标签元素</span></span><br></pre></td></tr></table></figure><p>栗子:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    方式二：导航查找</span></span><br><span class="line"><span class="comment">//&lt;div id =&#x27;div1&#x27;&gt;</span></span><br><span class="line"><span class="comment">//     &lt;div class=&quot;div2&quot; name = &#x27;haiyan&#x27;&gt;lallala&lt;/div&gt;</span></span><br><span class="line"><span class="comment">//     &lt;div name=&quot;haiyan&quot;&gt;lkkaakkka&lt;/div&gt;</span></span><br><span class="line"><span class="comment">//     &lt;div id =&#x27;div3&#x27;&gt;aaaaaaaaaaaaaa&lt;/div&gt;</span></span><br><span class="line"><span class="comment">//    &lt;p&gt;hrllo&lt;/p&gt;</span></span><br><span class="line"><span class="comment">//&lt;/div&gt;</span></span><br><span class="line"><span class="comment">//注意：1.如果是数组的话后面切记getElementsByClassName(&#x27;div2&#x27;)[0]</span></span><br><span class="line"><span class="comment">//        2.查找元素的那些方法Elements加了s的打印的就是数组</span></span><br><span class="line"><span class="comment">//    1，==================</span></span><br><span class="line">    <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;div2&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> ele1= ele.parentElement;</span><br><span class="line">    <span class="built_in">console</span>.log(ele1)  ;<span class="comment">//找div2标签的父亲</span></span><br><span class="line"><span class="comment">//    2.===============</span></span><br><span class="line">    <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> ele1 = ele.children;</span><br><span class="line">    <span class="built_in">console</span>.log(ele1) ; <span class="comment">//找到div1下的所有的子标签</span></span><br><span class="line"><span class="comment">//    3.===================</span></span><br><span class="line">    <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> ele1 = ele.firstElementChild;</span><br><span class="line">    <span class="built_in">console</span>.log(ele1);  <span class="comment">//找到div1下的第一个子标签的元素</span></span><br><span class="line"><span class="comment">//    4.==================</span></span><br><span class="line">    <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> ele1 = ele.lastElementChild;</span><br><span class="line">    <span class="built_in">console</span>.log(ele1);  <span class="comment">//找到div1下的最后一个子标签的元素</span></span><br><span class="line"><span class="comment">//    5.===============</span></span><br><span class="line">    <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;haiyan&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> ele1 = ele.nextElementSibling;</span><br><span class="line">    <span class="built_in">console</span>.log(ele1) ; <span class="comment">//下一个兄弟标签元素</span></span><br><span class="line"><span class="comment">//    6.===============</span></span><br><span class="line">    <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;haiyan&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> ele1 = ele.previousElementSibling;</span><br><span class="line">    <span class="built_in">console</span>.log(ele1)  <span class="comment">//上一个兄弟标签元素</span></span><br></pre></td></tr></table></figure><h3 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tag=<span class="built_in">document</span>.createElement(“input<span class="string">&quot;)</span></span><br><span class="line"><span class="string">tag.setAttribute(&#x27;type&#x27;,&#x27;text&#x27;);</span></span><br></pre></td></tr></table></figure><h3 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">追加一个子节点（作为最后的子节点）</span><br><span class="line">somenode.appendChild(newnode)</span><br><span class="line">  </span><br><span class="line">把增加的节点放到某个节点的前边</span><br><span class="line">somenode.insertBefore(newnode,某个节点);</span><br></pre></td></tr></table></figure><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">removeChild()：获得要删除的元素，通过父元素调用删除</span><br></pre></td></tr></table></figure><h3 id="替换节点"><a href="#替换节点" class="headerlink" title="替换节点"></a>替换节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">somenode.replaceChild(newnode, 某个节点);</span><br></pre></td></tr></table></figure><h3 id="操作节点"><a href="#操作节点" class="headerlink" title="操作节点"></a>操作节点</h3><p>1.获取文本节点的值：innerText  innerHTML</p><p>innerText:不管你是赋值还是取值，只能识别纯文本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    文本属性</span></span><br><span class="line"><span class="comment">//  1.innerText:不管你是赋值还是取值，只能识别纯文本</span></span><br><span class="line">        <span class="keyword">var</span> a1 = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;c2&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//        console.log(a1);</span></span><br><span class="line">        <span class="comment">//取值操作</span></span><br><span class="line">        <span class="built_in">console</span>.log(a1.innerText); <span class="comment">//你好吗/</span></span><br><span class="line">        <span class="built_in">console</span>.log(a1.innerHTML); <span class="comment">//你好吗/</span></span><br><span class="line">        <span class="comment">//赋值操作</span></span><br><span class="line">        a1.innerText=<span class="string">&#x27;Egon&#x27;</span>;</span><br><span class="line">        a1.innerHTML=<span class="string">&#x27;&lt;a href=&quot;&quot;&gt;hello&lt;/a&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">//  2.innerHtml:既可以识别纯文本，也可以识别标签</span></span><br><span class="line">        <span class="keyword">var</span> b1 = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;c2&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="comment">//        console.log(b1);</span></span><br><span class="line">        <span class="comment">//取值操作</span></span><br><span class="line">        <span class="built_in">console</span>.log(b1.innerText);</span><br><span class="line">        <span class="built_in">console</span>.log(b1.innerHTML);</span><br><span class="line">        <span class="comment">//赋值操作</span></span><br><span class="line">        b1.innerText = <span class="string">&#x27;lala&#x27;</span>;</span><br><span class="line">        b1.innerHTML = <span class="string">&#x27;&lt;input type=&quot;text&quot;&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>2.属性（attribute）操作：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">elementNode.setAttribute(name,value)   </span><br><span class="line">elementNode.getAttribute(属性名)        &lt;--------------&gt;elementNode.属性名(DHTML)</span><br><span class="line">elementNode.removeAttribute(“属性名”);</span><br></pre></td></tr></table></figure><p>3.value获取当前选中的value值</p><ol><li>input</li><li>select （selectedIndex）</li><li>textarea  </li></ol><p>4.关于class的操作：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//   class属性=============</span></span><br><span class="line">     <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;c1&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">     <span class="built_in">console</span>.log(ele.className); <span class="comment">//打印类的名字</span></span><br><span class="line">      </span><br><span class="line">     ele.classList.add(<span class="string">&#x27;hide&#x27;</span>);</span><br><span class="line">     <span class="built_in">console</span>.log(ele); <span class="comment">//&lt;div class=&quot;c1 hide&quot; id=&quot;d1&quot;&gt;</span></span><br><span class="line"> </span><br><span class="line">     ele.classList.remove(<span class="string">&#x27;hide&#x27;</span>);<span class="comment">//吧添加的remove移除了</span></span><br><span class="line">     <span class="built_in">console</span>.log(ele)</span><br></pre></td></tr></table></figure><p>5.改变css样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=<span class="string">&quot;p2&quot;</span>&gt;Hello world!&lt;/p&gt;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;p2&quot;</span>).style.color=<span class="string">&quot;blue&quot;</span>;</span><br><span class="line"> </span><br><span class="line">                             .style.fontSize=48px</span><br></pre></td></tr></table></figure><h2 id="DOM-Event-事件"><a href="#DOM-Event-事件" class="headerlink" title="DOM Event(事件)"></a>DOM Event(事件)</h2><p>1.事件类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">onclick        当用户点击某个对象时调用的事件句柄。</span><br><span class="line">ondblclick     当用户双击某个对象时调用的事件句柄。</span><br><span class="line"> </span><br><span class="line">onfocus        元素获得焦点。               练习：输入框</span><br><span class="line">onblur         元素失去焦点。               应用场景：用于表单验证,用户离开某个输入框时,代表已经输入完了,我们可以对它进行验证.</span><br><span class="line">onchange       域的内容被改变。             应用场景：通常用于表单元素,当元素内容被改变时触发.（三级联动）</span><br><span class="line"> </span><br><span class="line">onkeydown      某个键盘按键被按下。          应用场景: 当用户在最后一个输入框按下回车按键时,表单提交.</span><br><span class="line">onkeypress     某个键盘按键被按下并松开。</span><br><span class="line">onkeyup        某个键盘按键被松开。</span><br><span class="line"> </span><br><span class="line">onload         一张页面或一幅图像完成加载。</span><br><span class="line"> </span><br><span class="line">onmousedown    鼠标按钮被按下。</span><br><span class="line">onmousemove    鼠标被移动。</span><br><span class="line">onmouseout     鼠标从某元素移开。</span><br><span class="line">onmouseover    鼠标移到某元素之上。</span><br><span class="line">onmouseleave   鼠标从元素离开</span><br><span class="line"> </span><br><span class="line">onselect       文本被选中。</span><br><span class="line">onsubmit       确认按钮被点击</span><br></pre></td></tr></table></figure><p>2.绑定事件方式</p><p>方式一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--绑定事件的方式一--&gt;</span><br><span class="line">&lt;div onclick&#x3D;&quot;foo(this)&quot;&gt;div&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;c1&quot;&gt;div2&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function foo(self) &#123;</span><br><span class="line">        console.log(self); &#x2F;&#x2F;&lt;div onclick&#x3D;&quot;foo(this)&quot; style&#x3D;&quot;color: red;&quot;&gt;</span><br><span class="line">        self.style.color &#x3D; &#39;red&#39;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>方式二</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;方式二</span><br><span class="line">&#x2F;&#x2F;    事件的绑定方式2：标签对象.on事件 &#x3D; function ()&#123;&#125;</span><br><span class="line">     var ele&#x3D;document.getElementsByClassName(&quot;c1&quot;)[0];</span><br><span class="line">     ele.onclick&#x3D;function () &#123;</span><br><span class="line">        console.log(this); &#x2F;&#x2F; this 代指： 当前触发时间的标签对象；</span><br><span class="line">        this.style.fontSize&#x3D;&quot;30px&quot;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>3.事件介绍</p><p>4.事件传播</p>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>golang调用Windows api</title>
      <link href="/new/2021/08/18/GOLANG/golang%E8%B0%83%E7%94%A8WindowsAPI/"/>
      <url>/new/2021/08/18/GOLANG/golang%E8%B0%83%E7%94%A8WindowsAPI/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>Windows Api 文档一套:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;zh-cn&#x2F;windows&#x2F;win32&#x2F;apiindex&#x2F;api-index-portal</span><br></pre></td></tr></table></figure><h2 id="调用语法"><a href="#调用语法" class="headerlink" title="调用语法"></a>调用语法</h2><h3 id="加载dll"><a href="#加载dll" class="headerlink" title="加载dll"></a>加载dll</h3><p>第一步就是加载api所在的dll,分为两种,一种是懒加载,一种是立即加载</p><ul><li>懒加载 - 使用syscall.NewLazyDLL以懒加载方式加载DLL，返回*LazyDLL，只在第一次调用其函数时才加载DLL</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>（</span><br><span class="line">    kernel32DLL = syscall.NewLazyDLL(<span class="string">&quot;kernel32.dll&quot;</span>)</span><br><span class="line">）</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>立即加载 - 使用syscall.LoadLibrary来立即加载DLL</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>（</span><br><span class="line">    kernel32, _ = syscall.LoadLibrary(<span class="string">&quot;kernel32.dll&quot;</span>)</span><br><span class="line">）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="获得api函数"><a href="#获得api函数" class="headerlink" title="获得api函数"></a>获得api函数</h3><p>对应加载方式,一共有两种,<br>当采用懒加载的时候,调用dll. NewProc(“ProcedureName”)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">procOpenProcess = kernel32DLL.NewProc(“OpenProcess”)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当采用立即加载时,调用syscall.GetProcAddress</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">findWindow, _ := syscall.GetProcAddress(user32, <span class="string">&quot;FindWindowW&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="调用api函数"><a href="#调用api函数" class="headerlink" title="调用api函数"></a>调用api函数</h3><p>与加载DLL方式对应，采用不同方式调用函数：</p><p>懒加载时调用proc.Call函数<br>立即加载时调用syscall.Syscall函数及其变体</p><p>注意,在go1.1.3中，无法调用超过18个参数的函数</p><p><a href="https://blog.csdn.net/runhua/article/details/98098447">https://blog.csdn.net/runhua/article/details/98098447</a></p>]]></content>
      
      
      <categories>
          
          <category> GOLANG </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>boshen.css</title>
      <link href="/new/2021/08/18/web/boshen.css/"/>
      <url>/new/2021/08/18/web/boshen.css/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一个模仿GitHub的主题</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    * &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.toptitle</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* position: fixed; */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">72px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">36</span>, <span class="number">41</span>, <span class="number">46</span>);</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.toptitle-logo</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">105px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.toptitle-logo</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.toptitle-lefttext</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;微软雅黑&quot;</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.toptitle-righttext</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;微软雅黑&quot;</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.toptitle-rightbtn</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid, red, <span class="number">1px</span>;</span><br><span class="line">    <span class="comment">/* border-radius: 9px; */</span></span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">103px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.toptitle-rightbtn</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.toptitle-hold</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">36</span>, <span class="number">41</span>, <span class="number">46</span>);</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">72px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">word-break</span>: initial;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">tr</span> &#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#dfe2e5</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(2n)</span>,</span><br><span class="line">    <span class="selector-tag">thead</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f8f8f8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dfe2e5</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">13px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dfe2e5</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">13px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">th</span><span class="selector-pseudo">:first-child</span>,</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">td</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">th</span><span class="selector-pseudo">:last-child</span>,</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">td</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">21px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0366d6</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">51.6px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.fileManager</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">26px</span> <span class="number">60px</span> <span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.fileManager-title</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f8ff</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#C8E1FF</span>;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#24292E</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-title-textleft</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-title-textright</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.fileManager-item</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#E1E4E8</span>;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F6F8FA</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item-bottom_</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item-icon</span> &#123;</span><br><span class="line">    <span class="comment">/* 6A737D */</span></span><br><span class="line">    <span class="comment">/* #79B8FF */</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">9px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item-icon</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">17px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item-rightbtn</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">9px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">9px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item-rightbtn</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">17px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item-fileName</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">26%</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item-description</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fileManager-item-date</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.bsform</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">26px</span> <span class="number">8%</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background-color</span>:white;</span><br><span class="line">    <span class="attribute">border</span>:solid <span class="number">1px</span> <span class="number">#cfd1d3</span>;</span><br><span class="line">    <span class="attribute">border-width</span>:<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">30px</span>;</span><br><span class="line">    <span class="comment">/*box-shadow: 0 0 0 1px #cfd1d3*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.bsform-title</span> &#123;</span><br><span class="line">    <span class="attribute">color </span>:<span class="number">#24292E</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">19px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-description</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">11px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">color </span>:<span class="number">#24292E</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-subDescription</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">11px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#586069</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-inlineDescription</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color </span>:<span class="number">#24292E</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.bsform-inputLine</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-inputLine</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FAFBFC</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> <span class="built_in">rgb</span>(<span class="number">225</span>, <span class="number">228</span>, <span class="number">232</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-inputLine</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#0366D6</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#B3D1F3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.bsform-button</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-button</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.4s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-button_green</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#2B9048</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#2EA44f</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-button_green</span> <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#2C974B</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-button_green</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#61b87a</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-button_green</span> <span class="selector-tag">input</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#94D3A2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.bsform-button_white</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#D9DBDB</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FAFBFC</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#24292E</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-button_white</span> <span class="selector-tag">input</span><span class="selector-attr">[type=button]</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F3F4F6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-button_white</span> <span class="selector-tag">input</span><span class="selector-attr">[type=button]</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#B3D1F3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsform-button_white</span> <span class="selector-tag">input</span><span class="selector-attr">[type=button]</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#EDEFF2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* .bsDropDownBox &#123;</span></span><br><span class="line"><span class="comment">    display: inline-block;</span></span><br><span class="line"><span class="comment">    position: relative;</span></span><br><span class="line"><span class="comment">    width: 190px;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    .bsDropDownBox select &#123;</span></span><br><span class="line"><span class="comment">    display: none;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    .bsDropDownBoxPuppet &#123;</span></span><br><span class="line"><span class="comment">    background-color: dodgerblue;</span></span><br><span class="line"><span class="comment">    border-radius: 6px;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    .bsDropDownBoxPuppet:after &#123;</span></span><br><span class="line"><span class="comment">    position: absolute;</span></span><br><span class="line"><span class="comment">    content: &quot;&quot;;</span></span><br><span class="line"><span class="comment">    top: 14px;</span></span><br><span class="line"><span class="comment">    right: 10px;</span></span><br><span class="line"><span class="comment">    width: 0;</span></span><br><span class="line"><span class="comment">    height: 0;</span></span><br><span class="line"><span class="comment">    border: 6px solid transparent;</span></span><br><span class="line"><span class="comment">    border-color: #fff transparent transparent transparent;</span></span><br><span class="line"><span class="comment">    border-radius: 6px 0px 6px 0px;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    .bsDropDownBoxPuppet.select-arrow-active:after &#123;</span></span><br><span class="line"><span class="comment">    border-color: transparent transparent #fff transparent;</span></span><br><span class="line"><span class="comment">    top: 7px;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    .bsDropDownBoxPuppet-items div,.bsDropDownBoxPuppet &#123;</span></span><br><span class="line"><span class="comment">    color: #ffffff;</span></span><br><span class="line"><span class="comment">    padding: 8px 16px;</span></span><br><span class="line"><span class="comment">    border: 1px solid transparent;</span></span><br><span class="line"><span class="comment">    border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;</span></span><br><span class="line"><span class="comment">    cursor: pointer;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    .bsDropDownBoxPuppet-items &#123;</span></span><br><span class="line"><span class="comment">    position: absolute;</span></span><br><span class="line"><span class="comment">    background-color: DodgerBlue;</span></span><br><span class="line"><span class="comment">    top: 100%;</span></span><br><span class="line"><span class="comment">    left: 0;</span></span><br><span class="line"><span class="comment">    right: 0;</span></span><br><span class="line"><span class="comment">    z-index: 99;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    .bsDropDownBoxPuppet-hide_ &#123;</span></span><br><span class="line"><span class="comment">    display: none;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    .bsDropDownBoxPuppet-items div:hover, .same-as-selected &#123;</span></span><br><span class="line"><span class="comment">    background-color: rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="comment">    &#125; */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.bsCenterBox</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">310px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsCenterBox-title</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">119px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0366d6</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">width</span>: fit-content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.bsCenterForm</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">310px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">#EAECEF</span> <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F6F8FA</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 往下的dropodown未仔细排查 */</span></span><br><span class="line">    <span class="selector-class">.dropbtn</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4CAF50</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.dropdown</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.dropdown-content</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">160px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.dropdown-content</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.dropdown-content</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropbtn</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3e8e41</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    &lt;div class=&quot;dropdown&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;button class=&quot;dropbtn&quot;&gt;下拉菜单&lt;/button&gt;</span></span><br><span class="line"><span class="comment">    &lt;div class=&quot;dropdown-content&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;a href=&quot;//www.runoob.com&quot;&gt;菜鸟教程 1&lt;/a&gt;</span></span><br><span class="line"><span class="comment">        &lt;a href=&quot;//www.runoob.com&quot;&gt;菜鸟教程 2&lt;/a&gt;</span></span><br><span class="line"><span class="comment">        &lt;a href=&quot;//www.runoob.com&quot;&gt;菜鸟教程 3&lt;/a&gt;</span></span><br><span class="line"><span class="comment">    &lt;/div&gt;</span></span><br><span class="line"><span class="comment">    &lt;/div&gt;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.radio</span>,<span class="selector-class">.checkbox</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1.2rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1.2rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> <span class="number">#dddddd</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">0.6rem</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0.6rem</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.8rem</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top;</span><br><span class="line">    <span class="attribute">cursor</span>: default;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: none;  <span class="comment">/**隐藏原生控件**/</span></span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="selector-class">.checkbox</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0.1rem</span>;   <span class="comment">/**复选框的圆角要小一些**/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**选择后的样式**/</span></span><br><span class="line">    <span class="selector-class">.radio</span><span class="selector-pseudo">:checked</span>,<span class="selector-class">.checkbox</span><span class="selector-pseudo">:checked</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#0366D6</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> <span class="number">#0366D6</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">1</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-clip</span>: padding-box;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**选择后 里面小对勾样式**/</span></span><br><span class="line">    <span class="selector-class">.radio</span><span class="selector-pseudo">:checked</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.checkbox</span><span class="selector-pseudo">:checked</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0.5rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0.3rem</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: none;</span><br><span class="line">    <span class="attribute">border-right</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">0.25rem</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">0.25rem</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.radio_oul</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用golang实现套壳的shell</title>
      <link href="/new/2021/08/15/GOLANG/%E4%BD%BF%E7%94%A8golang%E5%AE%9E%E7%8E%B0%E5%A5%97%E5%A3%B3%E7%9A%84shell/"/>
      <url>/new/2021/08/15/GOLANG/%E4%BD%BF%E7%94%A8golang%E5%AE%9E%E7%8E%B0%E5%A5%97%E5%A3%B3%E7%9A%84shell/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>1</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;bufio&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;os/exec&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">reader := bufio.NewReader(os.Stdin)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        fmt.Print(<span class="string">&quot;$ &quot;</span>)</span><br><span class="line">        cmdString, err := reader.ReadString(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Fprintln(os.Stderr, err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cmdString = strings.TrimSuffix(cmdString, <span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">        cmd := exec.Command(cmdString)</span><br><span class="line">        cmd.Stderr = os.Stderr</span><br><span class="line">        cmd.Stdout = os.Stdout</span><br><span class="line"></span><br><span class="line">        err = cmd.Run()</span><br><span class="line">fmt.Println(<span class="string">&quot;nice&quot;</span>)</span><br><span class="line">fmt.Println(cmd.Stdout)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;here&quot;</span>)</span><br><span class="line">            fmt.Fprintln(os.Stderr, err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GOLANG </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python实时获取cmd的输出</title>
      <link href="/new/2021/08/14/PYTHON%E5%B0%8F%E6%8A%80%E5%B7%A7/python%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%8F%96cmd%E7%9A%84%E8%BE%93%E5%87%BA/"/>
      <url>/new/2021/08/14/PYTHON%E5%B0%8F%E6%8A%80%E5%B7%A7/python%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%8F%96cmd%E7%9A%84%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line">cmd = <span class="string">&#x27;python a.py&#x27;</span></span><br><span class="line">screenData = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    line = screenData.stdout.readline()</span><br><span class="line">    line = line.decode(<span class="string">&#x27;gbk&#x27;</span>).strip(<span class="string">&quot;b&#x27;&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;out&quot;</span>, line)</span><br><span class="line">    <span class="keyword">if</span> line == <span class="string">b&#x27;&#x27;</span> <span class="keyword">or</span> subprocess.Popen.poll(screenData) == <span class="number">0</span>:</span><br><span class="line">        screenData.stdout.close()</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>用于测试的a.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> a&lt;<span class="number">5</span>:</span><br><span class="line">    print(a)</span><br><span class="line">    a+=<span class="number">1</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PYTHON小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>redis</title>
      <link href="/new/2021/08/14/NOSQL/redis/"/>
      <url>/new/2021/08/14/NOSQL/redis/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://github.com/tporadowski/redis/releases">https://github.com/tporadowski/redis/releases</a></p><p>选择,然后解压安装即可</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>服务端: (后面的配置文件可以省略 省略就是用默认的)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure><p>访问端:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli.exe -h <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> -p <span class="number">6379</span></span><br></pre></td></tr></table></figure><h3 id="试用"><a href="#试用" class="headerlink" title="试用"></a>试用</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> boshen <span class="number">666</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get boshen</span><br></pre></td></tr></table></figure><h3 id="redis数据类型"><a href="#redis数据类型" class="headerlink" title="redis数据类型"></a>redis数据类型</h3><p>一共5种: string字符串 hash哈希 list列表 set集合 zset有序集合</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串:"></a>字符串:</h4><p>最基本类型,一个key对应一个value</p><p>二进制安全,可以存任何数据,最大长度为512M</p><p>(其实不加引号也是字符串,也可以)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> boshen &quot;哈哈哈&quot;</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get boshen</span><br></pre></td></tr></table></figure><h4 id="哈希"><a href="#哈希" class="headerlink" title="哈希:"></a>哈希:</h4>]]></content>
      
      
      <categories>
          
          <category> NOSQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Django-新建工程的一般设置</title>
      <link href="/new/2021/08/14/DJANGO/Django-%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E7%9A%84%E4%B8%80%E8%88%AC%E8%AE%BE%E7%BD%AE/"/>
      <url>/new/2021/08/14/DJANGO/Django-%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E7%9A%84%E4%B8%80%E8%88%AC%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="1-一些工具代码"><a href="#1-一些工具代码" class="headerlink" title="1, 一些工具代码"></a>1, 一些工具代码</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">8083</span></span><br><span class="line">python manage.py runserver <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">107</span>:<span class="number">8083</span></span><br><span class="line"></span><br><span class="line">python manage.py shell</span><br><span class="line"></span><br><span class="line">python manage.py makemigrations first</span><br><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line">netstat -ano | <span class="built_in">findstr</span> &quot;:<span class="number">800</span>&quot;</span><br></pre></td></tr></table></figure><h3 id="2-settings-py"><a href="#2-settings-py" class="headerlink" title="2, settings.py"></a>2, settings.py</h3><p>注册一下app</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;first&#x27;</span>  &lt;----- 这里</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="3-templates文件夹"><a href="#3-templates文件夹" class="headerlink" title="3,templates文件夹"></a>3,templates文件夹</h3><p>视图函数会默认索引app内部是否有templates文件夹,在其中找静态文件</p><p>找不到去全局找</p><p>全局模板需要单独配置:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [BASE_DIR / <span class="string">&#x27;templates&#x27;</span>]               (*)</span><br><span class="line">        ,</span><br><span class="line">        <span class="string">&#x27;APP_DIRS&#x27;</span>: <span class="literal">True</span>,                              (*)</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;context_processors&#x27;</span>: [</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.debug&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.request&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="4-静态文件也是需要配置的"><a href="#4-静态文件也是需要配置的" class="headerlink" title="4,静态文件也是需要配置的"></a>4,静态文件也是需要配置的</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os                                        (*)</span><br><span class="line"><span class="comment"># STATIC_ROOT = os.path.join(BASE_DIR,&#x27;static/&#x27;)</span></span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS = (                             (*)</span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">&quot;static/&quot;</span>),           (*)</span><br><span class="line">)                                                (*)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>golang字符串</title>
      <link href="/new/2021/08/14/GOLANG/golang%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/new/2021/08/14/GOLANG/golang%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>字符串分割 替换 截取</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    str := <span class="string">&quot;赵,钱,孙,李,赵&quot;</span></span><br><span class="line">    <span class="comment">//字符串分割, 使用字符分割</span></span><br><span class="line">    str1 := strings.Split(str, <span class="string">&quot;,&quot;</span>)</span><br><span class="line">    fmt.Println(str1[<span class="number">0</span>]) <span class="comment">//赵</span></span><br><span class="line">    fmt.Println(str1[<span class="number">1</span>]) <span class="comment">//钱</span></span><br><span class="line">    fmt.Println(str1[<span class="number">2</span>]) <span class="comment">//孙</span></span><br><span class="line">    fmt.Println(str1[<span class="number">3</span>]) <span class="comment">//李</span></span><br><span class="line">    fmt.Println(str1[<span class="number">4</span>]) <span class="comment">//赵</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符串替换, -1表示全部替换, 0表示不替换, 1表示替换第一个, 2表示替换第二个...</span></span><br><span class="line">    str2 := strings.Replace(str, <span class="string">&quot;赵&quot;</span>, <span class="string">&quot;钱&quot;</span>, <span class="number">-1</span>)</span><br><span class="line">    fmt.Println(str2) <span class="comment">//钱,钱,孙,李,钱</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符串截取, 一个汉字3个字节, 还有一个逗号</span></span><br><span class="line">    str3 := str[<span class="number">4</span> : <span class="built_in">len</span>(str)<span class="number">-4</span>]</span><br><span class="line">    fmt.Println(str3) <span class="comment">//钱,孙,李</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GOLANG </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>go的简单服务程序</title>
      <link href="/new/2021/08/14/GOLANG/go%E7%9A%84%E7%AE%80%E5%8D%95%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F/"/>
      <url>/new/2021/08/14/GOLANG/go%E7%9A%84%E7%AE%80%E5%8D%95%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>就是一个服务程序,处理点请求啥的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;fmt&quot;</span></span><br><span class="line">   <span class="string">&quot;net/http&quot;</span></span><br><span class="line">   <span class="string">&quot;os/exec&quot;</span></span><br><span class="line">   <span class="string">&quot;strconv&quot;</span></span><br><span class="line">   <span class="string">&quot;strings&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> AddForm = <span class="string">`</span></span><br><span class="line"><span class="string">&lt;form action=&quot;/u2zhPage&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string"> &lt;input type=&quot;text&quot; name=&quot;ustr&quot; /&gt;</span></span><br><span class="line"><span class="string"> &lt;input type=&quot;submit&quot; value=&quot;带\u的转化成汉字&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;form action=&quot;/zh2uPage&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string"> &lt;input type=&quot;text&quot; name=&quot;zhstr&quot; /&gt;</span></span><br><span class="line"><span class="string"> &lt;input type=&quot;submit&quot; value=&quot;汉字转换成带u的&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">   <span class="comment">//http.HandleFunc(&quot;/login1&quot;, login1)</span></span><br><span class="line">   <span class="comment">//http.HandleFunc(&quot;/login2&quot;, login2)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   http.HandleFunc(<span class="string">&quot;/&quot;</span>, indexPage)</span><br><span class="line">   http.HandleFunc(<span class="string">&quot;/u2zhPage&quot;</span>, u2zhPage)</span><br><span class="line">   http.HandleFunc(<span class="string">&quot;/zh2uPage&quot;</span>, zh2uPage)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 检测并监听端口</span></span><br><span class="line">   <span class="comment">//fl := true</span></span><br><span class="line">   <span class="comment">//url := &quot;http://localhost:&quot;</span></span><br><span class="line">   <span class="comment">//for i := 8080; i &lt; 8090; i++ &#123;</span></span><br><span class="line">   <span class="comment">// if PortNotInUse(i) &#123;</span></span><br><span class="line">   <span class="comment">//    fmt.Println(&quot;======&quot;)</span></span><br><span class="line">   <span class="comment">//    fmt.Println(i)</span></span><br><span class="line">   <span class="comment">//    fmt.Println(string(i))</span></span><br><span class="line">   <span class="comment">//    http.ListenAndServe(&quot;0.0.0.0:&quot;+string(i), nil)</span></span><br><span class="line">   <span class="comment">//    url = url + string(i) + &quot;/index&quot;</span></span><br><span class="line">   <span class="comment">//    fl = false</span></span><br><span class="line">   <span class="comment">//    break</span></span><br><span class="line">   <span class="comment">// &#125;</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line">   <span class="comment">//if fl &#123;</span></span><br><span class="line">   <span class="comment">// fmt.Println(&quot;start error,please check the port between from 8080 to 8089 is available&quot;)</span></span><br><span class="line">   <span class="comment">//&#125; else &#123;</span></span><br><span class="line">   <span class="comment">// fmt.Println(&quot;see in :&quot;)</span></span><br><span class="line">   <span class="comment">// fmt.Print(url)</span></span><br><span class="line">   <span class="comment">// for &#123;</span></span><br><span class="line">   <span class="comment">//    time.Sleep(3)</span></span><br><span class="line">   <span class="comment">// &#125;</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line">   http.ListenAndServe(<span class="string">&quot;0.0.0.0:8081&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">      <span class="keyword">for</span> &#123;</span><br><span class="line">         time.Sleep(<span class="number">3</span>)</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index 首页</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">indexPage</span><span class="params">(writer http.ResponseWriter,  request *http.Request)</span></span>  &#123;</span><br><span class="line">   writer.Header().Set(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html; charset=utf-8&quot;</span>)</span><br><span class="line">   fmt.Fprint(writer, AddForm)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">u2zhPage</span><span class="params">(writer http.ResponseWriter,  request *http.Request)</span></span> &#123;</span><br><span class="line">   fmt.Println(<span class="string">&quot;got here&quot;</span>)</span><br><span class="line">   ustr := request.PostFormValue(<span class="string">&quot;ustr&quot;</span>)</span><br><span class="line"></span><br><span class="line">   writer.Header().Set(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html; charset=utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line">   v, _ := zhToUnicode([]<span class="keyword">byte</span>(ustr))</span><br><span class="line"></span><br><span class="line">   fmt.Fprint(writer, <span class="keyword">string</span>(v))</span><br><span class="line">   fmt.Fprint(writer, AddForm)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">zh2uPage</span><span class="params">(writer http.ResponseWriter,  request *http.Request)</span></span> &#123;</span><br><span class="line">   fmt.Println(<span class="string">&quot;got here&quot;</span>)</span><br><span class="line">   zhstr := request.PostFormValue(<span class="string">&quot;zhstr&quot;</span>)</span><br><span class="line"></span><br><span class="line">   writer.Header().Set(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html; charset=utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line">   textQuoted := strconv.QuoteToASCII(zhstr)</span><br><span class="line">   v := textQuoted[<span class="number">1</span> : <span class="built_in">len</span>(textQuoted)<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">   fmt.Fprint(writer, v)</span><br><span class="line">   fmt.Fprint(writer, AddForm)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//接收x-www-form-urlencoded类型的post请求或者普通get请求</span></span><br><span class="line"><span class="comment">//func login2(writer http.ResponseWriter,  request *http.Request)  &#123;</span></span><br><span class="line"><span class="comment">// request.ParseForm()</span></span><br><span class="line"><span class="comment">// username, uError :=  request.Form[&quot;username&quot;]</span></span><br><span class="line"><span class="comment">// pwd, pError :=  request.Form[&quot;password&quot;]</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// var result  Resp</span></span><br><span class="line"><span class="comment">// if !uError || !pError &#123;</span></span><br><span class="line"><span class="comment">//    result.Code = &quot;401&quot;</span></span><br><span class="line"><span class="comment">//    result.Msg = &quot;登录失败&quot;</span></span><br><span class="line"><span class="comment">// &#125; else if username[0] == &quot;admin&quot; &amp;&amp; pwd[0] == &quot;123456&quot; &#123;</span></span><br><span class="line"><span class="comment">//    result.Code = &quot;200&quot;</span></span><br><span class="line"><span class="comment">//    result.Msg = &quot;登录成功&quot;</span></span><br><span class="line"><span class="comment">// &#125; else &#123;</span></span><br><span class="line"><span class="comment">//    result.Code = &quot;203&quot;</span></span><br><span class="line"><span class="comment">//    result.Msg = &quot;账户名或密码错误&quot;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// if err := json.NewEncoder(writer).Encode(result); err != nil &#123;</span></span><br><span class="line"><span class="comment">//    log.Fatal(err)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">zhToUnicode</span><span class="params">(raw []<span class="keyword">byte</span>)</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">   str, err := strconv.Unquote(strings.Replace(strconv.Quote(<span class="keyword">string</span>(raw)), <span class="string">`\\u`</span>, <span class="string">`\u`</span>, <span class="number">-1</span>))</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> []<span class="keyword">byte</span>(str), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PortNotInUse</span><span class="params">(port <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">   checkStatement := fmt.Sprintf(<span class="string">&quot;lsof -i:%d &quot;</span>, port)</span><br><span class="line">   output, _ := exec.Command(<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, checkStatement).CombinedOutput()</span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(output) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GOLANG </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>新建博客页面小工具(golang实现)</title>
      <link href="/new/2021/08/14/GOLANG/%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2%E5%B0%8F%E5%B7%A5%E5%85%B7(golang%E5%AE%9E%E7%8E%B0)/"/>
      <url>/new/2021/08/14/GOLANG/%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2%E5%B0%8F%E5%B7%A5%E5%85%B7(golang%E5%AE%9E%E7%8E%B0)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>话不多说 直接开始</p><p>因为hexo博客自带的new post 还得自己放categories和title</p><p>所以就自己写了一个</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法:"></a>使用方法:</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mt [到文件的相对路径(注意不需要加.<span class="built_in">md</span>扩展名)]</span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;path&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断文件是否存在  存在返回 true 不存在返回false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">checkFileIsExist</span><span class="params">(filename <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> exist = <span class="literal">true</span></span><br><span class="line"><span class="keyword">if</span> _, err := os.Stat(filename); os.IsNotExist(err) &#123;</span><br><span class="line">exist = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> exist</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">writeAFile</span><span class="params">(toWrite <span class="keyword">string</span>, filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> checkFileIsExist(filename) &#123; <span class="comment">//如果文件存在</span></span><br><span class="line">fmt.Println(<span class="string">&quot;该文件已经存在哦~&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">var</span> err1 error</span><br><span class="line"><span class="keyword">var</span> f *os.File</span><br><span class="line">f, err1 = os.Create(filename) <span class="comment">//创建文件</span></span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line">_,err1 = io.WriteString(f, toWrite) <span class="comment">//写入文件(字符串)</span></span><br><span class="line"><span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err1)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;oki&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将分割号统一为 &#x27;/&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">toDown</span><span class="params">(s <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">result := strings.Replace(s, <span class="string">&quot;\\\\&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="number">-1</span>)</span><br><span class="line">result = strings.Replace(result, <span class="string">&quot;//&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="number">-1</span>)</span><br><span class="line">result = strings.Replace(result, <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 整理两个路径,并返回拼接字符串</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">concatPath</span><span class="params">(patha, pathb <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">a := toDown(patha)</span><br><span class="line">b := toDown(pathb)</span><br><span class="line">ab := path.Join(a,b)</span><br><span class="line"><span class="keyword">return</span> ab</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(os.Args)==<span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;使用方法:&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;mt [相对路径+文件名]&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;注意, 不需要写.md扩展名&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">len</span>(os.Args)==<span class="number">2</span> &#123;</span><br><span class="line"><span class="comment">// 整理数据 (完整的路径)</span></span><br><span class="line">pwd, _ := os.Getwd()</span><br><span class="line">myPath := concatPath(pwd, os.Args[<span class="number">1</span>] + <span class="string">&quot;.md&quot;</span>)</span><br><span class="line">parts := strings.Split(myPath, <span class="string">&quot;/&quot;</span>)</span><br><span class="line"><span class="comment">// 解析数据 (分类数据slice 文章title-string)</span></span><br><span class="line">cata := <span class="built_in">make</span>([]<span class="keyword">string</span> ,<span class="number">0</span>)</span><br><span class="line">flag := <span class="literal">false</span> <span class="comment">// 标记是否往分类数组中写</span></span><br><span class="line"><span class="keyword">for</span> _,v := <span class="keyword">range</span> parts &#123;</span><br><span class="line"><span class="keyword">if</span> flag &#123;</span><br><span class="line">cata = <span class="built_in">append</span>(cata, v)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> v == <span class="string">&quot;_posts&quot;</span>&#123;</span><br><span class="line">flag = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">catastring := <span class="string">&quot;categories:\n   - [默认分类]\n&quot;</span></span><br><span class="line"><span class="keyword">var</span> title <span class="keyword">string</span></span><br><span class="line">title = parts[<span class="built_in">len</span>(parts)<span class="number">-1</span>]</span><br><span class="line">title = <span class="keyword">string</span>(title[:<span class="built_in">len</span>(title)<span class="number">-3</span>])</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(cata)&gt;<span class="number">0</span> &#123;</span><br><span class="line"></span><br><span class="line">cata = cata[:<span class="built_in">len</span>(cata)<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拼接cata字符串</span></span><br><span class="line">catastring = <span class="string">&quot;categories:\n   - [&quot;</span></span><br><span class="line"><span class="keyword">for</span> _,v := <span class="keyword">range</span> cata &#123;</span><br><span class="line">catastring = catastring + v + <span class="string">&quot; &quot;</span></span><br><span class="line">&#125;</span><br><span class="line">catastring = catastring[:<span class="built_in">len</span>(catastring)<span class="number">-1</span>] + <span class="string">&quot;]\n&quot;</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">toWrite := <span class="string">&quot;---\ntitle: &quot;</span></span><br><span class="line">toWrite += title</span><br><span class="line">toWrite += <span class="string">&quot;\ndate: &quot;</span></span><br><span class="line">toWrite += time.Now().Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>)</span><br><span class="line">toWrite += <span class="string">&quot;\ntags: []\n&quot;</span></span><br><span class="line">toWrite += catastring</span><br><span class="line">toWrite += <span class="string">&quot;---\n\n&quot;</span></span><br><span class="line"><span class="comment">// toWrite += &quot;&quot;</span></span><br><span class="line">writeAFile(toWrite, myPath)</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">len</span>(os.Args)==<span class="number">3</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;暂时莫得需求&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;似乎您这语法不大对啊&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GOLANG </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python 顺序无关的多线程实现</title>
      <link href="/new/2021/08/09/PYTHON%E5%B0%8F%E6%8A%80%E5%B7%A7/python%E9%A1%BA%E5%BA%8F%E6%97%A0%E5%85%B3%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0/"/>
      <url>/new/2021/08/09/PYTHON%E5%B0%8F%E6%8A%80%E5%B7%A7/python%E9%A1%BA%E5%BA%8F%E6%97%A0%E5%85%B3%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>如果遇到需求<br>有一批数据,每个数据都要执行一个函数<br>且先后执行顺序无所谓<br>就可以用这个轮子了</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="工具module"><a href="#工具module" class="headerlink" title="工具module"></a>工具module</h3><p>tool.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">v1.2 增加单元测试, 自动判定类型类型不对会报告</span></span><br><span class="line"><span class="string">v1.1 增加了返回值功能</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkingThread</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self , dataloader, workingfun, <span class="built_in">id</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(WorkingThread,self).__init__()</span><br><span class="line">        self.dataloader = dataloader</span><br><span class="line">        self.workingfun = workingfun</span><br><span class="line">        <span class="comment"># self.session = requests.Session()</span></span><br><span class="line">        self.<span class="built_in">id</span> = <span class="built_in">id</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># print(f&quot;线程&#123;str(self.id)&#125;启动&quot;)</span></span><br><span class="line">        got = self.dataloader.get()</span><br><span class="line">        <span class="keyword">while</span> got != <span class="string">&quot;boshen666&quot;</span>:</span><br><span class="line">            res = [self.workingfun(i) <span class="keyword">for</span> i <span class="keyword">in</span> got]</span><br><span class="line">            self.dataloader.appendResult(res)</span><br><span class="line">            got = self.dataloader.get()</span><br><span class="line">        <span class="comment"># print(f&quot;线程&#123;str(self.id)&#125;结束&quot;)</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataLoader</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, groupedData</span>):</span></span><br><span class="line">        self.groupedData = groupedData</span><br><span class="line">        self.lock = threading.Lock()</span><br><span class="line">        self.res = []</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.groupedData:</span><br><span class="line">            self.lock.acquire()</span><br><span class="line">            self.temp = self.groupedData[<span class="number">0</span>]</span><br><span class="line">            self.groupedData = self.groupedData[<span class="number">1</span>:]</span><br><span class="line">            self.lock.release()</span><br><span class="line">            <span class="keyword">return</span> self.temp</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;boshen666&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">appendResult</span>(<span class="params">self, res</span>):</span></span><br><span class="line">        self.res.extend(res)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getRes</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.res</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ControlThread</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, data, workingfun, threadnum, groupnum=<span class="number">5</span></span>):</span></span><br><span class="line">        <span class="comment"># todo 这个data只能接收列表,最好再支持一个迭代器</span></span><br><span class="line">        self.allData = data</span><br><span class="line">        self.debugData = data[<span class="number">0</span>]</span><br><span class="line">        self.workingfun = workingfun</span><br><span class="line">        self.threadnum = threadnum</span><br><span class="line">        self.groupnum = groupnum</span><br><span class="line">        self.canBeJoin = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 类型确认</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.allData = <span class="built_in">list</span>(self.allData)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            print(<span class="string">&quot;传入的数据并不可序列化&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (<span class="built_in">hasattr</span>(self.workingfun, <span class="string">&quot;__call__&quot;</span>)):</span><br><span class="line">            print(<span class="string">&quot;传入的工作函数并不是一个函数&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (<span class="built_in">type</span>(threadnum)==<span class="built_in">type</span>(<span class="number">1</span>)):</span><br><span class="line">            print(<span class="string">&quot;传入的进程数并不是一个数&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (<span class="built_in">type</span>(groupnum)==<span class="built_in">type</span>(<span class="number">1</span>)):</span><br><span class="line">            print(<span class="string">&quot;传入的数据单元大小并不是一个数&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="comment"># 整理data</span></span><br><span class="line">        self.groupedData = []</span><br><span class="line">        <span class="keyword">while</span> self.allData:</span><br><span class="line">            self.groupedData.append(self.allData[:self.groupnum])</span><br><span class="line">            self.allData = self.allData[self.groupnum:]</span><br><span class="line">        self.dataloader = DataLoader(self.groupedData)</span><br><span class="line">        <span class="comment"># 组建线程池</span></span><br><span class="line">        self.pool = [WorkingThread(self.dataloader, self.workingfun, i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.threadnum)]</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">startThreads</span>(<span class="params">self, mode=<span class="string">&quot;r&quot;</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> mode <span class="keyword">in</span> [<span class="string">&quot;r&quot;</span>, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;RUN&quot;</span>]:</span><br><span class="line">            [i.start() <span class="keyword">for</span> i <span class="keyword">in</span> self.pool]</span><br><span class="line">            self.canBeJoin = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> mode <span class="keyword">in</span> [<span class="string">&quot;d&quot;</span>, <span class="string">&quot;debug&quot;</span>, <span class="string">&quot;DEBUG&quot;</span>]:</span><br><span class="line">            print(<span class="string">&quot;===============================================================================\n&quot;</span>)</span><br><span class="line">            print(<span class="string">&#x27;&#x27;&#x27;                   | || |  (_) |  ____|                  | |  (_)              </span></span><br><span class="line"><span class="string">  _ __ ___   _   _ | || |_  _  | |__  _   _  _ __    ___ | |_  _   ___   _ __  </span></span><br><span class="line"><span class="string"> | &#x27;_ ` _ \ | | | || || __|| | |  __|| | | || &#x27;_ \  / __|| __|| | / _ \ | &#x27;_ \ </span></span><br><span class="line"><span class="string"> | | | | | || |_| || || |_ | | | |   | |_| || | | || (__ | |_ | || (_) || | | |</span></span><br><span class="line"><span class="string"> |_| |_| |_| \__,_||_| \__||_| |_|    \__,_||_| |_| \___| \__||_| \___/ |_| |_|&#x27;&#x27;&#x27;</span>)</span><br><span class="line">            print(<span class="string">&quot;\n传入参数:&quot;</span>, self.debugData)</span><br><span class="line">            print(<span class="string">&quot;返回值:&quot;</span>, self.workingfun(self.debugData), <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            print(<span class="string">&quot;===============================================================================&quot;</span>)</span><br><span class="line">            </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">join</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.canBeJoin:</span><br><span class="line">            [i.join() <span class="keyword">for</span> i <span class="keyword">in</span> self.pool]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getResults</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.dataloader.getRes()</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############### 开始测试</span></span><br><span class="line"><span class="comment"># 实际使用的时候,可以把上面的放到一个py文件里 然后import ; 只使用ControlThread类就行</span></span><br><span class="line"><span class="comment"># def workfun(data):</span></span><br><span class="line"><span class="comment">#     # time.sleep(random.randint(1,5))</span></span><br><span class="line"><span class="comment">#     time.sleep(1)</span></span><br><span class="line"><span class="comment">#     print(str(data) + &quot;\n&quot;)</span></span><br><span class="line"><span class="comment">#     return data</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(&quot;start&quot;)</span></span><br><span class="line"><span class="comment"># ct = ControlThread(list(range(10)), workfun, 10)</span></span><br><span class="line"><span class="comment"># ct.startThreads()</span></span><br><span class="line"><span class="comment"># ct.join()</span></span><br><span class="line"><span class="comment"># print(&quot;finish&quot;)</span></span><br><span class="line"><span class="comment"># print(&quot;所有的返回值在这里:&quot;)</span></span><br><span class="line"><span class="comment"># print(ct.getResults())</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="引入使用"><a href="#引入使用" class="headerlink" title="引入使用:"></a>引入使用:</h3><p>main.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tool</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">YvYue</span>(<span class="params">d</span>):</span></span><br><span class="line">print(d)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;start&quot;</span>)</span><br><span class="line">ct = tool.ControlThread(data, YvYue, <span class="number">10</span>)</span><br><span class="line">ct.startThreads()</span><br><span class="line">ct.join()</span><br><span class="line">print(<span class="string">&quot;finish&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>一些顺序无关的函数要并行执行<br>很容易就想到,启动一些线程,然后给每一个线程分配好任务,每个线程刚好自己的任务就可以了<br>但是,实践表明,受py多线程机制影响,有的线程完成任务快,有的线程完成任务慢<br>具体多线程的东西可以参考我另一篇文章<br>极端的时候,甚至全部线程同时工作的时间占比50%都不到,最后就剩几个线程磨洋工,然后大部分线程都下班了,但是我还得在那里盯着最后干完活的,这就很让人不爽<br>所以我决定,动态分配任务,随时随地给每个线程任务,干得快的让它多干点,这样总体完工就快了</p><p>但是把,不同线程访问同一个数据输出资源,需要加锁,这时候还是有时间消耗,</p><p>所以我的解决办法是,每次给一个线程提供一些数据,而不是一个.这样次数就少了</p><p>剩下懒得写了</p>]]></content>
      
      
      <categories>
          
          <category> PYTHON小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基于163免费域名邮箱的配置</title>
      <link href="/new/2021/08/06/%E5%9F%9F%E5%90%8D%E9%82%AE%E7%AE%B1%E9%85%8D%E7%BD%AE/"/>
      <url>/new/2021/08/06/%E5%9F%9F%E5%90%8D%E9%82%AE%E7%AE%B1%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>单纯就是留一个记录</p><p>一个管理员账户</p><p>一个inbox</p><p>一些分散账户</p><p>分散账户配置:</p><ul><li>姓名</li><li>转发到接收邮箱</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tags和categories的用法</title>
      <link href="/new/2021/08/05/tags%E5%92%8Ccategories%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/new/2021/08/05/tags%E5%92%8Ccategories%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>在hexo中使用tags与categories往往需要使用多标签和多分类,这里记录一下它们的用法。</p><h3 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">  - 123</span><br><span class="line">  - 456</span><br><span class="line">tags: [123, 456]</span><br></pre></td></tr></table></figure><h3 id="categories"><a href="#categories" class="headerlink" title="categories"></a>categories</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 这是默认的写法，给文章添加一个分类。</span><br><span class="line">categories: 123</span><br><span class="line"># 这会将文章分类123&#x2F;456子分类目录下。</span><br><span class="line">categories: [123, 456]</span><br><span class="line">这会将文章分类到123&#x2F;456子分类目录下。</span><br><span class="line">categories:</span><br><span class="line">   - 123</span><br><span class="line">   - 456</span><br><span class="line">多标签写法，文章被分类到123、456以及123的自分类789这3个分类下面，官方指定写法。</span><br><span class="line">categories:</span><br><span class="line">   - [123]</span><br><span class="line">   - [456]</span><br><span class="line">   - [123, 789]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="一个写categories的插件"><a href="#一个写categories的插件" class="headerlink" title="一个写categories的插件"></a>一个写categories的插件</h4><p>最常用的文件管理策略，就是利用文件系统目录结构(树形结构 directory-tree)。<br>同样，为了便于管理大量的日志文件，采用目录结构是一种简便可行的方案。hexo-auto-category根据日志文件(Markdown)所在文件目录自动分类，即自动生成markdown的front-matter中categories变量。</p><p>categories写起来太麻烦了 而且就算用了go写的那个新建模板,也相当于将分类置于文档中,有了不应该有的耦合,,,所以我找到了这个自动根据文件夹写categories的插件,用法如下</p><ul><li>step1: 安装</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-auto-category --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>step2: 配置</li></ul><p>在根中的_config.xml<br>加入如下一段(当然注释可以不加):</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Generate categories from directory-tree</span><br><span class="line"># Dependencies: https://github.com/xu-song/hexo-auto-category</span><br><span class="line"># depth: the depth of directory-tree you want to generate, should &gt; 0</span><br><span class="line">auto_category:</span><br><span class="line"> enable: true</span><br><span class="line"> depth:</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果只想生成第一级目录分类，可以设置depth属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auto_category:</span><br><span class="line"> enable: true</span><br><span class="line"> depth: 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>step3: 编译部署</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo g</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB常用指令查询</title>
      <link href="/new/2021/05/20/MATLAB/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E6%9F%A5%E8%AF%A2/"/>
      <url>/new/2021/05/20/MATLAB/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><table><thead><tr><th align="right">函数</th><th align="left">功能</th><th>函数</th><th>功能</th></tr></thead><tbody><tr><td align="right">管理用命令</td><td align="left"></td><td></td><td></td></tr><tr><td align="right">addpath</td><td align="left">增加一条搜索路径</td><td>rmpath</td><td>删除一条搜索路径</td></tr><tr><td align="right">demo</td><td align="left">运行Matlab演示程序</td><td>type</td><td>列出.M文件</td></tr><tr><td align="right">doc</td><td align="left">装入超文本文档</td><td>version</td><td>显示Matlab的版本号</td></tr><tr><td align="right">help</td><td align="left">启动联机帮助</td><td>what</td><td>列出当前目录下的有关文件</td></tr><tr><td align="right">lasterr</td><td align="left">显示最后一条信息</td><td>whatsnew</td><td>显示Matlab的新特性</td></tr><tr><td align="right">lookfor</td><td align="left">搜索关键词的帮助</td><td>which</td><td>造出函数与文件所在的目录</td></tr><tr><td align="right">path</td><td align="left">设置或查询Matlab路径</td><td></td><td></td></tr><tr><td align="right">管理变量与工作空间用命令</td><td align="left"></td><td></td><td></td></tr><tr><td align="right">clear</td><td align="left">删除内存中的变量与函数</td><td>pack</td><td>整理工作空间内存</td></tr><tr><td align="right">disp</td><td align="left">显示矩阵与文本</td><td>save</td><td>将工作空间中的变量存盘</td></tr><tr><td align="right">length</td><td align="left">查询向量的维数</td><td>size</td><td>查询矩阵的维数</td></tr><tr><td align="right">load</td><td align="left">从文件中装入数据</td><td>who,whos</td><td>列出工作空间中的变量名</td></tr><tr><td align="right">文件与操作系统处理命令</td><td align="left"></td><td></td><td></td></tr><tr><td align="right">cd</td><td align="left">改变当前工作目录</td><td>edit</td><td>编辑.M文件</td></tr><tr><td align="right">delete</td><td align="left">删除文件</td><td>matlabroot</td><td>获得Matlab的安装根目录</td></tr><tr><td align="right">diary</td><td align="left">将Matlab运行命令存盘</td><td>tempdir</td><td>获得系统的缓存目录</td></tr><tr><td align="right">dir</td><td align="left">列出当前目录的内容</td><td>tempname</td><td>获得一个缓存(temp)文件</td></tr><tr><td align="right">!</td><td align="left">执行操作系统命令</td><td></td><td></td></tr><tr><td align="right">窗口控制命令</td><td align="left"></td><td></td><td></td></tr><tr><td align="right">echo</td><td align="left">显示文件中的Matlab中的命令</td><td>more</td><td>控制命令窗口的输出页面</td></tr><tr><td align="right">format</td><td align="left">设置输出格式</td><td></td><td></td></tr><tr><td align="right">附录1.5启动与退出命令</td><td align="left"></td><td></td><td></td></tr><tr><td align="right">matlabrc</td><td align="left">启动主程序</td><td>quit</td><td>退出Matlab环境</td></tr><tr><td align="right">startup</td><td align="left">Matlab自启动程序</td><td></td><td></td></tr></tbody></table><table><thead><tr><th align="right">函数</th><th align="left">功能</th><th>函数</th><th>功能</th></tr></thead><tbody><tr><td align="right">+</td><td align="left">加</td><td>…</td><td>续行标志</td></tr><tr><td align="right">-</td><td align="left">减</td><td>,</td><td>分行符(该行结果不显示)</td></tr><tr><td align="right">*</td><td align="left">矩阵乘</td><td>;</td><td>分行符(该行结果显示)</td></tr><tr><td align="right">.*</td><td align="left">向量乘</td><td>%</td><td>注释标志</td></tr><tr><td align="right">^</td><td align="left">矩阵乘方</td><td>!</td><td>操作系统命令提示符</td></tr><tr><td align="right">.^</td><td align="left">向量乘方</td><td>矩阵转置</td><td></td></tr><tr><td align="right">kron</td><td align="left">矩阵kron积</td><td>.</td><td>向量转置</td></tr><tr><td align="right">|矩阵左除</td><td align="left">=</td><td>赋值运算</td><td></td></tr><tr><td align="right">/</td><td align="left">矩阵右除</td><td>==</td><td>关系运算之相等</td></tr><tr><td align="right">.|向量左除</td><td align="left">~=</td><td>关系运算之不等</td><td></td></tr><tr><td align="right">./</td><td align="left">向量右除</td><td>&lt;</td><td>关系运算之小于</td></tr><tr><td align="right">:</td><td align="left">向量生成或子阵提取</td><td>&lt;=</td><td>关系运算之小于等于</td></tr><tr><td align="right">()</td><td align="left">下标运算或参数定义</td><td>&gt;</td><td>关系运算之大于</td></tr><tr><td align="right">[]</td><td align="left">矩阵生成</td><td>&gt;=</td><td>关系运算之大于等于</td></tr><tr><td align="right">{}</td><td align="left">&amp;</td><td>逻辑运算之与</td><td></td></tr><tr><td align="right">.</td><td align="left">结构字段获取符</td><td></td><td></td></tr><tr><td align="right">.</td><td align="left">点乘运算,常与其他运算符联合使用(如.)</td><td>~</td><td>逻辑运算之非</td></tr><tr><td align="right">xor</td><td align="left">逻辑运算之异成</td><td></td><td></td></tr></tbody></table><p>​    </p><table><thead><tr><th align="right">函数</th><th align="left">功能</th><th>函数</th><th>功能</th></tr></thead><tbody><tr><td align="right">all</td><td align="left">测试向量中所用元素是否为真</td><td>is*(一类函数)</td><td>检测向量状态.其中*表示一个确定的函数(isinf)</td></tr><tr><td align="right">any</td><td align="left">测试向量中是否有真元素</td><td>*isa</td><td>检测对象是否为某一个类的对象</td></tr><tr><td align="right">exist</td><td align="left">检验变量或文件是否定义</td><td>logical</td><td>将数字量转化为逻辑量</td></tr><tr><td align="right">find</td><td align="left">查找非零元素的下标</td><td></td><td></td></tr></tbody></table><p>附录3 语言结构与调试<br>附录3.1编程语言<br>函数名    功能描述    函数名    功能描述<br>builtin    执行Matlab内建的函数    global    定义全局变量<br>eval    执行Matlab语句构成的字符串    nargchk    函数输入输出参数个数检验<br>feval    执行字符串指定的文件    script    Matlab语句及文件信息<br>function    Matlab函数定义关键词          </p><p>附录3.2控制流程<br>函数名    功能描述    函数名    功能描述<br>break    中断循环执行的语句    if    条件转移语句<br>case    与switch结合实现多路转移    otherwise    多路转移中的缺省执行部分<br>else    与if一起使用的转移语句    return    返回调用函数<br>elseif    与if一起使用的转移语句    switch    与case结合实现多路转移<br>end    结束控制语句块    warning    显示警告信息<br>error    显示错误信息    while    循环语句<br>for    循环语句          </p><p>附录3.3交互输入<br>函数名    功能描述    函数名    功能描述<br>input    请求输入    menu    菜单生成<br>keyboard    启动键盘管理    pause    暂停执行</p><p>附录3.4面向对象编程<br>函数名    功能描述    函数名    功能描述<br>class    生成对象    isa    判断对象是否属于某一类<br>double    转换成双精度型    superiorto    建立类的层次关系<br>inferiorto    建立类的层次关系    unit8    转换成8字节的无符号整数<br>inline    建立一个内嵌对象          </p><p>附录3.5调试<br>函数名    功能描述    函数名    功能描述<br>dbclear    清除调试断点    dbstatus    列出所有断点情况<br>dbcont    调试继续执行    dbstep    单步执行<br>dbdown    改变局部工作空间内存    dbstop    设置调试断点<br>dbmex    启动对Mex文件的调试    sbtype    列出带命令行标号的.M文件<br>dbquit    退出调试模式    dbup    改变局部工作空间内容<br>dbstack    列出函数调用关系          </p><p>附录4 基本矩阵与矩阵处理<br>附录4.1基本矩阵<br>函数名    功能描述    函数名    功能描述<br>eye    产生单位阵    rand    产生随机分布矩阵<br>linspace    构造线性分布的向量    randn    产生正态分布矩阵<br>logspace    构造等对数分布的向量    zeros    产生零矩阵<br>ones    产生元素全部为1的矩阵    :    产生向量</p><p>附录4.2特殊向量与常量<br>函数名    功能描述    函数名    功能描述<br>ans    缺省的计算结果变量    non    非数值常量常由0/0或Inf/Inf获得<br>computer    运行Matlab的机器类型    nargin    函数中参数输入个数<br>eps    精度容许误差(无穷小)    nargout    函数中输出变量个数<br>flops    浮点运算计数    pi    圆周率<br>i    复数单元    realmax    最大浮点数值<br>inf    无穷大    realmin    最小浮点数值<br>inputname    输入参数名    varargin    函数中输入的可选参数<br>j    复数单元    varargout    函数中输出的可选参数</p><p>附录4.3时间与日期<br>函数名    功能描述    函数名    功能描述<br>calender    日历    eomday    计算月末<br>clock    时钟    etime    所用时间函数<br>cputime    所用的CPU时间    now    当前日期与时间<br>date    日期    tic    启动秒表计时器<br>datenum    日期(数字串格式)    toc    读取秒表计时器<br>datestr    日期(字符串格式)    weekday    星期函数<br>datevoc    日期(年月日分立格式)          </p><p>附录4.4矩阵处理<br>函数名    功能描述    函数名    功能描述<br>cat    向量连接    reshape    改变矩阵行列个数<br>diag    建立对角矩阵或获取对角向量    rot90    将矩阵旋转90度<br>fliplr    按左右方向翻转矩阵元素    tril    取矩阵的下三角部分<br>flipud    按上下方向翻转矩阵元素    triu    取矩阵的上三角部分<br>repmat    复制并排列矩阵函数          </p><p>附录5 特殊矩阵<br>函数名    功能描述    函数名    功能描述<br>compan    生成伴随矩阵    invhilb    生成逆hilbert矩阵<br>gallery    生成一些小的测试矩阵    magic    生成magic矩阵<br>hadamard    生成hadamard矩阵    pascal    生成pascal矩阵<br>hankel    生成hankel矩阵    toeplitz    生成toeplitz矩阵<br>hilb    生成hilbert矩阵    wilkinson    生成wilkinson特征值测试矩阵<br>附录6 数学函数<br>附录6.1三角函数<br>函数名    功能描述    函数名    功能描述<br>sin/asin    正弦/反正弦函数    sec/asec    正割/反正割函数<br>sinh/asinh    双曲正弦/反双曲正弦函数    sech/asech    双曲正割/反双曲正割函数<br>cos/acos    余弦/反余弦函数    csc/acsc    余割/反余割函数<br>cosh/acosh    双曲余弦/反双曲余弦函数    csch/acsch    双曲余割/反双曲余割函数<br>tan/atan    正切/反正切函数    cot/acot    余切/反余切函数<br>tanh/atanh    双曲正切/反双曲正切函数    coth/acoth    双曲余切/反双曲余切函数<br>atan2    四个象限内反正切函数          </p><p>附录6.2指数函数<br>函数名    功能描述    函数名    功能描述<br>exp    指数函数    log10    常用对数函数<br>log    自然对数函数    sqrt    平方根函数</p><p>附录6.3复数函数<br>函数名    功能描述    函数名    功能描述<br>abs    绝对值函数    imag    求虚部函数<br>angle    角相位函数    real    求实部函数<br>conj    共轭复数函数          </p><p>附录6.4数值处理<br>函数名    功能描述    函数名    功能描述<br>fix    沿零方向取整    round    舍入取整<br>floor    沿-∞方向取整    rem    求除法的余数<br>ceil    沿+∞方向取整    sign    符号函数</p><p>附录6.5其他特殊数学函数<br>函数名    功能描述    函数名    功能描述<br>airy    airy函数    erfcx    比例互补误差函数<br>besselh    bessel函数(hankel函数)    erfinv    逆误差函数<br>bessili    改进的第一类bessel函数    expint    指数积分函数<br>besselk    改进的第二类bessel函数    gamma    gamma函数<br>besselj    第一类bessel函数    gammainc    非完全gamma函数<br>bessely    第二类bessel函数    gammaln    gamma对数函数<br>beta    beta函数    gcd    最大公约数<br>betainc    非完全的beta函数    lcm    最小公倍数<br>betaln    beta对数函数    log2    分割浮点数<br>elipj    Jacobi椭圆函数    legendre    legendre伴随函数<br>ellipke    完全椭圆积分    pow2    基2标量浮点数<br>erf    误差函数    rat    有理逼近<br>erfc    互补误差函数    rats    有理输出<br>================================================================</p><p>A a<br>abs 绝对值、模、字符的ASCII码值<br>acos 反余弦<br>acosh 反双曲余弦<br>acot 反余切<br>acoth 反双曲余切<br>acsc 反余割<br>acsch 反双曲余割<br>align 启动图形对象几何位置排列工具<br>all 所有元素非零为真<br>angle 相角<br>ans 表达式计算结果的缺省变量名<br>any 所有元素非全零为真<br>area 面域图<br>argnames 函数M文件宗量名<br>asec 反正割<br>asech 反双曲正割<br>asin 反正弦<br>asinh 反双曲正弦<br>assignin 向变量赋值<br>atan 反正切<br>atan2 四象限反正切<br>atanh 反双曲正切<br>autumn 红黄调秋色图阵<br>axes 创建轴对象的低层指令<br>axis 控制轴刻度和风格的高层指令 </p><p>B b </p><p>bar 二维直方图<br>bar3 三维直方图<br>bar3h 三维水平直方图<br>barh 二维水平直方图<br>base2dec X进制转换为十进制<br>bin2dec 二进制转换为十进制<br>blanks 创建空格串<br>bone 蓝色调黑白色图阵<br>box 框状坐标轴<br>break while 或for 环中断指令<br>brighten 亮度控制 </p><p>C c </p><p>capture （3版以前）捕获当前图形<br>cart2pol 直角坐标变为极或柱坐标<br>cart2sph 直角坐标变为球坐标<br>cat 串接成高维数组<br>caxis 色标尺刻度<br>cd 指定当前目录<br>cdedit 启动用户菜单、控件回调函数设计工具<br>cdf2rdf 复数特征值对角阵转为实数块对角阵<br>ceil 向正无穷取整<br>cell 创建元胞数组<br>cell2struct 元胞数组转换为构架数组<br>celldisp 显示元胞数组内容<br>cellplot 元胞数组内部结构图示<br>char 把数值、符号、内联类转换为字符对象<br>chi2cdf 分布累计概率函数<br>chi2inv 分布逆累计概率函数<br>chi2pdf 分布概率密度函数<br>chi2rnd 分布随机数发生器<br>chol Cholesky分解<br>clabel 等位线标识<br>cla 清除当前轴<br>class 获知对象类别或创建对象<br>clc 清除指令窗<br>clear 清除内存变量和函数<br>clf 清除图对象<br>clock 时钟<br>colorcube 三浓淡多彩交叉色图矩阵<br>colordef 设置色彩缺省值<br>colormap 色图<br>colspace 列空间的基<br>close 关闭指定窗口<br>colperm 列排序置换向量<br>comet 彗星状轨迹图<br>comet3 三维彗星轨迹图<br>compass 射线图<br>compose 求复合函数<br>cond （逆）条件数<br>condeig 计算特征值、特征向量同时给出条件数<br>condest 范 -1条件数估计<br>conj 复数共轭<br>contour 等位线<br>contourf 填色等位线<br>contour3 三维等位线<br>contourslice 四维切片等位线图<br>conv 多项式乘、卷积<br>cool 青紫调冷色图<br>copper 古铜调色图<br>cos 余弦<br>cosh 双曲余弦<br>cot 余切<br>coth 双曲余切<br>cplxpair 复数共轭成对排列<br>csc 余割<br>csch 双曲余割<br>cumsum 元素累计和<br>cumtrapz 累计梯形积分<br>cylinder 创建圆柱 </p><p>D d </p><p>dblquad 二重数值积分<br>deal 分配宗量<br>deblank 删去串尾部的空格符<br>dec2base 十进制转换为X进制<br>dec2bin 十进制转换为二进制<br>dec2hex 十进制转换为十六进制<br>deconv 多项式除、解卷<br>delaunay Delaunay 三角剖分<br>del2 离散Laplacian差分<br>demo Matlab演示<br>det 行列式<br>diag 矩阵对角元素提取、创建对角阵<br>diary Matlab指令窗文本内容记录<br>diff 数值差分、符号微分<br>digits 符号计算中设置符号数值的精度<br>dir 目录列表<br>disp 显示数组<br>display 显示对象内容的重载函数<br>dlinmod 离散系统的线性化模型<br>dmperm 矩阵Dulmage-Mendelsohn 分解<br>dos 执行DOS 指令并返回结果<br>double 把其他类型对象转换为双精度数值<br>drawnow 更新事件队列强迫Matlab刷新屏幕<br>dsolve 符号计算解微分方程 </p><p>E e </p><p>echo M文件被执行指令的显示<br>edit 启动M文件编辑器<br>eig 求特征值和特征向量<br>eigs 求指定的几个特征值<br>end 控制流FOR等结构体的结尾元素下标<br>eps 浮点相对精度<br>error 显示出错信息并中断执行<br>errortrap 错误发生后程序是否继续执行的控制<br>erf 误差函数<br>erfc 误差补函数<br>erfcx 刻度误差补函数<br>erfinv 逆误差函数<br>errorbar 带误差限的曲线图<br>etreeplot 画消去树<br>eval 串演算指令<br>evalin 跨空间串演算指令<br>exist 检查变量或函数是否已定义<br>exit 退出Matlab环境<br>exp 指数函数<br>expand 符号计算中的展开操作<br>expint 指数积分函数<br>expm 常用矩阵指数函数<br>expm1 Pade法求矩阵指数<br>expm2 Taylor法求矩阵指数<br>expm3 特征值分解法求矩阵指数<br>eye 单位阵<br>ezcontour 画等位线的简捷指令<br>ezcontourf 画填色等位线的简捷指令<br>ezgraph3 画表面图的通用简捷指令<br>ezmesh 画网线图的简捷指令<br>ezmeshc 画带等位线的网线图的简捷指令<br>ezplot 画二维曲线的简捷指令<br>ezplot3 画三维曲线的简捷指令<br>ezpolar 画极坐标图的简捷指令<br>ezsurf 画表面图的简捷指令<br>ezsurfc 画带等位线的表面图的简捷指令 </p><p>F f </p><p>factor 符号计算的因式分解<br>feather 羽毛图<br>feedback 反馈连接<br>feval 执行由串指定的函数<br>fft 离散Fourier变换<br>fft2 二维离散Fourier变换<br>fftn 高维离散Fourier变换<br>fftshift 直流分量对中的谱<br>fieldnames 构架域名<br>figure 创建图形窗<br>fill3 三维多边形填色图<br>find 寻找非零元素下标<br>findobj 寻找具有指定属性的对象图柄<br>findstr 寻找短串的起始字符下标<br>findsym 机器确定内存中的符号变量<br>finverse 符号计算中求反函数<br>fix 向零取整<br>flag 红白蓝黑交错色图阵<br>fliplr 矩阵的左右翻转<br>flipud 矩阵的上下翻转<br>flipdim 矩阵沿指定维翻转<br>floor 向负无穷取整<br>flops 浮点运算次数<br>flow Matlab提供的演示数据<br>fmin 求单变量非线性函数极小值点（旧版）<br>fminbnd 求单变量非线性函数极小值点<br>fmins 单纯形法求多变量函数极小值点（旧版）<br>fminunc 拟牛顿法求多变量函数极小值点<br>fminsearch 单纯形法求多变量函数极小值点<br>fnder 对样条函数求导<br>fnint 利用样条函数求积分<br>fnval 计算样条函数区间内任意一点的值<br>fnplt 绘制样条函数图形<br>fopen 打开外部文件<br>for 构成for环用<br>format 设置输出格式<br>fourier Fourier 变换<br>fplot 返函绘图指令<br>fprintf 设置显示格式<br>fread 从文件读二进制数据<br>fsolve 求多元函数的零点<br>full 把稀疏矩阵转换为非稀疏阵<br>funm 计算一般矩阵函数<br>funtool 函数计算器图形用户界面<br>fzero 求单变量非线性函数的零点 </p><p>G g </p><p>gamma 函数<br>gammainc 不完全 函数<br>gammaln 函数的对数<br>gca 获得当前轴句柄<br>gcbo 获得正执行”回调”的对象句柄<br>gcf 获得当前图对象句柄<br>gco 获得当前对象句柄<br>geomean 几何平均值<br>get 获知对象属性<br>getfield 获知构架数组的域<br>getframe 获取影片的帧画面<br>ginput 从图形窗获取数据<br>global 定义全局变量<br>gplot 依图论法则画图<br>gradient 近似梯度<br>gray 黑白灰度<br>grid 画分格线<br>griddata 规则化数据和曲面拟合<br>gtext 由鼠标放置注释文字<br>guide 启动图形用户界面交互设计工具 </p><p>H h </p><p>harmmean 调和平均值<br>help 在线帮助<br>helpwin 交互式在线帮助<br>helpdesk 打开超文本形式用户指南<br>hex2dec 十六进制转换为十进制<br>hex2num 十六进制转换为浮点数<br>hidden 透视和消隐开关<br>hilb Hilbert矩阵<br>hist 频数计算或频数直方图<br>histc 端点定位频数直方图<br>histfit 带正态拟合的频数直方图<br>hold 当前图上重画的切换开关<br>horner 分解成嵌套形式<br>hot 黑红黄白色图<br>hsv 饱和色图 </p><p>I i </p><p>if-else-elseif 条件分支结构<br>ifft 离散Fourier反变换<br>ifft2 二维离散Fourier反变换<br>ifftn 高维离散Fourier反变换<br>ifftshift 直流分量对中的谱的反操作<br>ifourier Fourier反变换<br>i, j 缺省的”虚单元”变量<br>ilaplace Laplace反变换<br>imag 复数虚部<br>image 显示图象<br>imagesc 显示亮度图象<br>imfinfo 获取图形文件信息<br>imread 从文件读取图象<br>imwrite 把<br>imwrite 把图象写成文件<br>ind2sub 单下标转变为多下标<br>inf 无穷大<br>info MathWorks公司网点地址<br>inline 构造内联函数对象<br>inmem 列出内存中的函数名<br>input 提示用户输入<br>inputname 输入宗量名<br>int 符号积分<br>int2str 把整数数组转换为串数组<br>interp1 一维插值<br>interp2 二维插值<br>interp3 三维插值<br>interpn N维插值<br>interpft 利用FFT插值<br>intro Matlab自带的入门引导<br>inv 求矩阵逆<br>invhilb Hilbert矩阵的准确逆<br>ipermute 广义反转置<br>isa 检测是否给定类的对象<br>ischar 若是字符串则为真<br>isequal 若两数组相同则为真<br>isempty 若是空阵则为真<br>isfinite 若全部元素都有限则为真<br>isfield 若是构架域则为真<br>isglobal 若是全局变量则为真<br>ishandle 若是图形句柄则为真<br>ishold 若当前图形处于保留状态则为真<br>isieee 若计算机执行IEEE规则则为真<br>isinf 若是无穷数据则为真<br>isletter 若是英文字母则为真<br>islogical 若是逻辑数组则为真<br>ismember 检查是否属于指定集<br>isnan 若是非数则为真<br>isnumeric 若是数值数组则为真<br>isobject 若是对象则为真<br>isprime 若是质数则为真<br>isreal 若是实数则为真<br>isspace 若是空格则为真<br>issparse 若是稀疏矩阵则为真<br>isstruct 若是构架则为真<br>isstudent 若是Matlab学生版则为真<br>iztrans 符号计算Z反变换 </p><p>J j , K k </p><p>jacobian 符号计算中求Jacobian 矩阵<br>jet 蓝头红尾饱和色<br>jordan 符号计算中获得 Jordan标准型<br>keyboard 键盘获得控制权<br>kron Kronecker乘法规则产生的数组 </p><p>L l </p><p>laplace Laplace变换<br>lasterr 显示最新出错信息<br>lastwarn 显示最新警告信息<br>leastsq 解非线性最小二乘问题（旧版）<br>legend 图形图例<br>lighting 照明模式<br>line 创建线对象<br>lines 采用plot 画线色<br>linmod 获连续系统的线性化模型<br>linmod2 获连续系统的线性化精良模型<br>linspace 线性等分向量<br>ln 矩阵自然对数<br>load 从MAT文件读取变量<br>log 自然对数<br>log10 常用对数<br>log2 底为2的对数<br>loglog 双对数刻度图形<br>logm 矩阵对数<br>logspace 对数分度向量<br>lookfor 按关键字搜索M文件<br>lower 转换为小写字母<br>lsqnonlin 解非线性最小二乘问题<br>lu LU分解 </p><p>M m </p><p>mad 平均绝对值偏差<br>magic 魔方阵<br>maple &amp;nb, sp; 运作 Maple格式指令<br>mat2str 把数值数组转换成输入形态串数组<br>material 材料反射模式<br>max 找向量中最大元素<br>mbuild 产生EXE文件编译环境的预设置指令<br>mcc 创建MEX或EXE文件的编译指令<br>mean 求向量元素的平均值<br>median 求中位数<br>menuedit 启动设计用户菜单的交互式编辑工具<br>mesh 网线图<br>meshz 垂帘网线图<br>meshgrid 产生”格点”矩阵<br>methods 获知对指定类定义的所有方法函数<br>mex 产生MEX文件编译环境的预设置指令<br>mfunlis 能被mfun计算的MAPLE经典函数列表<br>mhelp 引出 Maple的在线帮助<br>min 找向量中最小元素<br>mkdir 创建目录<br>mkpp 逐段多项式数据的明晰化<br>mod 模运算<br>more 指令窗中内容的分页显示<br>movie 放映影片动画<br>moviein 影片帧画面的内存预置<br>mtaylor 符号计算多变量Taylor级数展开 </p><p>N n </p><p>ndims 求数组维数<br>NaN 非数（预定义）变量<br>nargchk 输入宗量数验证<br>nargin 函数输入宗量数<br>nargout 函数输出宗量数<br>ndgrid 产生高维格点矩阵<br>newplot 准备新的缺省图、轴<br>nextpow2 取最接近的较大2次幂<br>nnz 矩阵的非零元素总数<br>nonzeros 矩阵的非零元素<br>norm 矩阵或向量范数<br>normcdf 正态分布累计概率密度函数<br>normest 估计矩阵2范数<br>norminv 正态分布逆累计概率密度函数<br>normpdf 正态分布概率密度函数<br>normrnd 正态随机数发生器<br>notebook 启动Matlab和Word的集成环境<br>null 零空间<br>num2str 把非整数数组转换为串<br>numden 获取最小公分母和相应的分子表达式<br>nzmax 指定存放非零元素所需内存 </p><p>O o </p><p>ode1 非Stiff 微分方程变步长解算器<br>ode15s Stiff 微分方程变步长解算器<br>ode23t 适度Stiff 微分方程解算器<br>ode23tb Stiff 微分方程解算器<br>ode45 非Stiff 微分方程变步长解算器<br>odefile ODE 文件模板<br>odeget 获知ODE 选项设置参数<br>odephas2 ODE 输出函数的二维相平面图<br>odephas3 ODE 输出函数的三维相空间图<br>odeplot ODE 输出函数的时间轨迹图<br>odeprint 在Matlab指令窗显示结果<br>odeset 创建或改写 ODE选项构架参数值<br>ones 全1数组<br>optimset 创建或改写优化泛函指令的选项参数值<br>orient 设定图形的排放方式<br>orth 值空间正交化 </p><p>P p </p><p>pack 收集Matlab内存碎块扩大内存<br>pagedlg 调出图形排版对话框<br>patch 创建块对象<br>path 设置Matlab搜索路径的指令<br>pathtool 搜索路径管理器<br>pause 暂停<br>pcode 创建预解译P码文件<br>pcolor 伪彩图<br>peaks Matlab提供的典型三维曲面<br>permute 广义转置<br>pi （预定义变量）圆周率<br>pie 二维饼图<br>pie3 三维饼图<br>pink 粉红色图矩阵<br>pinv 伪逆<br>plot 平面线图<br>plot3 三维线图<br>plotmatrix 矩阵的散点图<br>plotyy 双纵坐标图<br>poissinv 泊松分布逆累计概率分布函数<br>poissrnd 泊松分布随机数发生器<br>pol2cart 极或柱坐标变为直角坐标<br>polar 极坐标图<br>poly 矩阵的特征多项式、根集对应的多项式<br>poly2str 以习惯方式显示多项式<br>poly2sym 双精度多项式系数转变为向量符号多项式<br>polyder 多项式导数<br>polyfit 数据的多项式拟合<br>polyval 计算多项式的值<br>polyvalm 计算矩阵多项式<br>pow2 2的幂<br>ppval 计算分段多项式<br>pretty 以习惯方式显示符号表达式<br>print 打印图形或SIMULINK模型<br>printsys 以习惯方式显示有理分式<br>prism 光谱色图矩阵<br>procread 向MAPLE输送计算程序<br>profile 函数文件性能评估器<br>propedit 图形对象属性编辑器<br>pwd 显示当前工作目录 </p><p>Q q </p><p>quad 低阶法计算数值积分<br>quad8 高阶法计算数值积分(QUADL)<br>quit 推出Matlab 环境<br>quiver 二维方向箭头图<br>quiver3 三维方向箭头图 </p><p>R r </p><p>rand 产生均匀分布随机数<br>randn 产生正态分布随机数<br>randperm 随机置换向量<br>range 样本极差<br>rank 矩阵的秩<br>rats 有理输出<br>rcond 矩阵倒条件数估计<br>real 复数的实部<br>reallog 在实数域内计算自然对数<br>realpow 在实数域内计算乘方<br>realsqrt 在实数域内计算平方根<br>realmax 最大正浮点数<br>realmin 最小正浮点数<br>rectangle 画”长方框”<br>rem 求余数<br>repmat 铺放模块数组<br>reshape 改变数组维数、大小<br>residue 部分分式展开<br>return 返回<br>ribbon 把二维曲线画成三维彩带图<br>rmfield 删去构架的域<br>roots 求多项式的根<br>rose 数扇形图<br>rot90 矩阵旋转90度<br>rotate 指定的原点和方向旋转<br>rotate3d 启动三维图形视角的交互设置功能<br>round 向最近整数圆整<br>rref 简化矩阵为梯形形式<br>rsf2csf 实数块对角阵转为复数特征值对角阵<br>rsums Riemann和 </p><p>S s </p><p>save 把内存变量保存为文件<br>scatter 散点图<br>scatter3 三维散点图<br>sec 正割<br>sech 双曲正割<br>semilogx X轴对数刻度坐标图<br>semilogy Y轴对数刻度坐标图<br>series 串联连接<br>set 设置图形对象属性<br>setfield 设置构架数组的域<br>setstr 将ASCII码转换为字符的旧版指令<br>sign 根据符号取值函数<br>signum 符号计算中的符号取值函数<br>sim 运行SIMULINK模型<br>simget 获取SIMULINK模型设置的仿真参数<br>simple 寻找最短形式的符号解<br>simplify 符号计算中进行简化操作<br>simset 对SIMULINK模型的仿真参数进行设置<br>simulink 启动SIMULINK模块库浏览器<br>sin 正弦<br>sinh 双曲正弦<br>size 矩阵的大小<br>slice 立体切片图<br>solve 求代数方程的符号解<br>spalloc 为非零元素配置内存<br>sparse 创建稀疏矩阵<br>spconvert 把外部数据转换为稀疏矩阵<br>spdiags 稀疏对角阵<br>spfun 求非零元素的函数值<br>sph2cart 球坐标变为直角坐标<br>sphere 产生球面<br>spinmap 色图彩色的周期变化<br>spline 样条插值<br>spones 用1置换非零元素<br>sprandsym 稀疏随机对称阵<br>sprank 结构秩<br>spring 紫黄调春色图<br>sprintf 把格式数据写成串<br>spy 画稀疏结构图<br>sqrt 平方根<br>sqrtm 方根矩阵<br>squeeze 删去大小为1的”孤维”<br>sscanf 按指定格式读串<br>stairs 阶梯图<br>std 标准差<br>stem 二维杆图<br>step 阶跃响应指令<br>str2double 串转换为双精度值<br>str2mat 创建多行串数组<br>str2num 串转换为数<br>strcat 接成长串<br>strcmp 串比较<br>strjust 串对齐<br>strmatch 搜索指定串<br>strncmp 串中前若干字符比较<br>strrep 串替换<br>strtok 寻找第一间隔符前的内容<br>struct 创建构架数组<br>struct2cell 把构架转换为元胞数组<br>strvcat 创建多行串数组<br>sub2ind 多下标转换为单下标<br>subexpr 通过子表达式重写符号对象<br>subplot 创建子图<br>subs 符号计算中的符号变量置换<br>subspace 两子空间夹角<br>sum 元素和<br>summer 绿黄调夏色图<br>superiorto 设定优先级<br>surf 三维着色表面图<br>surface 创建面对象<br>surfc 带等位线的表面图<br>surfl 带光照的三维表面图<br>surfnorm 空间表面的法线<br>svd 奇异值分解<br>svds 求指定的若干奇异值<br>switch-case-otherwise 多分支结构<br>sym2poly 符号多项式转变为双精度多项式系数向量<br>symmmd 对称最小度排序<br>symrcm 反向Cuthill-McKee排序<br>syms 创建多个符号对象 </p><p>T t </p><p>tan 正切<br>tanh 双曲正切<br>taylortool 进行Taylor逼近分析的交互界面<br>text 文字注释<br>tf 创建传递函数对象<br>tic 启动计时器<br>title 图名<br>toc 关闭计时器<br>trapz 梯形法数值积分<br>treelayout 展开树、林<br>treeplot 画树图<br>tril 下三角阵<br>trim 求系统平衡点<br>trimesh 不规则格点网线图<br>trisurf 不规则格点表面图 triu 上三角阵 try-catch 控制流中的Try-catch结构 type 显示M文件<br>U u<br>uicontextmenu 创建现场菜单<br>uicontrol 创建用户控件<br>uimenu 创建用户菜单<br>unmkpp 逐段多项式数据的反明晰化<br>unwrap 自然态相角<br>upper 转换为大写字母 </p><p>V v </p><p>var 方差<br>varargin 变长度输入宗量<br>varargout 变长度输出宗量<br>vectorize 使串表达式或内联函数适于数组运算<br>ver 版本信息的获取<br>view 三维图形的视角控制<br>voronoi Voronoi多边形<br>vpa 任意精度（符号类）数值 </p><p>W w </p><p>warning 显示警告信息<br>what 列出当前目录上的文件<br>whatsnew 显示Matlab中 Readme文件的内容<br>which 确定函数、文件的位置<br>while 控制流中的While环结构<br>white 全白色图矩阵<br>whitebg 指定轴的背景色<br>who 列出内存中的变量名<br>whos 列出内存中变量的详细信息<br>winter 蓝绿调冬色图<br>workspace 启动内存浏览器 </p><p>X x , Y y , Z z </p><p>xlabel X轴名<br>xor 或非逻辑<br>yesinput 智能输入指令<br>ylabel Y轴名<br>zeros 全零数组<br>zlabel Z轴名<br>zoom 图形的变焦放大和缩小<br>ztrans 符号计算Z变换</p>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB线性回归</title>
      <link href="/new/2021/05/20/MATLAB/matlab-11-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
      <url>/new/2021/05/20/MATLAB/matlab-11-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>参考文档 linprog:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">linprog</span><br></pre></td></tr></table></figure><p>A * x &lt;= b: 判定不等关系</p><p>Aeq * x = beq: 判定相等关系</p><p>lb &lt;= x &lt;= ub: 判定单独x的取值范围</p><p>对于列向量f 取 f转置*x的最小值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c=[<span class="number">2</span>;<span class="number">3</span>;<span class="number">-5</span>];</span><br><span class="line">a=[<span class="number">-2</span>,<span class="number">5</span>,<span class="number">-1</span>;<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>]; b=[<span class="number">-10</span>;<span class="number">12</span>];</span><br><span class="line">aeq=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>];</span><br><span class="line">beq=<span class="number">7</span>;</span><br><span class="line">x=linprog(-c,a,b,aeq,beq,<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">1</span>))</span><br><span class="line">value=c&#x27;*x</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB图像绘制</title>
      <link href="/new/2021/05/20/MATLAB/matlab-04-%E5%9B%BE%E5%83%8F%E7%BB%98%E5%88%B6/"/>
      <url>/new/2021/05/20/MATLAB/matlab-04-%E5%9B%BE%E5%83%8F%E7%BB%98%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>五、图像绘制：<br>1、基本绘图函数</p><table><thead><tr><th align="right">函数</th><th align="left">功能</th></tr></thead><tbody><tr><td align="right">plot</td><td align="left">绘制二维线性图形和两个坐标轴</td></tr><tr><td align="right">plot3</td><td align="left">绘制三维线性图形和两个坐标轴</td></tr><tr><td align="right">fplot</td><td align="left">在制定区间绘制某函数的图像。fplot(‘f’，区域，线型，颜色)</td></tr><tr><td align="right">loglog</td><td align="left">绘制对数图形及两个坐标轴(两个坐标都为对数坐标)semilogx</td></tr><tr><td align="right">semilogy</td><td align="left">绘制半对数坐标图形</td></tr></tbody></table><p>2、线型：   颜色           线型<br>        y   黄色       .  圆点线           v      向下箭头<br>        g   绿色       -.   组合           &gt;   向右箭头<br>        b   蓝色       +   点为加号形      &lt;      向左箭头<br>        m   红紫色     o   空心圆形        p      五角星形<br>        c   蓝紫色     *   星号           h        六角星形<br>        w   白色       .   实心小点       hold on   添加图形<br>        r   红色       x   叉号形状        grid on  添加网格<br>        k   黑色       s   方形             -   实线<br>         d   菱形       –   虚线           ^向上箭头     </p><p>3、划分区域使用:</p><p>可以用subplot（3，3，1）表示将绘图区域分为三行三列，目前使用第一区域。此时如要画不同的图形在一个窗口里，需要hold on。</p><p>4、填充fill</p><p>必须参数:([x坐标们], [y坐标们], [颜色]) </p><p>可选参数:  ‘facealpha’,0.1 表示透明度</p><p>其中坐标中的一部分可换成行向量</p><p>顺时针或者逆时针无所谓</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">0.5</span>:<span class="number">0.005</span>:<span class="number">1</span>;</span><br><span class="line">y3=(<span class="number">6.8</span>*x)./(<span class="number">-0.4</span>+<span class="number">7.2</span>*x);</span><br><span class="line"><span class="built_in">plot</span>(x,y3,<span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">fill([<span class="number">0.5</span> <span class="number">0.5</span> x <span class="number">1</span>],[<span class="number">0.5</span> <span class="number">1.0625</span> y3 <span class="number">1</span>],[<span class="number">0.7</span> <span class="number">0.7</span> <span class="number">0.7</span>]);</span><br><span class="line">fill([<span class="number">0.5</span> x <span class="number">0.5</span>], [<span class="number">1</span> y3 <span class="number">1</span>], [<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB数值计算</title>
      <link href="/new/2021/05/20/MATLAB/matlab-03-%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97/"/>
      <url>/new/2021/05/20/MATLAB/matlab-03-%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>四、数值计算</p><p>1、线性方程组求解</p><ul><li>AX=B的解可以用X＝A\B求。XA=B的解可以用X= A/B求。如果A是m×n的矩阵，当m＝n时可以找到唯一解，m&lt;n，不定解，解中至多有m个非零元素。如果m&gt;n，超定系统，至少找到一组解。如果A是奇异的，且AX=B有解，可以用X＝pinv（A）×B返回最小二乘解</li><li>AX=b,  A＝L×U，[L,U]=lu(A),  X=U(L\b),即用LU分解求解。</li><li>QR（正交）分解是将一矩阵表示为一正交矩阵和一上三角矩阵之积，A＝Q×R[Q,R]=chol(A),  X=Q(U\b)</li><li>cholesky分解类似。</li></ul><p>2、特征值<br>      D＝eig（A）返回A的所有特征值组成的矩阵。[V,D]=eig(A),还返回特征向量矩阵。<br>3、A＝U×S×UT，[U,S]=schur(A).其中S的对角线元素为A的特征值。<br>4、多项式Matlab里面的多项式是以向量来表示的，其具体操作函数如下：</p><table><thead><tr><th align="right">函数</th><th align="left">功能</th></tr></thead><tbody><tr><td align="right">conv</td><td align="left">多项式的乘法</td></tr><tr><td align="right">deconv</td><td align="left">多项式的除法，【a，b】＝deconv(s)，返回商和余数</td></tr><tr><td align="right">poly</td><td align="left">求多项式的系数(由已知根求多项式的系数)</td></tr><tr><td align="right">polyeig</td><td align="left">求多项式的特征值</td></tr><tr><td align="right">Polyfit(x，y，n)</td><td align="left">多项式的曲线拟合，x，y为被拟合的向量，n为拟合多项式阶数。</td></tr><tr><td align="right">polyder</td><td align="left">求多项式的一阶导数，polyder(a，b)返回ab的导数</td></tr><tr><td align="right">[a,b]＝polyder(a，b)</td><td align="left">返回a/b的导数。</td></tr><tr><td align="right">polyint</td><td align="left">多项式的积分</td></tr><tr><td align="right">polyval</td><td align="left">求多项式的值</td></tr><tr><td align="right">polyvalm</td><td align="left">以矩阵为变量求多项式的值</td></tr><tr><td align="right">residue</td><td align="left">部分分式展开式</td></tr><tr><td align="right">roots</td><td align="left">求多项式的根(返回所有根组成的向量)</td></tr></tbody></table><p>注：用ploy（A）求出矩阵的特征多项式，然后再求其根，即为矩阵的特征值。</p><p>5、插值常用的插值函数如下：</p><table><thead><tr><th align="right">函数</th><th align="left">功能</th></tr></thead><tbody><tr><td align="right">griddata</td><td align="left">数据网格化合曲面拟合</td></tr><tr><td align="right">Griddata3</td><td align="left">三维数据网格化合超曲面拟合</td></tr><tr><td align="right">interp1</td><td align="left">一维插值(yi=interp1(x,y,xi,’method’)Method=nearest/linear/spline/pchip/cubic</td></tr><tr><td align="right">Interp2</td><td align="left">二维插值zi=interp1(x,y,z,xi,yi’method’),bilinear</td></tr><tr><td align="right">Interp3</td><td align="left">三维插值</td></tr><tr><td align="right">interpft</td><td align="left">用快速傅立叶变换进行一维插值，help</td></tr><tr><td align="right">mkpp</td><td align="left">使用分段多项式</td></tr><tr><td align="right">spline</td><td align="left">三次样条插值</td></tr><tr><td align="right">pchip</td><td align="left">分段hermit插值</td></tr></tbody></table><p>6、函数最值的求解<br>fminbnd（‘f’，x1，x2，optiset（,））求f在 x1和x2之间的最小值。Optiset选项可以有‘Display’+‘iter’/’off’/’final’,分别表示显示计算过程/不显示/只显示最后结果。fminsearch求多元函数的最小值。fzero（‘f’，x1）求一元函数的零点。X1为起始点。同样可以用上面的选项。</p>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB数组和矩阵</title>
      <link href="/new/2021/05/20/MATLAB/matlab-02-%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5/"/>
      <url>/new/2021/05/20/MATLAB/matlab-02-%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>三 、数组和矩阵：</p><p>  1、构造数组:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y = <span class="built_in">linspace</span>(x1,x2,n=<span class="number">100</span>) <span class="comment">% 从x1到x2 取100个等距点</span></span><br></pre></td></tr></table></figure><p>  2、构造矩阵的方法：可以直接用[ ]来输入数组，也可以用以下提供的函数来生成矩阵。</p><p>注意 下面这些都是函数式调用,也就是length(a),而不是方法式调用.</p><table><thead><tr><th align="right">函数</th><th align="left">方法</th></tr></thead><tbody><tr><td align="right">ones()</td><td align="left">创建一个所有元素都为1的矩阵，其中可以制定维数，1，2….个变量</td></tr><tr><td align="right">zeros()</td><td align="left">创建一个所有元素都为0的矩阵</td></tr><tr><td align="right">eye()</td><td align="left">创建对角元素为1，其他元素为0的矩阵</td></tr><tr><td align="right">diag()</td><td align="left">根据向量创建对角矩阵，即以向量的元素为对角元素</td></tr><tr><td align="right">magic()</td><td align="left">创建魔方矩阵</td></tr><tr><td align="right">rand()</td><td align="left">创建随机矩阵，服从均匀分布</td></tr><tr><td align="right">randn()</td><td align="left">创建随机矩阵，服从正态分布</td></tr><tr><td align="right">randperm(n,k)</td><td align="left">随机置换, 从[1,n]之间随机置换位置,并选择k个数 默认k=n</td></tr><tr><td align="right">cat(1,A,B)</td><td align="left">等价于C=[A,B]，水平聚合矩阵</td></tr><tr><td align="right">cat(2,A,B)</td><td align="left">等价于C=[A;B]，垂直聚合矩阵</td></tr><tr><td align="right">repmat(M,v,h)</td><td align="left">将矩阵M在垂直方向上聚合v次，在水平方向上聚合h次</td></tr><tr><td align="right">blkdiag(A,B, …)</td><td align="left">块对角矩阵,参数是多个块</td></tr><tr><td align="right">length</td><td align="left">返回矩阵维度向量中最大的一个</td></tr><tr><td align="right">ndims</td><td align="left">返回维数</td></tr><tr><td align="right">numel</td><td align="left">返回矩阵元素个数</td></tr><tr><td align="right">size</td><td align="left">返回每一维的长度，[rows,cols]=size(A)</td></tr><tr><td align="right">reshape</td><td align="left">重塑矩阵，reshape(A,2,6),将A变为2×6的矩阵，按列排列。</td></tr><tr><td align="right">rot90</td><td align="left">旋转矩阵90度，逆时针方向</td></tr><tr><td align="right">fliplr</td><td align="left">沿垂轴翻转矩阵</td></tr><tr><td align="right">flipud</td><td align="left">沿水平轴翻转矩阵</td></tr><tr><td align="right">transpose</td><td align="left">沿主对角线翻转矩阵</td></tr><tr><td align="right">ctranspose</td><td align="left">转置矩阵，也可用A’或A.’，这仅当矩阵为复数矩阵时才有区别</td></tr><tr><td align="right">inv</td><td align="left">矩阵的逆</td></tr><tr><td align="right">det</td><td align="left">矩阵的行列式值</td></tr><tr><td align="right">trace</td><td align="left">矩阵对角元素的和</td></tr><tr><td align="right">norm</td><td align="left">矩阵或矢量的范数，norm(a，1)，norm(a，Inf)…….</td></tr><tr><td align="right">normest</td><td align="left">估计矩阵的最大范数矢量</td></tr><tr><td align="right">chol</td><td align="left">矩阵的cholesky分解</td></tr><tr><td align="right">cholinc</td><td align="left">不完全cholesky分解</td></tr><tr><td align="right">lu</td><td align="left">LU分解</td></tr><tr><td align="right">luinc</td><td align="left">不完全LU分解</td></tr><tr><td align="right">qr</td><td align="left">正交分解</td></tr><tr><td align="right">kron(A，B)</td><td align="left">A为m×n，B为p×q，则生成mp×nq的矩阵，A的每一个元素都会乘上B，并占据p×q大小的空间</td></tr><tr><td align="right">rank</td><td align="left">求出矩阵的刺</td></tr><tr><td align="right">pinv</td><td align="left">求伪逆矩阵</td></tr><tr><td align="right">A^p</td><td align="left">对A进行操作</td></tr><tr><td align="right">A.^P</td><td align="left">对A中的每一个元素进行操作</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB基础指令和数学函数</title>
      <link href="/new/2021/05/20/MATLAB/matlab-01-%E5%9F%BA%E7%A1%80%E6%8C%87%E4%BB%A4%E5%92%8C%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/"/>
      <url>/new/2021/05/20/MATLAB/matlab-01-%E5%9F%BA%E7%A1%80%E6%8C%87%E4%BB%A4%E5%92%8C%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一、基础指令</p><ul><li>System指令</li></ul><p>感叹号开头表示系统指令,以!开头且以&amp;结尾表示在cmd窗口中查看结果</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!dir</span><br><span class="line">!dir&amp;</span><br></pre></td></tr></table></figure><ul><li>全局状态</li></ul><p>who:当前工作空间所有变量,whos 变量名细节</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">who</span><br><span class="line">whos</span><br></pre></td></tr></table></figure><p>二、函数及运算<br>1 运算符：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>+<span class="number">1</span></span><br><span class="line"><span class="number">2</span><span class="number">-1</span></span><br><span class="line"><span class="number">3</span>/<span class="number">2</span></span><br><span class="line"><span class="number">2</span>\<span class="number">3</span></span><br><span class="line"><span class="number">2</span>^<span class="number">3</span></span><br><span class="line">‘：复数的共轭转置</span><br><span class="line">() 括号</span><br></pre></td></tr></table></figure><p>2 数学函数：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Sin( ) 正弦（变量为弧度）</span><br><span class="line">Cot( ) 余切（变量为弧度）</span><br><span class="line">Sind( ) 正弦（变量为度数）</span><br><span class="line">Cotd( ) 余切（变量为度数）</span><br><span class="line">Asin( ) 反正弦（返回弧度）</span><br><span class="line">Acot( ) 反余切（返回弧度）</span><br><span class="line">Asind( ) 反正弦（返回度数）</span><br><span class="line">Acotd( ) 反余切（返回度数）</span><br><span class="line">Cos( ) 余弦（变量为弧度）</span><br><span class="line">Exp( ) 指数</span><br><span class="line">Cosd( ) 余弦（变量为度数）</span><br><span class="line"><span class="built_in">log</span>( ) 对数</span><br><span class="line">Acos( ) 余正弦（返回弧度）</span><br><span class="line"><span class="built_in">log10</span>( ) 以<span class="number">10</span>为底对数</span><br><span class="line">Acosd( ) 余正弦（返回度数）</span><br><span class="line"><span class="built_in">sqrt</span>( ) 开方</span><br><span class="line">Tan( ) 正切（变量为弧度）</span><br><span class="line"><span class="built_in">realsqrt</span>( ) 返回非负根</span><br><span class="line">Tand( ) 正切（变量为度数）</span><br><span class="line"><span class="built_in">abs</span>( ) 取绝对值</span><br><span class="line">Atan( ) 反正切（返回弧度）</span><br><span class="line"><span class="built_in">angle</span>( ) 返回复数的相位角</span><br><span class="line">Atand( ) 反正切（返回度数）</span><br><span class="line"><span class="built_in">mod</span>(x,y) 返回x/y的余数</span><br><span class="line">sum( ) 向量元素求和</span><br></pre></td></tr></table></figure><p>3 常用常数的值：</p><table><thead><tr><th>常数</th><th>数值</th></tr></thead><tbody><tr><td>pi</td><td>3.1415926…….</td></tr><tr><td>realmin</td><td>最小浮点数，2.2251e-308</td></tr><tr><td>i和j</td><td>虚数单位</td></tr><tr><td>realmax</td><td>最大浮点数 1.7977e+308</td></tr><tr><td>inf</td><td>无限大</td></tr><tr><td>eps</td><td>浮点相对精度 (还不会用)</td></tr><tr><td>NaN</td><td>空</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/new/2021/05/19/NOSQL/mongodb/"/>
      <url>/new/2021/05/19/NOSQL/mongodb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>略</p><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>数据库 Database</p><p>集合 Collection</p><p>文档 Document</p><p>分别等价于sql中的数据库,数据表,和记录</p><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><p>建数据库</p><p>建文档集合</p><p>建文档</p><h3 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h3><p>运行mongo.exe进入mongodb的命令行模式</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br><span class="line"><span class="built_in">help</span></span><br><span class="line">show dbs</span><br><span class="line">use boshen 不需要新建数据库,可以直接use,但是不会显示,因为没有表结构</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看当前数据库的信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.stats()</span><br></pre></td></tr></table></figure><p>删除数据库</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure><h3 id="操作集合"><a href="#操作集合" class="headerlink" title="操作集合"></a>操作集合</h3><p>展示所有集合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show collections</span><br></pre></td></tr></table></figure><p>新建集合</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(&quot;posts&quot;)</span><br><span class="line">db.createCollection(&quot;cata&quot;)</span><br><span class="line">db.createCollection(&quot;tags&quot;)</span><br></pre></td></tr></table></figure><p>重命名集合</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(&quot;users&quot;)</span><br><span class="line">db.users.renameCollection(&quot;staff&quot;)</span><br><span class="line">// users --&gt; staff</span><br></pre></td></tr></table></figure><p>删除集合</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.staff.drop()</span><br></pre></td></tr></table></figure><h3 id="文档的基本操作"><a href="#文档的基本操作" class="headerlink" title="文档的基本操作"></a>文档的基本操作</h3><p>准备:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use boshen</span><br><span class="line">db.createCollection(&quot;posts&quot;)</span><br></pre></td></tr></table></figure><p>插入文档:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.posts.insert(&#123;</span><br><span class="line"><span class="function">title: &quot;哈哈哈&quot;,</span></span><br><span class="line"><span class="function"><span class="title">content</span>: &quot;这是内容&quot;</span></span><br><span class="line"><span class="function">&#125;)</span></span><br></pre></td></tr></table></figure><p>查看某集合下所有文档:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>()</span><br></pre></td></tr></table></figure><p>查看当前集合中有多少文档</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.count()</span><br></pre></td></tr></table></figure><p>删除所有文档 (空大括号表示所有,里面可以加内容)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.remove(&#123;&#125;)</span><br></pre></td></tr></table></figure><p>循环插入文档</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (var i = <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line">db.posts.insert(&#123;</span><br><span class="line"><span class="function">title: &quot;循环插入的第&quot;+<span class="title">i</span>+&quot;个&quot;,</span></span><br><span class="line"><span class="function">&#125;);</span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="查找文档"><a href="#查找文档" class="headerlink" title="查找文档"></a>查找文档</h3><p>$gte 大于等于,  $gt 大于,  $lte 小于等于,  $lt 小于</p><p>$eq 相等 , $ne 不相等 </p><p>准备数据:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.posts.remove(&#123;&#125;)</span><br><span class="line">db.posts.insert(&#123;<span class="built_in">title</span>:&quot;哈哈哈哈&quot;, &quot;rank&quot;:<span class="number">2</span>, &quot;tag&quot;:&quot;hhh&quot;&#125;)</span><br><span class="line">db.posts.insert(&#123;<span class="built_in">title</span>:&quot;阿斯弗&quot;, &quot;rank&quot;:<span class="number">3</span>, &quot;tag&quot;:&quot;aaa&quot;&#125;)</span><br><span class="line">db.posts.insert(&#123;<span class="built_in">title</span>:&quot;自行车&quot;, &quot;rank&quot;:<span class="number">5</span>, &quot;tag&quot;:&quot;zzz&quot;&#125;)</span><br><span class="line">db.posts.insert(&#123;<span class="built_in">title</span>:&quot;气味让人&quot;, &quot;rank&quot;:<span class="number">2</span>, &quot;tag&quot;:&quot;qqq&quot;&#125;)</span><br><span class="line">db.posts.insert(&#123;<span class="built_in">title</span>:&quot;出手大方&quot;, &quot;rank&quot;:<span class="number">2</span>, &quot;tag&quot;:&quot;hhh&quot;&#125;)</span><br></pre></td></tr></table></figure><h4 id="find抽出"><a href="#find抽出" class="headerlink" title="find抽出"></a>find抽出</h4><p>取出tag=hhh的文档</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>(&#123;&quot;tag&quot;:&quot;hhh&quot;&#125;)</span><br></pre></td></tr></table></figure><p>取出rank大于等于3的文档</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>(&#123;&quot;rank&quot;:&#123;$gte: <span class="number">3</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>取出一个 带哈字的/ 以自开头的 文档 (可替换成正则)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>(&#123;&quot;<span class="built_in">title</span>&quot;:/哈/&#125;)</span><br><span class="line">db.posts.<span class="built_in">find</span>(&#123;&quot;<span class="built_in">title</span>&quot;:/^自/&#125;)</span><br></pre></td></tr></table></figure><p>distinct语句</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.distinct(&quot;tag&quot;)</span><br></pre></td></tr></table></figure><p>多条件检索时, “并且”意思:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>(&#123;&quot;t&quot;:/u/, &quot;ra&quot;:&#123;$gte:<span class="number">5</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>“或”意思:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>(</span><br><span class="line">&#123; %or : [</span><br><span class="line">&#123;&quot;t&quot;:/u/&#125;, &#123;&quot;ra&quot;:&#123;$gte:<span class="number">5</span>&#125;&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>字段值特殊值检索:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>(&#123;&quot;rank&quot;:&#123;$<span class="keyword">in</span>:[<span class="number">3</span>,<span class="number">4</span>]&#125;&#125;) // rank为<span class="number">3</span>或<span class="number">4</span>会被抽出</span><br></pre></td></tr></table></figure><p>字段存在检索:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>(&#123;&quot;new&quot;:&#123;$exists:true&#125;&#125;)</span><br></pre></td></tr></table></figure><p>抽出指定字段:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.posts.<span class="built_in">find</span>(&#123;&#125;, &#123;field1:true, field2:<span class="number">1</span>&#125;) // 抽出<span class="number">3</span>个字段,f1,f2,_id</span><br><span class="line">db.posts.<span class="built_in">find</span>(&#123;&#125;, &#123;field1:true, field2:<span class="number">1</span>, _id:<span class="number">0</span>&#125;) // 抽出<span class="number">2</span>个字段,因为_id是默认抽出的,需要手动取消</span><br></pre></td></tr></table></figure><h4 id="排序-限制-跳过"><a href="#排序-限制-跳过" class="headerlink" title="排序,限制,跳过"></a>排序,限制,跳过</h4><p>按照rank字段,升序排列</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.post.<span class="built_in">find</span>(&#123;&#125;,&#123;_id:<span class="number">0</span>&#125;).<span class="built_in">sort</span>(&#123;rank:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><p>按照rank字段,降序排列</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.post.<span class="built_in">find</span>(&#123;&#125;,&#123;_id:<span class="number">0</span>&#125;).<span class="built_in">sort</span>(&#123;rank:-<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><p>按照默认顺序抽出,只抽出前3条</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.post.<span class="built_in">find</span>(&#123;&#125;,&#123;_id:<span class="number">0</span>&#125;).limit(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>如果把find换成findOne,意味着limit(1)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.post.findOne(&#123;&#125;,&#123;_id:<span class="number">0</span>&#125;)</span><br></pre></td></tr></table></figure><p>跳过: 先跳过3条,再显示3条,用于分页</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.post.<span class="built_in">find</span>(&#123;&#125;,&#123;_id:<span class="number">0</span>&#125;).skip(<span class="number">3</span>).limit(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h3 id="文档的更新"><a href="#文档的更新" class="headerlink" title="文档的更新"></a>文档的更新</h3>]]></content>
      
      
      <categories>
          
          <category> NOSQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/new/2021/05/18/%E8%A1%A8%E6%83%85%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
      <url>/new/2021/05/18/%E8%A1%A8%E6%83%85%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;interface.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/clickimg.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;close&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;max&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;min&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pos&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;emoticons&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgframe&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;D:\a\ele1\���������߸�ͼƬ\94.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgframe&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;D:\a\ele1\���������߸�ͼƬ\95.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgframe&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;D:\a\ele1\���������߸�ͼƬ\96.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgframe&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;D:\a\ele1\���������߸�ͼƬ\97.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgframe&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;D:\a\ele1\���������߸�ͼƬ\98.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgframe&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;D:\a\ele1\���������߸�ͼƬ\99.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/loadimgs.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/maxmin.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>interface.css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">206</span>, <span class="number">206</span>, <span class="number">206</span>);</span><br><span class="line">    <span class="attribute">-webkit-app-region</span>: drag;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="comment">/* background-color: rgb(206, 206, 206); */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../imgs/aico.png);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">80%</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-id">#min</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="comment">/* background-color: black; */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">46px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../imgs/min.png);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">40%</span>;</span><br><span class="line">    <span class="attribute">-webkit-app-region</span>: no-drag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-id">#min</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">185</span>, <span class="number">185</span>, <span class="number">185</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-id">#max</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="comment">/* background-color: pink; */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">46px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../imgs/max.png);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">40%</span>;</span><br><span class="line">    <span class="attribute">-webkit-app-region</span>: no-drag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-id">#max</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">185</span>, <span class="number">185</span>, <span class="number">185</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-id">#close</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="comment">/* background-color: saddlebrown; */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">46px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../imgs/close.png);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">40%</span>;</span><br><span class="line">    <span class="attribute">-webkit-app-region</span>: no-drag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-id">#close</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">232</span>, <span class="number">17</span>, <span class="number">35</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pos</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.emoticons</span> &#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">243</span>, <span class="number">243</span>, <span class="number">243</span>);</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">3000px</span>;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.emoticons</span> <span class="selector-class">.imgframe</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="comment">/* background-color: red; */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">68px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.emoticons</span> <span class="selector-class">.imgframe</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">68px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.emoticons</span> <span class="selector-class">.imgframe</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">90%</span>;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">90%</span>;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">    <span class="comment">/* padding: 18px; */</span></span><br><span class="line">    <span class="comment">/* 53 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: violet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/new/2021/05/18/socket%E9%80%9A%E4%BF%A1/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A4%84%E7%90%86%E7%9A%84socket/"/>
      <url>/new/2021/05/18/socket%E9%80%9A%E4%BF%A1/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A4%84%E7%90%86%E7%9A%84socket/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>上一个的需要一直等待,所以 我又整了一个多线程处理:</p><p>[ 只是整理电脑空间没地方放了挪过来了,但4我还没整理,,,, ]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">此文件作为python后台的控制中心</span></span><br><span class="line"><span class="string">接收并处理 来自前端和子python进程 的指令 并 启动子线程完成任务</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注,暂时子python进程可以直接向前端发送数据,也可以向此父进程发送数据再转发, 看开发者心情</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">接收信息格式: json字符串</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;command&quot;:&quot;online_check_in&quot; // 必须</span></span><br><span class="line"><span class="string">    &quot;其他&quot;:...  // 其他根据情况选择</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">子进程未设置推出,估计会自动退出,后续解决</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">thread_template</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, threadID, name, get</span>):</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.threadID = threadID</span><br><span class="line">        self.name = name</span><br><span class="line">        self.get = get</span><br><span class="line">        self.command = get.get(<span class="string">&quot;command&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;开启线程： &quot;</span> + self.name)</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;此线程执行的指令为&quot;</span>, self.command)</span><br><span class="line">        <span class="comment"># 此处的get为字典类型,具有command字段,其他字段由传入决定</span></span><br><span class="line">        <span class="keyword">if</span> self.command == <span class="string">&quot;online_check_in&quot;</span>:</span><br><span class="line">            <span class="comment"># camera.m()</span></span><br><span class="line">            <span class="comment">####################<span class="doctag">TODO:</span> 在此处执行此时的方法,可以用全局方法,推荐使用类方法</span></span><br><span class="line">            <span class="comment">#<span class="doctag">TODO:</span>执行线上点名的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;offline_check_in&quot;</span>:</span><br><span class="line">            <span class="comment"># todo:执行线下点名的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;online_check_behavior&quot;</span>:</span><br><span class="line">            <span class="comment"># todo:执行线上行为检测的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;offline_check_behavior_danger&quot;</span>:</span><br><span class="line">            <span class="comment"># todo:执行线下危险行为检测的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;offline_check_behavior_state&quot;</span>:</span><br><span class="line">            <span class="comment"># todo:执行线下状态检测的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;record_face&quot;</span>:</span><br><span class="line">            camera.m()</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;出现了意想不到的情况&quot;</span>)</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="comment"># 获取锁，用于线程同步</span></span><br><span class="line">        <span class="comment"># threadLock.acquire()</span></span><br><span class="line">        self.print_time(self.name, self.counter, <span class="number">3</span>)</span><br><span class="line">        <span class="comment"># 释放锁，开启下一个线程</span></span><br><span class="line">        <span class="comment"># threadLock.release()</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_time</span>(<span class="params">self, threadName, delay, counter</span>):</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">            print(self.threadID, time.gmtime())</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analysis</span>(<span class="params">str_</span>):</span></span><br><span class="line">    get = json.load(str_)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> get.get(<span class="string">&quot;command&quot;</span>):</span><br><span class="line">        print(<span class="string">&quot;接收数据不包含指令,内容为&quot;</span>,str_)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    th = thread_template(thread_id_count, get.get(<span class="string">&quot;command&quot;</span>), get)</span><br><span class="line">    threads.append(th)</span><br><span class="line">    th.start()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hhh,&quot;</span>+str_</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">host = <span class="string">&quot;&quot;</span></span><br><span class="line">port = <span class="number">800</span></span><br><span class="line">address = (host, port)</span><br><span class="line">time_now = time.strftime(<span class="string">&quot;%Y-%m-%d %H:%S:%M&quot;</span>, time.localtime())</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">s.bind(address)</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">threads = [] <span class="comment"># 进程们</span></span><br><span class="line">threadLock = threading.Lock() <span class="comment"># 锁</span></span><br><span class="line">thread_id_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">&quot;Waiting for connections...&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        client_connection, client_address = s.accept()</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;Got connection from&quot;</span>, client_connection.getpeername())</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># client_connection.settimeout(5)</span></span><br><span class="line">            buf = client_connection.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(buf) == <span class="number">0</span>: <span class="comment"># break,跳出while循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                client_connection.send(<span class="built_in">bytes</span>(analysis(buf.decode()), encoding=<span class="string">&quot;utf8&quot;</span>))  </span><br><span class="line">    <span class="keyword">except</span> (KeyboardInterrupt, SystemError):</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    client_connection.close()</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="keyword">raise</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    traceback.print_exc()</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">imshow</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> net = <span class="built_in">require</span>(<span class="string">&#x27;net&#x27;</span>)</span><br><span class="line">    <span class="comment">// 1 引入模块</span></span><br><span class="line">    <span class="keyword">var</span> srcstr = <span class="literal">null</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">analysis</span> (<span class="params">str_</span>) </span>&#123;</span><br><span class="line">      getstr = <span class="built_in">JSON</span>.parse(str_)</span><br><span class="line">      <span class="keyword">if</span> (getstr[<span class="string">&quot;command&quot;</span>]==<span class="string">&quot;imgshow&quot;</span>)&#123;</span><br><span class="line">        srcstr = <span class="string">&#x27;data:image/jpg;base64,&#x27;</span> + getstr[<span class="string">&quot;img&quot;</span>]</span><br><span class="line">        <span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">        element.setAttribute(<span class="string">&#x27;src&#x27;</span>, srcstr)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(getstr[<span class="string">&quot;command&quot;</span>]==<span class="string">&quot;test&quot;</span>)&#123;</span><br><span class="line">         <span class="comment">// ...</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;got it, &#x27;</span> + str_</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2 创建服务器</span></span><br><span class="line">    <span class="keyword">let</span> clientArr = []</span><br><span class="line">    <span class="keyword">const</span> server = net.createServer()</span><br><span class="line">    <span class="comment">// 3 绑定链接事件</span></span><br><span class="line">    server.on(<span class="string">&#x27;connection&#x27;</span>, <span class="function">(<span class="params">person</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(clientArr.length)</span><br><span class="line">      <span class="comment">// 记录链接的进程</span></span><br><span class="line">      person.id = clientArr.length</span><br><span class="line">      clientArr.push(person)</span><br><span class="line">      person.setEncoding(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">      <span class="comment">// 客户socket进程绑定事件</span></span><br><span class="line">      person.on(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">        clientArr.forEach(<span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 数据写入全部客户进程中</span></span><br><span class="line">          <span class="comment">// 数据在这里处理</span></span><br><span class="line">          val.write(analysis(chunk))</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">      person.on(<span class="string">&#x27;close&#x27;</span>, <span class="function">(<span class="params">p1</span>) =&gt;</span> &#123;</span><br><span class="line">        clientArr[p1.id] = <span class="literal">null</span></span><br><span class="line">      &#125;)</span><br><span class="line">      person.on(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">p1</span>) =&gt;</span> &#123;</span><br><span class="line">        clientArr[p1.id] = <span class="literal">null</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    server.listen(<span class="number">801</span>)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>python的sender</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sender</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, host=<span class="string">&quot;localhost&quot;</span>, port=<span class="number">800</span></span>):</span></span><br><span class="line">        self.address = (host, port)</span><br><span class="line">        self.s = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connecting</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.s.connect(self.address)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pose</span>(<span class="params">self, nousepara, img</span>):</span> <span class="comment"># 发送图片</span></span><br><span class="line">        base64_str = cv2.imencode(<span class="string">&#x27;.jpg&#x27;</span>, img)[<span class="number">1</span>].tostring()</span><br><span class="line">        base64_str = base64.b64encode(base64_str)</span><br><span class="line">        self.s.send(json.dump(&#123;</span><br><span class="line">            <span class="string">&quot;command&quot;</span>:<span class="string">&quot;imgshow&quot;</span>,</span><br><span class="line">            <span class="string">&quot;img&quot;</span>:base64_str</span><br><span class="line">        &#125;))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendJson</span>(<span class="params">self, jsonData</span>):</span></span><br><span class="line">        self.s.send(jsonData)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> socket通信 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/new/2021/05/13/JS/js%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E5%89%B2/"/>
      <url>/new/2021/05/13/JS/js%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E5%89%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="切分并且去空"><a href="#切分并且去空" class="headerlink" title="切分并且去空"></a>切分并且去空</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.split(<span class="string">&quot;;&quot;</span>).filter(<span class="built_in">Boolean</span>)</span><br></pre></td></tr></table></figure><h3 id="去除左右空格"><a href="#去除左右空格" class="headerlink" title="去除左右空格"></a>去除左右空格</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.trim()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/new/2021/05/12/UNI-APP%E7%9B%B8%E5%85%B3/uniapp-app%E5%BC%80%E5%8F%91/"/>
      <url>/new/2021/05/12/UNI-APP%E7%9B%B8%E5%85%B3/uniapp-app%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="app发起POST请求-并由django接收"><a href="#app发起POST请求-并由django接收" class="headerlink" title="app发起POST请求,并由django接收"></a>app发起POST请求,并由django接收</h3><p>uniapp发起post请求的时候,服务器端(Django)接收不到</p><p>注意要修改header,按下面这个来,</p><p>原因我不清楚,反正能用了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">uni.request(&#123;</span><br><span class="line">    url: &#39;http:&#x2F;&#x2F;192.168.31.107:8081&#x2F;a&#x2F;course&#39;, &#x2F;&#x2F;仅为示例，并非真实接口地址。</span><br><span class="line">method: &#39;POST&#39;,</span><br><span class="line">    data: &#123;</span><br><span class="line">        &#39;ID&#39;: &quot;usr1&quot;,</span><br><span class="line">&#39;token&#39;: &quot;万能token&quot;,</span><br><span class="line">&#39;deviceID&#39;: &quot;gjswt&quot;,</span><br><span class="line">timeStamp: time,</span><br><span class="line">hash: ha</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    header: &#123;        </span><br><span class="line">        &#39;content-type&#39;: &#39;application&#x2F;x-www-form-urlencoded&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    success: (res) &#x3D;&gt; &#123;</span><br><span class="line">        console.log(res.data);</span><br><span class="line">        this.text &#x3D; &#39;request success&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="在app中打开网页"><a href="#在app中打开网页" class="headerlink" title="在app中打开网页"></a>在app中打开网页</h3><p>因为是app的原因,所以不能直接控制url去别人的网站,需要使用webview</p><p>实现方式是,新建一个页面,里面就是一个web-view,然后,web-view的src,使用app内部的url参数传进来</p><p>新建vue文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;web-view :src&#x3D;&quot;url&quot; :progress&#x3D;&quot;false&quot;&gt;&lt;&#x2F;web-view&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">url:&quot;&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line">onLoad(option) &#123;</span><br><span class="line">this.url&#x3D;option.newurl</span><br><span class="line">&#125;,&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在pages.json中注册上面那个页面:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;pages/index/webviews&quot;</span>,  <span class="comment">// 根据实际路径修改</span></span><br><span class="line">    <span class="attr">&quot;style&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;navigationBarTitleText&quot;</span>: <span class="string">&quot;资讯&quot;</span> <span class="comment">// 标题栏内容,根据实际去修改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在要打开网页的页面,import上述vue文件,然后如下调用:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> load <span class="keyword">from</span> <span class="string">&#x27;@/pages/index/webviews.vue&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uni.navigateTo(&#123;</span><br><span class="line">    url: <span class="string">&quot;./webviews?newurl=&quot;</span>+c.path,</span><br><span class="line">    success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;&#125;,</span><br><span class="line">    fail: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    alert(<span class="string">&quot;失败&quot;</span>) <span class="comment">// 注意,alert是h5端测试用的,app端请用toast</span></span><br><span class="line">    &#125;,</span><br><span class="line">    complete: <span class="function">() =&gt;</span> &#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="showToast"><a href="#showToast" class="headerlink" title="showToast"></a>showToast</h3><p>默认是带对勾的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uni.showToast(&#123;</span><br><span class="line">    title: <span class="string">&#x27;预约成功&#x27;</span>,</span><br><span class="line">    duration: <span class="number">3000</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>加上这句变成没对勾的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">uni.showToast(&#123;</span><br><span class="line">title: <span class="built_in">String</span>(score),</span><br><span class="line">duration: <span class="number">2000</span>,</span><br><span class="line">icon:<span class="string">&quot;none&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="更换子页面默认上方的显示条NavigationBarTitle"><a href="#更换子页面默认上方的显示条NavigationBarTitle" class="headerlink" title="更换子页面默认上方的显示条NavigationBarTitle"></a>更换子页面默认上方的显示条NavigationBarTitle</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uni.setNavigationBarTitle(&#123;</span><br><span class="line">title: <span class="string">&quot;医院合集&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="radio的使用"><a href="#radio的使用" class="headerlink" title="radio的使用"></a>radio的使用</h3><p>模板中的radiogroup</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">radio-group</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;ch&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">radio</span> <span class="attr">:value</span>=<span class="string">&quot;a&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">text</span>&gt;</span>医生<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">radio</span> <span class="attr">:value</span>=<span class="string">&quot;b&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">text</span>&gt;</span>普通用户<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">radio-group</span>&gt;</span></span><br></pre></td></tr></table></figure><p>data段:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        goto: <span class="number">0</span>,</span><br><span class="line">        a: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        b: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>method:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ch</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.goto=<span class="built_in">parseInt</span>(event.detail.value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UNI-APP相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/new/2021/05/07/python-uniapp%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E5%93%88%E5%B8%8C%E5%80%BC/"/>
      <url>/new/2021/05/07/python-uniapp%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E5%93%88%E5%B8%8C%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="python端"><a href="#python端" class="headerlink" title="python端:"></a>python端:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">hashlib.sha1(<span class="string">&#x27;message&#x27;</span>.encode(encoding=<span class="string">&#x27;UTF-8&#x27;</span>)).hexdigest()</span><br></pre></td></tr></table></figure><h3 id="uniapp端"><a href="#uniapp端" class="headerlink" title="uniapp端:"></a>uniapp端:</h3><p>先在控制台</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install sha1  --save</span><br></pre></td></tr></table></figure><p>然后:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var sha1 &#x3D; require(&#39;sha1&#39;);</span><br><span class="line">sha1(&quot;message&quot;);</span><br></pre></td></tr></table></figure><p>结果就是一样的了!</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/new/2021/04/30/python%E8%B7%AF%E5%BE%84%E9%81%8D%E5%8E%86/"/>
      <url>/new/2021/04/30/python%E8%B7%AF%E5%BE%84%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>[等待完善]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i, j, k <span class="keyword">in</span> os.walk(<span class="string">&quot;./&quot;</span>):</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> k:</span><br><span class="line">        temp = i+<span class="string">&quot;/&quot;</span>+file</span><br><span class="line">        temp = temp.replace(<span class="string">&quot;//&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">        temp = temp.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">        temp = temp.replace(<span class="string">&quot;\\\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">        files.append(temp)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/new/2021/04/28/CPP/cpp-OJ%E7%9A%84IO%E7%BB%83%E4%B9%A0/"/>
      <url>/new/2021/04/28/CPP/cpp-OJ%E7%9A%84IO%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="cpp的IO练习"><a href="#cpp的IO练习" class="headerlink" title="cpp的IO练习"></a>cpp的IO练习</h1><h3 id="相加-1"><a href="#相加-1" class="headerlink" title="相加(1)"></a>相加(1)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">每行两个元素,有多行</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 5</span><br><span class="line">10 20</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">30</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> get1;</span><br><span class="line">    <span class="keyword">int</span> get2;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;get1&gt;&gt;get2)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;get1+get2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相加-2"><a href="#相加-2" class="headerlink" title="相加(2)"></a>相加(2)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">跟1相比,提前告知了一共有多少行</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 5</span><br><span class="line">10 20</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">30</span><br></pre></td></tr></table></figure><p>可以像1一样,将多出来的参数cin,然后忽略掉,也可以用while n–的方式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> get1;</span><br><span class="line">    <span class="keyword">int</span> get2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;get1;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;get1&gt;&gt;get2)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;get1+get2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> get1, get2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;get1&gt;&gt;get2;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;get1+get2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相加-3"><a href="#相加-3" class="headerlink" title="相加(3)"></a>相加(3)</h3><p>代码有</p><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4 1 2 3 4</span><br><span class="line">5 1 2 3 4 5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">15</span><br></pre></td></tr></table></figure><p>code:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,get;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (m--)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; get;</span><br><span class="line">            sum = sum + get;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CPP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Django文件上传</title>
      <link href="/new/2021/04/25/DJANGO/Django-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/new/2021/04/25/DJANGO/Django-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="使用表单中的文件提交功能"><a href="#使用表单中的文件提交功能" class="headerlink" title="使用表单中的文件提交功能"></a>使用表单中的文件提交功能</h3><p>1, 模板中添加如下内容,向目标位置发起POST请求</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/upload/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fafafa&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2, 由模板层进行处理</p><p>其中,obj.name是上传文件的文件名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="meta">@csrf_exempt</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:<span class="comment"># 获取对象</span></span><br><span class="line">        obj = request.FILES.get(<span class="string">&#x27;fafafa&#x27;</span>)</span><br><span class="line">        print(obj.name)   <span class="comment"># 文件名     </span></span><br><span class="line">        f = <span class="built_in">open</span>(<span class="string">&quot;D:/b/djangotemp.apk&quot;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> chunk <span class="keyword">in</span> obj.chunks():</span><br><span class="line">            f.write(chunk)</span><br><span class="line">        f.close()</span><br><span class="line">        <span class="keyword">return</span>  HttpResponse(<span class="string">&#x27;上传成功&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">&quot;uploadpageName&quot;</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django-文件下载</title>
      <link href="/new/2021/04/25/DJANGO/Django-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
      <url>/new/2021/04/25/DJANGO/Django-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Django自带了FileResponse模块用于文件的返回</p><p>其中,newestVersion.apk是要保存的文件名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">request</span>):</span></span><br><span class="line">    file=<span class="built_in">open</span>(<span class="string">&#x27;D:/b/djangotemp.apk&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    response =FileResponse(file)</span><br><span class="line">    response[<span class="string">&#x27;Content-Type&#x27;</span>]=<span class="string">&#x27;application/octet-stream&#x27;</span></span><br><span class="line">    response[<span class="string">&#x27;Content-Disposition&#x27;</span>]=<span class="string">&#x27;attachment;filename=&quot;newestVersion.apk&quot;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware和Hyperv</title>
      <link href="/new/2021/04/24/vmware%E5%92%8CWindowssandbox%E4%B8%8D%E5%85%BC%E5%AE%B9/"/>
      <url>/new/2021/04/24/vmware%E5%92%8CWindowssandbox%E4%B8%8D%E5%85%BC%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="VMware-Workstation-雷电手机正常运行"><a href="#VMware-Workstation-雷电手机正常运行" class="headerlink" title="VMware Workstation/雷电手机正常运行"></a>VMware Workstation/雷电手机正常运行</h2><ol><li>禁用Hyper-V，PowerShell/CMD管理员运行：<code>bcdedit /set hypervisorlaunchtype off</code></li><li>重新启动计算机</li></ol><h2 id="Docker-Windows-SandBox-Hyperv正常运行"><a href="#Docker-Windows-SandBox-Hyperv正常运行" class="headerlink" title="Docker/Windows SandBox/Hyperv正常运行"></a>Docker/Windows SandBox/Hyperv正常运行</h2><ol><li>重新开启Hyper-V，PowerShell/CMD管理员运行：<code>bcdedit /set hypervisorlaunchtype auto</code></li><li>重新启动计算机</li></ol><p><a href="https://github.com/AI0TSec/Blog/issues/52">解决VMware Workstation/Virutalbox（安卓模拟器）与Windows Sandbox/Hyper-v/Docker/Device/Credential Guard不兼容问题 · Issue #52 · AI0TSec/Blog · GitHub</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django-1 简介</title>
      <link href="/new/2021/04/24/DJANGO/Django-1%E7%AE%80%E4%BB%8B/"/>
      <url>/new/2021/04/24/DJANGO/Django-1%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Django 是使用 Python 开发的开源 Web 开发框架。使用 Django，你能以最小的代价构建和维护高质量的 Web 应用。 本课程将带你迅速了解 Django，为快速开发网站打好基础。</p><h4 id="为什么使用-Django"><a href="#为什么使用-Django" class="headerlink" title="为什么使用 Django"></a>为什么使用 Django</h4><ul><li>Django 诞生于新闻网站的环境中，它所提供的特性非常适合开发内容类的网站（例如：博客，交流社区，图片分享站等等…）。因为 Django 是在快节奏的新闻编辑环境中开发的，它的设计目的是使常见的 Web 开发任务变得快速而简单。</li><li>Django 是开源的，不是商业项目或者科研项目，它集中力量解决 Web 开发中所遇到的一系列问题。因此，Django 每天都在现有的基础上进步，以适应不断更迭的开发需求。这样既节省了开发时间，也提高了后期维护的效率。</li></ul><h3 id="Django概览"><a href="#Django概览" class="headerlink" title="Django概览"></a>Django概览</h3><p>我们分 3 个 Python 文件（models.py，urls.py，views.py）和 HTML 模板文件（template.html）</p><h4 id="设计模型-Model"><a href="#设计模型-Model" class="headerlink" title="设计模型 Model"></a>设计模型 Model</h4><p>Django 无需数据库就可以使用，通过对象关系映射器（Object-relational mapping），仅使用 Python 代码就可以描述数据结构。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myProject/myApp/models.py</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">book</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line">    pub_date = models.DateField()</span><br></pre></td></tr></table></figure><p><code>models.py</code> 文件主要用一个 Python 类来描述数据表。称为模型(model) 。 运用这个类，你可以通过简单的 Python 代码来创建、检索、更新、删除 数据库中的记录而无需写一条又一条的 SQL 语句。</p><p>在这里我们创建了一个 book 模型，并定义了 name 和 pub_date 属性。</p><h4 id="设计视图-Views"><a href="#设计视图-Views" class="headerlink" title="设计视图 Views"></a>设计视图 Views</h4><p>在模型被定义之后，我们便可以在视图中引用模型。通常，视图根据参数检索数据，加载一个模板，并使用检索到的数据呈现模板。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myProject/myApp/views.py</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Person</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">book_archive</span>(<span class="params">request, year</span>):</span></span><br><span class="line">    book_list = Person.objects.<span class="built_in">filter</span>(birth_year = year)</span><br><span class="line">    context = &#123;<span class="string">&#x27;year&#x27;</span>: year, <span class="string">&#x27;book_list&#x27;</span>: book_list&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;books/year_archive.html&#x27;</span>, context)</span><br></pre></td></tr></table></figure><p><code>views.py</code> 文件包含了页面的业务逻辑。<code>book_archive()</code> 函数叫做视图。这里还用到了 <code>year_archive.html</code> 模板。</p><h4 id="设计链接-Urls"><a href="#设计链接-Urls" class="headerlink" title="设计链接 Urls"></a>设计链接 Urls</h4><p>优雅简洁的 URL 解析式是衡量高品质网站的重要标准。Django 鼓励使用漂亮的 URL 设计。</p><p>使用这些优美的 URL，只需要建立 URL 和 Python 回调函数简单的映射关系。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myProject/myProject/urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;books/&lt;int:year&gt;&#x27;</span>, views.year_archive),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>urls.py</code> 指出了什么样的 URL 调用什么视图。 在这个例子中 <code>books/xxxxx</code> 将会调用 <code>year_archive()</code> 这个函数。也就是说，在进入这个链接时，会返回视图函数的结果。</p><h4 id="设计模板-Templates"><a href="#设计模板-Templates" class="headerlink" title="设计模板 Templates"></a>设计模板 Templates</h4><p>Django 拥有强大的模板功能，使用该模板能设计出强大的 Web 页面。</p><ul><li><code>/template/year_archive.html</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;Books for &#123;&#123; year &#125;&#125;&#123;% endblock %&#125; &#123;&#123;% block content %&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Articles for &#123;&#123;years&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% for book in book_list %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; book.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Published &#123;&#123; book.pub_date|date:&quot;F j, Y&quot; &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125; &#123;% end block %&#125;</span><br></pre></td></tr></table></figure><p><code>year_archive.html</code> 是 html 模板。使用带基本逻辑声明的模板语言，如 <code>&#123;% for book in book_list %&#125;</code>，它试图将函数返回的结果显示在网页上。</p><p>Django 的这种结构我们称之为 MTV 模式：M 代表模型（Model），T 代表模板（Template），V 代表视图（View）。这三个分别代表了三种不同功能的 Web 应用，各司其职，又彼此合作。 大家一定听说过 MVC 模式（Mode-View-Controller），MTV 模式本质上与 MVC 相同，都是让各组件保持低耦合的关系。 关于 MTV 模式我们将在后面部分详细的讲解。</p><p>以上只是 Django 的功能性概述，后面我们将每个部分拆分开来逐一讲解。</p>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django-2 环境搭建</title>
      <link href="/new/2021/04/24/DJANGO/Django-2%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/new/2021/04/24/DJANGO/Django-2%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="Linux安装django"><a href="#Linux安装django" class="headerlink" title="Linux安装django"></a>Linux安装django</h4><p>我们首先在终端命令行更新 pip3：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install -U pip</span><br></pre></td></tr></table></figure><p>安装 Django2 的最终版本 2.2.9：(也可以是其他版本)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django==2.2.9</span><br></pre></td></tr></table></figure><p>此外我们还要安装一些其它的基础工具包，先安装 ipython 和 mysqlclient 这两个，其它的在需要时再进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install libmysqlclient-dev</span><br><span class="line">pip install ipython mysqlclient</span><br></pre></td></tr></table></figure><h4 id="创建web项目"><a href="#创建web项目" class="headerlink" title="创建web项目"></a>创建web项目</h4><p>执行命令 <code>django-admin startproject</code> 初始化一个 Django 项目，后面的参数为项目名称，我们这里的项目名称定为 myProject。执行 <code>tree myProject</code> 命令查看项目的目录结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ django-admin startproject myProject</span><br><span class="line"></span><br><span class="line">tree myProject</span><br><span class="line">$ tree myProject                                   </span><br><span class="line">myProject</span><br><span class="line">├── manage.py</span><br><span class="line">└── myProject</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── settings.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── wsgi.py</span><br><span class="line">1 directory, 5 files</span><br></pre></td></tr></table></figure><p>对主目录下的文件和目录依次说明：</p><ul><li><code>manage.py</code> 项目的入口文件，在后面的实验中我们会大量使用它来执行一些命令用来创建应用、启动项目、控制数据表迁移等。</li><li><code>myProject</code> 主目录下的同名子目录，为项目的核心目录，它里面包含配置文件和管理应用的文件。</li><li><code>myProject/__init__.py</code> 每个子目录都会包含这样一个 <code>__init__.py</code> 文件，它是一个空文件，在需要的时候会引入目录下的对象。</li><li><code>myProject/settings.py</code> 配置文件，里面包含对数据库的设置项、CSRF Token 的设置项、模板的设置项等全部设置。</li><li><code>myProject/urls.py</code> 路由控制文件，处理客户端请求，分发到对应的视图函数去处理。</li><li><code>myProject/wsgi.py</code> 处理请求和响应，我们很少去动它。</li></ul><p>在终端执行 <code>cd myProject</code> 命令进入到项目的主目录，然后执行如下命令创建一个名为 myApp 的应用，注意实验环境里不可以创建名为 test 的应用，某些情况下它与 Python 模块冲突：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd myProject</span><br><span class="line">python manage.py startapp myApp</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> myProject</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> python3 manage.py startapp myApp</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tree</span></span><br><span class="line">.</span><br><span class="line">├── manage.py</span><br><span class="line">├── myApp</span><br><span class="line">│   ├── admin.py</span><br><span class="line">│   ├── apps.py</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── migrations</span><br><span class="line">│   │   └── __init__.py</span><br><span class="line">│   ├── models.py</span><br><span class="line">│   ├── tests.py</span><br><span class="line">│   └── views.py</span><br><span class="line">└── myProject</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── __pycache__</span><br><span class="line">    │   ├── __init__.cpython-35.pyc</span><br><span class="line">    │   └── settings.cpython-35.pyc</span><br><span class="line">    ├── settings.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── wsgi.py</span><br><span class="line"></span><br><span class="line">4 directories, 14 files</span><br></pre></td></tr></table></figure><p>如上所示，创建了名为 myApp 的应用后，在项目的主目录下出现了名为 myApp 的目录，这就是应用目录。</p><p>应用中的文件说明如下：</p><ul><li><code>myApp/admin.py</code> 用于控制后台管理的文件，在后面的实验中会用到。</li><li><code>myApp/apps.py</code> 用于管理应用本身的文件，包括应用的名字如何命名，默认就是 myApp 。</li><li><code>myApp/__init__.py</code> 空文件，前面已经介绍过。</li><li><code>myApp/migrations</code> 这是用于记录数据库变更信息的目录，Django 中自带的数据库版本控制功能就体现在这个目录，在学习数据存储时会详细介绍。</li><li><code>myApp/models.py</code> 创建映射类的文件，熟悉 Flask 的同学一定不陌生。</li><li><code>myApp/tests.py</code> 编写测试代码的文件。</li><li><code>myApp/views.py</code> 创建视图函数的文件，视图函数用于处理客户端发来的请求。</li></ul><p>创建一个应用后,该应用并未与项目产生联系，需要在配置文件中添加此应用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim myProject/settings.py</span><br></pre></td></tr></table></figure><p>修改 INSTALLED_APPS 项，添加我们创建的应用名称 myApp，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;myApp&#x27;</span>                                     (+)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h4><p>新打开一个终端并输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myProject</span><br><span class="line">python3 manage.py runserver 0:8080</span><br></pre></td></tr></table></figure><p>正常就可以启动项目了</p><p>另外 settings.py 可以设置这两条,时区和语言</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django-3 视图view</title>
      <link href="/new/2021/04/24/DJANGO/Django-3%E8%A7%86%E5%9B%BEview/"/>
      <url>/new/2021/04/24/DJANGO/Django-3%E8%A7%86%E5%9B%BEview/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>编辑 <code>myApp/views.py</code> 文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myApp/views.py</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure><p>可以看出来，我们想要看到的就是在页面中输出 <code>Hello, world!</code>。</p><p>但仅编写视图函数，并不能在 Django 页面上显示出来。如果想要看到效果，我们需要使用 URL 来映射到它。</p><p>接下来需要思考一下，视图函数是有了，它映射到那个 URL 路径下呢？也就是说浏览器访问了哪个网址，才会调用这个视图函数处理？</p><p>需要编辑 <code>myProject/urls.py</code> 文件，修改为以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myProject/urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> myApp <span class="keyword">import</span> views  <span class="comment"># 引入视图函数</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, views.index, name=<span class="string">&#x27;index&#x27;</span>), <span class="comment"># 新增路由映射</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>最外层的 myApp 目录也就是 <code>/home/project/myProject</code> 为项目的主目录，引入其它文件中的对象，可以使用绝对路径或相对路径。</p><p>urlpatterns 为路由映射到视图函数的控制列表，当服务器收到浏览器发送过来的请求时，首先到这里检查是否有对应的视图函数。如果是 <a href="https://www.abc.com/">https://www.abc.com</a> 就让 index 来处理，如果是 <a href="https://www.abc.com/admin/">https://www.abc.com/admin/</a> 就让 admin.site.urls 来处理。</p><p>这一步我们将应用 <code>myApp</code> 里视图函数与 URL 映射到了一起。保存后刷新欢迎页，会看到页面显示了hello world,说明视图函数生效了</p><h4 id="有关这个path函数"><a href="#有关这个path函数" class="headerlink" title="有关这个path函数"></a>有关这个path函数</h4><table><thead><tr><th>参数</th><th>意义</th><th>是否必须</th></tr></thead><tbody><tr><td>route</td><td>route 是一个匹配 URL 的准则（类似正则表达式）。当 Django 响应一个请求时，它会从 urlpatterns 的第一项开始，按顺序依次匹配列表中的项，直到找到匹配的项。</td><td>必须</td></tr><tr><td>view</td><td>当 Django 找到了一个匹配的准则，就会调用这个特定的视图函数，并传入一个 HttpRequest 对象作为第一个参数，被“捕获”的参数以关键字参数的形式传入。</td><td>必须</td></tr><tr><td>kwargs</td><td>任意个关键字参数可以作为一个字典传递给目标视图函数。</td><td>可选</td></tr><tr><td>name</td><td>为你的 URL 取名能使你在 Django 的任意地方唯一地引用它，尤其是在模板中。这个有用的特性允许你只改一个文件就能全局地修改某个 URL 模式。</td><td>可选</td></tr></tbody></table><p>在上面的代码中，<code>route</code> 为空意味着我们可以直接在桌面环境下用链接 <code>http://localhost:8000/myApp/</code> 访问该视图函数。</p>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django-5 模板template</title>
      <link href="/new/2021/04/24/DJANGO/Django-5%E6%A8%A1%E6%9D%BFtemplate/"/>
      <url>/new/2021/04/24/DJANGO/Django-5%E6%A8%A1%E6%9D%BFtemplate/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="创建模板"><a href="#创建模板" class="headerlink" title="创建模板"></a>创建模板</h4><p>首先,在 myProject/myApp 目录里创建一个 templates 目录。Django 将会在这个目录里查找模板文件。</p><p>在 myProject/myProject/settings.py 文件中的 <code>TEMPLATES</code> 配置项描述了 Django 如何载入和渲染模板。默认的设置文件设置了 <code>DjangoTemplates</code> 后端，并设置 <code>APP_DIRS = True</code>。这一选项将会让 <code>DjangoTemplates</code> 在每个 <code>INSTALLED_APPS</code> 文件夹中寻找 templates 子目录。</p><p><img src="3c5979092ddf41dfd3fd06618caf30de-0" alt="pic"></p><p>新建模板文件 myApp/templates/myApp/detail.html，并向其中写入如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--myApp/templates/myApp/detail.html--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Book List<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>书名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>作者<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>出版社<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>出版时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  &#123;% for book in book_list.all %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; book.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; book.author &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; book.pub_house &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; book.pub_date &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>模板统一使用点符号 <code>.</code> 来访问变量的属性。在示例 <code>&#123;&#123; book.name &#125;&#125;</code> 中，首先 Django 尝试对 book 对象使用字典查找（也就是使用 <code>obj.get(str)</code> 操作），如果失败了就尝试属性查找（也就是 <code>obj.str</code> 操作），结果是成功了。如果这一操作也失败的话，将会尝试列表查找（也就是 <code>obj[int]</code> 操作）。</p><p>在 <code>&#123;% for ... in ... %&#125;</code> 循环中发生的函数调用：<code>book_list.all</code> 被解释为 Python 代码 <code>book_list.objects.all()</code>，将会返回一个可迭代的 <code>Book</code> 对象，这一对象可以在 <code>&#123;% for ... in ... %&#125;</code> 标签内部使用。</p><h4 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h4><p>现在我们要创建视图来返回图书列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myApp/views.py</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> myApp.models <span class="keyword">import</span> Book</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span>(<span class="params">request</span>):</span></span><br><span class="line">    book_list = Book.objects.order_by(<span class="string">&#x27;pub_date&#x27;</span>)[:<span class="number">5</span>]</span><br><span class="line">    context = &#123;<span class="string">&#x27;book_list&#x27;</span>: book_list&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;myApp/detail.html&#x27;</span>, context)</span><br></pre></td></tr></table></figure><p>在此视图函数 <code>detail</code> 中，首先将数据库的 Book 列表按照 <code>pub_date</code> 时间来排序，存储到变量 <code>book_list</code> 中。</p><p>“载入模板，填充上下文，再返回由它生成的 HttpResponse 对象”是一个非常常用的操作流程。于是 Django 提供了一个快捷函数 <code>render()</code>。</p><p><code>render()</code> 函数把 <code>request</code> 对象作为它的第一个参数，模板作为第二个参数，字典作为它的可选的第三个参数。它返回给定模板呈现的给定文本的一个 <code>HttpResponse</code> 对象。</p><p>在这里，<code>context</code> 信息将会返回到模板 <code>myApp/detail.html</code>。</p><h4 id="绑定链接"><a href="#绑定链接" class="headerlink" title="绑定链接"></a>绑定链接</h4><p>将新视图添加进 myProject.urls 模块里：</p><p>不过这里把刚才自己添加的index删掉了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myProject/urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> myApp <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># path(&#x27;admin/&#x27;, admin.site.urls),</span></span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, views.detail, name=<span class="string">&#x27;detail&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py runserver 0:8080</span><br></pre></td></tr></table></figure><p>页面显示了书的列表,就说明成功了</p>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django-4 模型</title>
      <link href="/new/2021/04/24/DJANGO/Django-4%E6%A8%A1%E5%9E%8Bmodel/"/>
      <url>/new/2021/04/24/DJANGO/Django-4%E6%A8%A1%E5%9E%8Bmodel/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h4><p>Django 的项目设置都包含在了 <code>myProject/myProject/settings.py</code> 中。</p><p>对于数据库，配置文件使用了 <code>SQLite</code> 作为默认的数据库文件。对于只是初步尝试 Django 的我们来说，这十分方便，无需再去配置其他的东西。</p><p>在实际开发中，我们会用到其它更具扩展性的数据库。例如 <code>MySQL</code>、<code>Oracle</code> 等。</p><p>如果你选择使用这些数据库，你需要安装相应数据库的绑定，然后改变设置文件中的 <code>DATABASE default</code>。</p><p>这里使用 SQLite 数据库，想要使用其它数据库，可以参考 <a href="https://docs.djangoproject.com/zh-hans/2.0/ref/settings/#std:setting-DATABASES">Django 官方文档 DATABASE</a>。记得配置设置文件中的 <code>TIME_ZONE</code> 为自己所在地的时区，中国地区为 <code>Asia/Shanghai</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="创建模型"><a href="#创建模型" class="headerlink" title="创建模型"></a>创建模型</h4><p>模型是真实数据的简明描述。它包含了存储的数据所必要的字段和行为。Django 遵循<strong>不要重复自己（DRY 原则）</strong>。它的目标是让你只需要定义数据模型，然后其它的东西你都不用关心，都会自动从模型生成。</p><p>实验前，先进入到项目主目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myProject</span><br></pre></td></tr></table></figure><p>在我们创建的图书馆应用中，需要创建一个模型 <code>Book</code>。<code>Book</code> 模型包括四个字段：书名、作者、出版社、出版日期。</p><p>向 <code>myApp/models.py</code> 文件中写入如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myApp/models.py</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    author = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line">    pub_house = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    pub_date = models.DateTimeField(<span class="string">&#x27;date published&#x27;</span>)</span><br></pre></td></tr></table></figure><p>从代码可以看出，模型是 <code>django.db.models.Model</code> 类的子类。每个模型有一些类变量，它们都表示模型里的一个数据库字段。</p><p>每个字段都是 <code>Field</code> 类的实例。比如字符字段是 <code>CharField</code>，日期字段被表示为 <code>DateTImeField</code>。这将告诉 Django 每个字段要处理的数据类型。</p><p>定义某些 <code>Field</code> 类实例需要参数。如上面的 <code>max_length=100</code> 中的 <code>max_length</code>。这个参数的用处不止于用来定义数据结构，也用于验证数据。</p><h4 id="激活模型"><a href="#激活模型" class="headerlink" title="激活模型"></a>激活模型</h4><p>通过前面的代码，Django 可以：</p><ul><li>为这个应用创建数据库 schema（生成 CREATE TABLE 语句）。</li><li>创建可以与 Book 对象进行交互的 Python 数据库 API。</li></ul><p>为了实现上述功能，我们首先要将 myApp 应用安装到我们项目中。</p><p>因为 <code>MyappConfig</code> 类写在文件 <code>myApp/apps.py</code> 中，所以它的路径为 <code>myApp.apps.MyappConfig</code>。</p><p>在设置文件中添加路径：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myProject/settings.py</span></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;myApp&#x27;, 这一注释掉，不注释掉会因重复而报错</span></span><br><span class="line">    <span class="string">&#x27;myApp.apps.MyappConfig&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>现在你的 Django 项目会包含 myApp 应用。 运行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations myApp</span><br></pre></td></tr></table></figure><p>你会看到这样的输出：</p><p><img src="Django-4%E6%A8%A1%E5%9E%8Bmodel/8ba33eaa1179c0dc163dd6b97c508ba2-0" alt="pic"></p><p>通过运行 <code>makemigrations</code> 命令，Django 会检测你对模型文件的修改，并且把修改的部分储存为一次迁移。</p><p>让我们看看迁移命令会执行哪些 SQL 语句。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py sqlmigrate myApp 0001</span><br></pre></td></tr></table></figure><p>可以看到创建的 SQL 语句：</p><p><img src="Django-4%E6%A8%A1%E5%9E%8Bmodel/a17f7ee54436da43ac6ae129f81ea58a-0" alt="pic"></p><p>现在运行 migrate 命令，在数据库里创建新定义的模型的数据表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><p>看到如下画面，则表示成功！,这一步是写到了db文件中</p><p><img src="Django-4%E6%A8%A1%E5%9E%8Bmodel/32885d474af3e293ef996cd11e3daa33-0" alt="pic"></p><h4 id="使用api"><a href="#使用api" class="headerlink" title="使用api"></a>使用api</h4><p>这里可以通过命令行的形式,使用python类对象的方式进行编辑数据库</p><p>原文如下:</p><p>现在尝试一下 Django 为我们创建的各种 API：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell</span><br></pre></td></tr></table></figure><p>使用这个命令而不是简单的使用 “Python” 是因为 manage.py 会设置 <code>DJANGO_SETTINGS_MODULE</code> 环境变量，这个变量会让 Django 根据 <code>myProject/settings.py</code> 文件来设置 Python 包的导入路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">In [1]: from myApp.models import Book</span><br><span class="line">In [2]: Book.objects.all()   <span class="comment"># 获取 Book 所有对象</span></span><br><span class="line">Out[1]: &lt;QuerySet []&gt;</span><br><span class="line">In [3]: from django.utils import timezone</span><br><span class="line">In [4]: b = Book(name=<span class="string">&#x27;Business&#x27;</span>, author=<span class="string">&#x27;Tom&#x27;</span>, pub_house=<span class="string">&#x27;First Press&#x27;</span>, pub_date=timezone.now())    <span class="comment">#创建</span></span><br><span class="line">In [5]: b.save() <span class="comment">#保存</span></span><br><span class="line">In [6]: b.id</span><br><span class="line">Out[6]: 1</span><br><span class="line">In [7]: b.name</span><br><span class="line">Out[7]: <span class="string">&#x27;Business&#x27;</span></span><br><span class="line">In [8]: b.pub_date</span><br><span class="line">Out[8]: datetime.datetime(2020, 4, 27, 7, 37, 59, 123686, tzinfo=&lt;UTC&gt;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django-6 增删改</title>
      <link href="/new/2021/04/24/DJANGO/Django-6%E4%BD%BF%E7%94%A8MTV%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9/"/>
      <url>/new/2021/04/24/DJANGO/Django-6%E4%BD%BF%E7%94%A8MTV%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="设计表单"><a href="#设计表单" class="headerlink" title="设计表单"></a>设计表单</h4><p>在 <code>myApp/templates/myApp/detail.html</code> 里，添加一个表单。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">name</span>=<span class="string">&quot;addBook&quot;</span>&gt;</span></span><br><span class="line">  &#123;% csrf_token %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>书名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>作者：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>出版社：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pub_house&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>简要说明：</p><ul><li>上面的模板是输入相应的书名、作者和出版社后，点击添加，将数据存储到数据库并刷新页面显示出来。</li><li>我们设置表单的 <code>action=&quot;/addBook/&quot;</code>，并设置 <code>method=&quot;post&quot;</code>。使用 <code>method=&quot;post&quot;</code>（与其相对的是 <code>method=&quot;get&quot;</code>）是非常重要的，因为这个提交表单的行为会改变服务器端的数据,无论何时，当你需要创建一个改变服务器端数据的表单时，请使用 <code>method=&quot;post&quot;</code>。这不是 Django 的特定技巧，这是优秀的网站开发技巧。</li><li>由于我们创建一个 POST 表单（它具有修改数据的作用），所以我们需要小心跨站点请求伪造。 但你不必太过担心，因为 Django 已经拥有一个用来防御它的非常容易使用的系统。 简而言之，所有针对内部 URL 的 POST 表单都应该使用 <code>&#123;% csrf_token %&#125;</code> 模板标签。</li></ul><h4 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h4><p>之前提到过,urlpattern的name是唯一标识符,所以,通过那么就可以确定使用谁了,</p><p>原文如下:</p><p>举例项目只有一个应用 myApp。在一个真实的 Django 项目中，可能会有五个，十个，二十个，甚至更多应用。Django 如何分辨重名的 URL 呢？</p><p>举个例子，myApp 应用有 detail 视图，可能另一个博客应用也有同名的视图。Django 如何知道 <code>action=&quot;&quot;</code> 标签到底对应哪一个应用的 URL 呢？</p><p>答案是：在根 URLconf 中添加命名空间。在 <code>myProject/urls.py</code> 文件中稍作修改，加上 <code>app_name</code> 设置命名空间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> myApp <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">&#x27;myApp&#x27;</span> <span class="comment"># 添加这一行</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># path(&#x27;admin/&#x27;, admin.site.urls),</span></span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, views.detail, name=<span class="string">&#x27;detail&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;addBook/&#x27;</span>, views.addBook, name=<span class="string">&#x27;addBook&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>现在回到 <code>myApp/templates/myApp/detail.html</code> 更改 <code>action</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/addBook/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">name</span>=<span class="string">&quot;addBook&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加书籍"><a href="#添加书籍" class="headerlink" title="添加书籍"></a>添加书籍</h4><p>创建 <code>addBook</code> 函数来实现我们添加书籍的功能。</p><p>将下面的代码添加到 myApp/views.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myApp/views.py</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addBook</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        temp_name = request.POST[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">        temp_author = request.POST[<span class="string">&#x27;author&#x27;</span>]</span><br><span class="line">        temp_pub_house = request.POST[<span class="string">&#x27;pub_house&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line">    temp_book = Book(name=temp_name, author=temp_author, pub_house=temp_pub_house, pub_date=timezone.now())</span><br><span class="line">    temp_book.save()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重定向</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">&#x27;detail&#x27;</span>))</span><br></pre></td></tr></table></figure><p>在 myProject/urls.py 里添加 URL 地址映射：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myProject/urls.py</span></span><br><span class="line">path(<span class="string">&#x27;addBook/&#x27;</span>, views.addBook, name=<span class="string">&#x27;addBook&#x27;</span>),</span><br></pre></td></tr></table></figure><p>简单说明：</p><ul><li><code>request.POST</code> 是一个类字典对象，可以通过关键字的名字获取提交的数据。 这个例子中，<code>request.POST[&#39;name&#39;]</code> 以字符串形式返回<code>name</code>的值。<code>request.POST</code> 的值永远是字符串。</li><li>在添加书籍之后，代码返回一个 <code>HttpResponseRedirect</code> 而不是常用的 <code>HttpResponse</code>，<code>HttpResponseRedirect</code> 只接收一个参数：用户将要被重定向的 URL。</li><li>你应该在每次处理 POST 数据时，都返回<code>HttpResponseRedirect</code>。这也不是 Django 的特定技巧，这是优秀的网站开发的实践。</li><li>在这个例子中，我们在 <code>HttpResponseRedirect</code> 的构造函数中使用 <code>reverse()</code> 函数。这个函数避免了我们在视图函数中硬编码 URL。它需要我们给出想要跳转的视图的名字和该视图所对应的 URL 模式中需要给该视图提供的参数。<code>reverse()</code> 调用后将返回这样一个字符串：<code>/detail/</code>。</li></ul><p>添加书籍功能完成，现在可以随意添加书籍。</p><p>打开 Web 服务访问链接就可以查看效果：</p><p>添加前：</p><p><img src="Django-6%E4%BD%BF%E7%94%A8MTV%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9/e022008dfb53bf45f6610c3a43340269-0" alt="6-2.2-1"></p><p>添加后：</p><p><img src="Django-6%E4%BD%BF%E7%94%A8MTV%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9/b3835dde02612da5b8e16513738698d1-0" alt="6-2.2-2"></p><p style="color:red">具体什么是硬编码我还得查查</p><h4 id="删除书籍"><a href="#删除书籍" class="headerlink" title="删除书籍"></a>删除书籍</h4><p>删除书籍功能实现起来也很简单。</p><p>首先，在 <code>myApp/detail.html</code> 中设计我们的模板。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for book in book_list.all %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; book.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; book.author &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; book.pub_house &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; book.pub_date &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;delBook&#x27; book.id %&#125;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="comment">&lt;!--只添加这一行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出，只需要在每个书籍后面添加一个删除的按钮。删除时也传递了需要删除的图书的 <code>id</code>。</p><p>接着，配置 url，只需在 <code>myProject/urls.py</code> 中添加这一行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myProject/urls.py</span></span><br><span class="line">path(<span class="string">&#x27;delBook/&lt;int:book_id&gt;&#x27;</span>, views.deleteBook, name=<span class="string">&#x27;delBook&#x27;</span>),</span><br></pre></td></tr></table></figure><p>这里 <code>&lt;int:book_id&gt;</code> 是接收传递的参数 <code>book_id</code>。</p><p>最后设计视图函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myApp/views.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteBook</span>(<span class="params">request, book_id</span>):</span></span><br><span class="line">    bookID = book_id</span><br><span class="line">    Book.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=bookID).delete()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重定向</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">&#x27;detail&#x27;</span>))</span><br></pre></td></tr></table></figure><p>这个视图中，获取到 book 的 id，根据 id 来删除指定书籍。最后跟上面的添加书籍函数相同，使用重定位刷新页面。</p><p>打开 Web 服务访问链接查看效果：</p><p>删除后：</p><p><img src="Django-6%E4%BD%BF%E7%94%A8MTV%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9/d94c026f9842b9abe278138947a3918a-0" alt="6-2.3-1"></p>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django-7 MTV模式</title>
      <link href="/new/2021/04/24/DJANGO/Django-7MTV%E6%A8%A1%E5%BC%8F/"/>
      <url>/new/2021/04/24/DJANGO/Django-7MTV%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h4><p>在说 MTV 模式之前，让我们来简单的说说著名的 MVC 模式。</p><p>MVC，是模型（Model）-视图（View）-控制器（Controller）的缩写。其具体定义如下：</p><ul><li>M：模型（Model），数据存取层，负责业务对象和数据库对象。</li><li>V：视图（View），与用户的交互，负责显示与怎样显示。</li><li>C：控制器（Controller），接受用户动作，调用模型，输出相应视图。</li></ul><p>三者以一种插件似的，松耦合的方式连接在一起。</p><p><img src="document-uid731737labid7122timestamp1530773332746.png" alt="7-2.1-1"></p><h4 id="MTV"><a href="#MTV" class="headerlink" title="MTV"></a>MTV</h4><p>Django 的 MTV 设计模式是借鉴和遵循 MVC 的。</p><p>MTV 具体定义如下：</p><ul><li>M：模型（Model）,负责业务对象和数据库的关系映射。</li><li>T：模板（Template）,负责如何把页面展示给用户。</li><li>V：视图（View）,负责业务逻辑，并在适当时候调用模型和模板。</li></ul><h4 id="URL-分发器"><a href="#URL-分发器" class="headerlink" title="URL 分发器"></a>URL 分发器</h4><p>URL 分发器的作用是将页面请求分发给不同的视图（View）处理，视图再调用相应的模型（Model）和模板（Template）。</p><p>Django Web 框架：</p><p><img src="document-uid731737labid7122timestamp1530773348131.png" alt="7-2.1-2"></p><p>一个误区是把 MVC 模式与 MTV 模式等价替换。其实这样是不对的。</p><p>在 MTV 模式中，MVC 中的 View 分成了视图 View（展现哪些数据）和模板 Template（如何展现）2 个部分，而控制器（Controller）这个要素由框架自己来实现了，我们需要做的就是把 URL 对应到视图 V 就可以了，通过这样的 URL 配置，系统将一个请求发送到一个合适的视图。</p>]]></content>
      
      
      <categories>
          
          <category> DJANGO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java装箱拆箱</title>
      <link href="/new/2021/04/24/JAVA/java%E8%A3%85%E7%AE%B1%E6%8B%86%E7%AE%B1/"/>
      <url>/new/2021/04/24/JAVA/java%E8%A3%85%E7%AE%B1%E6%8B%86%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Java SE5开始提供自动装箱</p><p>简单来说就是这样:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Integer i = <span class="keyword">new</span> Integer(<span class="number">10</span>); <span class="comment">// 手动装箱</span></span><br><span class="line"></span><br><span class="line">Integer i = <span class="number">10</span>;  <span class="comment">// 自动装箱</span></span><br><span class="line"><span class="keyword">int</span> n = i;   <span class="comment">// 自动拆箱</span></span><br></pre></td></tr></table></figure><p>自动将基本数据类型转换成包装器类型,自动将包装器类型转换为基本数据类型.</p><p>比如下面这段代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer i = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> n = i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反编译的时候,可以看出,装箱的时候,调用的是Integer的valueOf(int)方法.</p><p>拆箱的时候自动调用Integer的intValue方法</p><p>举个栗子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">         </span><br><span class="line">        Integer i1 = <span class="number">100</span>;</span><br><span class="line">        Integer i2 = <span class="number">100</span>;</span><br><span class="line">        Integer i3 = <span class="number">200</span>;</span><br><span class="line">        Integer i4 = <span class="number">200</span>;</span><br><span class="line">         </span><br><span class="line">        System.out.println(i1==i2);</span><br><span class="line">        System.out.println(i3==i4);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果为 true false</p><p>因为,  i1和i2指向的是同一个对象,而i3和i4指向的是不同的对象,此时翻翻源码</p><p>这是valueOf:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &gt;= -<span class="number">128</span> &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line">            <span class="keyword">return</span> IntegerCache.cache[i + <span class="number">128</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是IntegerCache:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerCache</span> </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> high;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> Integer cache[];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> low = -<span class="number">128</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// high value may be configured by property</span></span><br><span class="line">            <span class="keyword">int</span> h = <span class="number">127</span>;</span><br><span class="line">            <span class="keyword">if</span> (integerCacheHighPropValue != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// Use Long.decode here to avoid invoking methods that</span></span><br><span class="line">                <span class="comment">// require Integer&#x27;s autoboxing cache to be initialized</span></span><br><span class="line">                <span class="keyword">int</span> i = Long.decode(integerCacheHighPropValue).intValue();</span><br><span class="line">                i = Math.max(i, <span class="number">127</span>);</span><br><span class="line">                <span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">                h = Math.min(i, Integer.MAX_VALUE - -low);</span><br><span class="line">            &#125;</span><br><span class="line">            high = h;</span><br><span class="line"></span><br><span class="line">            cache = <span class="keyword">new</span> Integer[(high - low) + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> j = low;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">                cache[k] = <span class="keyword">new</span> Integer(j++);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">IntegerCache</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统简介</title>
      <link href="/new/2021/04/24/LINUX/Linux%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/"/>
      <url>/new/2021/04/24/LINUX/Linux%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="linux-为何物"><a href="#linux-为何物" class="headerlink" title="linux 为何物"></a>linux 为何物</h4><p>Linux 就是一个操作系统，就像你多少已经了解的 Windows（xp，7，8）和 Mac OS 。至于操作系统是什么，就不用过多解释了，如果你学习过前面的入门课程，应该会有个基本概念了，这里简单介绍一下操作系统在整个计算机系统中的角色。</p><img src="1-1.png" alt="图1-1" style="zoom:80%;" /><p>我们的 Linux 主要是系统调用和内核那两层。当然直观地看，我们使用的操作系统还包含一些在其上运行的应用程序，比如文本编辑器、浏览器、电子邮件等。</p><h4 id="UNIX进化史"><a href="#UNIX进化史" class="headerlink" title="UNIX进化史"></a>UNIX进化史</h4><p><img src="1467262784463.png" alt="1"></p><h4 id="大致路径"><a href="#大致路径" class="headerlink" title="大致路径"></a>大致路径</h4><p><img src="1-8.png" alt="1"></p><h4 id="shell的一些快捷键"><a href="#shell的一些快捷键" class="headerlink" title="shell的一些快捷键"></a>shell的一些快捷键</h4><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td><code>Ctrl+d</code></td><td>键盘输入结束或退出终端</td></tr><tr><td><code>Ctrl+s</code></td><td>暂停当前程序，暂停后按下任意键恢复运行</td></tr><tr><td><code>Ctrl+z</code></td><td>将当前程序放到后台运行，恢复到前台为命令<code>fg</code></td></tr><tr><td><code>Ctrl+a</code></td><td>将光标移至输入行头，相当于<code>Home</code>键</td></tr><tr><td><code>Ctrl+e</code></td><td>将光标移至输入行末，相当于<code>End</code>键</td></tr><tr><td><code>Ctrl+k</code></td><td>删除从光标所在位置到行末</td></tr><tr><td><code>Alt+Backspace</code></td><td>向前删除一个单词</td></tr><tr><td><code>Shift+PgUp</code></td><td>将终端显示向上滚动</td></tr><tr><td><code>Shift+PgDn</code></td><td>将终端显示向下滚动</td></tr></tbody></table><h4 id="shell常用的通配符"><a href="#shell常用的通配符" class="headerlink" title="shell常用的通配符"></a>shell常用的通配符</h4><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配 0 或多个字符</td></tr><tr><td><code>?</code></td><td>匹配任意一个字符</td></tr><tr><td><code>[list]</code></td><td>匹配 list 中的任意单一字符</td></tr><tr><td><code>[^list]</code></td><td>匹配 除 list 中的任意单一字符以外的字符</td></tr><tr><td><code>[c1-c2]</code></td><td>匹配 c1-c2 中的任意单一字符 如：[0-9][a-z]</td></tr><tr><td><code>&#123;string1,string2,...&#125;</code></td><td>匹配 string1 或 string2 (或更多)其一字符串</td></tr><tr><td><code>&#123;c1..c2&#125;</code></td><td>匹配 c1-c2 中全部字符 如{1..10}</td></tr></tbody></table><h4 id="获得帮助-man手册"><a href="#获得帮助-man手册" class="headerlink" title="获得帮助(man手册)"></a>获得帮助(man手册)</h4><p>man <command> 查询指令对应的帮助</p><p>通常 man 手册中的内容很多，你可能不太容易找到你想要的结果，不过幸运的是你可以在 man 中使用搜索<code>/&lt;你要搜索的关键字&gt;</code>，查找完毕后你可以使用<code>n</code>键切换到下一个关键字所在处，<code>shift+n</code>为上一个关键字所在处。使用<code>Space</code>（空格键）翻页，<code>Enter</code>（回车键）向下滚动一行，或者使用<code>k</code>，<code>j</code>（vim 编辑器的移动键）进行向前向后滚动一行。按下<code>h</code>键为显示使用帮助（因为 man 使用 less 作为阅读器，实为<code>less</code>工具的帮助），按下<code>q</code>退出。</p><p>想要获得更详细的帮助，你还可以使用<code>info</code>命令，不过通常使用<code>man</code>就足够了。如果你知道某个命令的作用，只是想快速查看一些它的某个具体参数的作用，那么你可以使用<code>--help</code>参数，大部分命令都会带有这个参数</p><h4 id="字符画命令"><a href="#字符画命令" class="headerlink" title="字符画命令"></a>字符画命令</h4><p>安装 banner</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sysvbanner</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">banner acbs</span><br><span class="line">printerbanner -w 50 ACBS</span><br></pre></td></tr></table></figure><p>w是宽度的意思,在显示屏中显示比较小,必须加上宽度限制</p><p>其他的还有toilet figlet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install toilet</span><br><span class="line">sudo apt-get install giglet</span><br></pre></td></tr></table></figure><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">who am i</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者(完全相同)</span></span><br><span class="line">who mom likes</span><br></pre></td></tr></table></figure><img src="document-uid735639labid3timestamp1531731170296.png" alt="img" style="zoom:80%;" /><p>输出的第一列表示打开当前伪终端的用户的用户名（要查看当前登录用户的用户名，去掉空格直接使用 <code>whoami</code> 即可），第二列的 <code>pts/0</code> 中 <code>pts</code> 表示伪终端，所谓伪是相对于 <code>/dev/tty</code> 设备而言的，还记得上一节讲终端时的那七个使用 <code>[Ctrl]</code>+<code>[Alt]</code>+<code>[F1]～[F7]</code> 进行切换的 <code>/dev/tty</code> 设备么，这是“真终端”，伪终端就是当你在图形用户界面使用 <code>/dev/tty7</code> 时每打开一个终端就会产生一个伪终端，<code>pts/0</code> 后面那个数字就表示打开的伪终端序号，你可以尝试再打开一个终端，然后在里面输入 <code>who am i</code>，看第二列是不是就变成 <code>pts/1</code> 了，第三列则表示当前伪终端的启动时间。</p><p>还有一点需要注意的是，在某些环境中 <code>who am i</code> 和 <code>who mom likes</code> 命令不会输出任何内容，这是因为当前使用的 SHELL 不是登录时的 SHELL，没有用户与 who 的 stdin 相关联，因此不会输出任何内容。例如我在本地的 Ubuntu 系统上输入这个命令就不会有提示。</p><img src="uid871732-20200302-1583140204433" alt="图片描述" style="zoom:80%;" /><p>此时我们只需要打开一个登录 SHELL 的终端例如 Tmux，或者通过 ssh 登录到本机，再在新的终端里执行命令即可。</p><h4 id="who命令的其他参数"><a href="#who命令的其他参数" class="headerlink" title="who命令的其他参数"></a>who命令的其他参数</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-a</code></td><td>打印能打印的全部</td></tr><tr><td><code>-d</code></td><td>打印死掉的进程</td></tr><tr><td><code>-m</code></td><td>同<code>am i</code>，<code>mom likes</code></td></tr><tr><td><code>-q</code></td><td>打印当前登录用户数及用户名</td></tr><tr><td><code>-u</code></td><td>打印当前登录用户登录信息</td></tr><tr><td><code>-r</code></td><td>打印运行等级</td></tr></tbody></table><h4 id="查看和切换用户"><a href="#查看和切换用户" class="headerlink" title="查看和切换用户"></a>查看和切换用户</h4><p>一般 /home下的每一个文件夹就是一个普通目录</p><p><code>su &lt;user&gt;</code> 可以切换到用户 user，执行时需要输入目标用户的密码，</p><p><code>sudo &lt;cmd&gt;</code> 可以以特权级别运行 cmd 命令，需要当前用户属于 sudo 组，且需要输入当前用户的密码。</p><p><code>su - &lt;user&gt;</code> 命令也是切换用户，但是同时用户的环境变量和工作目录也会跟着改变成目标用户所对应的。退出当前用户跟退出终端一样，可以使用 <code>exit</code> 命令或者使用快捷键 <code>Ctrl+D</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser lilei # 新建一个叫lilei的用户</span><br><span class="line">sudo passwd lilei # 设置对应账户的密码,也可以设置当前账户的密码</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LINUX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium-1 基础知识</title>
      <link href="/new/2021/04/24/SELENIUM/Selenium-1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/new/2021/04/24/SELENIUM/Selenium-1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1,安装库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install selenium</span><br></pre></td></tr></table></figure><p>2,安装geckodriver</p><img src="www.baidu.com/img/PCpad_012830ebaa7e4379ce9a9ed1b71f7507.png" alt="百度~"><p>3,新建py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox() <span class="comment"># 适当修改</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.acbs.top&quot;</span>)</span><br></pre></td></tr></table></figure><p>如果打开了浏览器,并且进入了输入的网站,那么环境配置就算成功了</p><h3 id="基础浏览器操作"><a href="#基础浏览器操作" class="headerlink" title="基础浏览器操作"></a>基础浏览器操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器进入百度网站</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置浏览器宽800，高400</span></span><br><span class="line">driver.set_window_size(<span class="number">800</span>, <span class="number">400</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待3秒</span></span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新页面</span></span><br><span class="line">driver.refresh()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待3秒</span></span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最大化窗口</span></span><br><span class="line">driver.maximize_window()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>以上代码会在浏览器中执行：</p><ul><li>打开浏览器</li><li>进入百度网站</li><li>设置窗口大小为宽 800，高 400</li><li>等待 3 秒</li><li>刷新页面</li><li>最大化窗口</li><li>退出浏览器</li></ul><p>还有后退和前进页面 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 后退到上一个页面--百度网站</span><br><span class="line">driver.back()</span><br><span class="line"></span><br><span class="line"># 前进到下一个页面--实验楼网站</span><br><span class="line">driver.forward()</span><br></pre></td></tr></table></figure><h3 id="获取元素-并进行操作"><a href="#获取元素-并进行操作" class="headerlink" title="获取元素,并进行操作"></a>获取元素,并进行操作</h3><p>webdriver 提供了一系列的元素定位(获取)方法，常用的有以下几种:</p><ul><li>id</li><li>name</li><li>class name</li><li>tag name</li><li>link text</li><li>partial link text</li><li>xpath</li><li>css selector</li></ul><p>分别对应 python webdriver 中的方法为：</p><ul><li>find_element_by_id()</li><li>find_element_by_name()</li><li>find_element_by_class_name()</li><li>find_element_by_tag_name()</li><li>find_element_by_link_text()</li><li>find_element_by_partial_link_text()</li><li>find_element_by_xpath()</li><li>find_element_by_css_selector()</li></ul><p><em>下面是一些操作</em>:</p><h4 id="点击定位到的元素"><a href="#点击定位到的元素" class="headerlink" title="点击定位到的元素"></a>点击定位到的元素</h4><ul><li><code>click()</code></li></ul><blockquote><p>使用方法：一般为先进行元素的定位，如果该元素可以点击如：超链接、文本框、带有超链接的图片等，则该元素可以进行点击操作：<code>find_element_by_xxx().click()</code>。</p></blockquote><h4 id="清空文本框、向文本框输入内容"><a href="#清空文本框、向文本框输入内容" class="headerlink" title="清空文本框、向文本框输入内容"></a>清空文本框、向文本框输入内容</h4><ul><li>清空：<code>clear()</code></li><li>输入：<code>.send_keys(&quot;输入的内容&quot;)</code></li></ul><blockquote><p>使用方法：无论是清空还是输入操作，都是先进行元素即文本框的定位，然后调用对应的方法，即：清空<code>find_element_by_xx().clear()</code>，输入<code>find_element_by_xx().send_keys(&quot;输入的内容&quot;)</code></p></blockquote><h4 id="获取元素属性"><a href="#获取元素属性" class="headerlink" title="获取元素属性"></a>获取元素属性</h4><ul><li>文本信息：<code>.text</code></li></ul><blockquote><p>使用方法：定位到对应元素以后，直接调用方法：<code>find_element_by_xx().text</code>，注意：text 后面不要加括号</p></blockquote><ul><li>元素尺寸：<code>.size</code></li></ul><blockquote><p>使用方法：同上</p></blockquote><ul><li>其他属性：<code>.get_attribute(&quot;想获取的属性名&quot;)</code></li></ul><blockquote><p>使用方法：定位到对应元素以后，调用<code>.get_attribute(&quot;属性名&quot;)</code>方法，传值为想获取的属性名。注：查看元素的各个属性可通过 Chrome 自带的<code>开发者工具</code>，快捷键为<code>F12</code>，通过<code>元素查看器</code>定位到想查看的元素，然后在开发者工具中查看具体的属性名，如<code>class</code>、<code>type</code>、<code>id</code>等。</p></blockquote><p>这里我们使用<a href="http://bbs.51testing.com/forum.php">51Testing 软件测试论坛</a>作为演示网站，如果大家没有账号需要先去注册一个，下面的代码将会使用到账号信息，在终端使用命令<code>vim demo3.py</code>创建文件并写入代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入51testing网站</span></span><br><span class="line">driver.get(<span class="string">&quot;http://bbs.51testing.com/forum.php&quot;</span>)</span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用id定位账号输入框并输入账号</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;ls_username&quot;</span>).send_keys(<span class="string">&quot;您的用户名&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用id定位密码输入框并输入密码</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;ls_password&quot;</span>).send_keys(<span class="string">&quot;密码&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位“登录”按钮并获取登录按钮的文本</span></span><br><span class="line">txt = driver.find_element_by_xpath(<span class="string">&#x27;//*[@id=&quot;lsform&quot;]/div/div[1]/table/tbody/tr[2]/td[3]/button&#x27;</span>).text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印获取的文本</span></span><br><span class="line">print(txt)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位“登录”按钮并获取登录按钮的type属性值</span></span><br><span class="line"><span class="built_in">type</span> = driver.find_element_by_xpath(<span class="string">&#x27;//*[@id=&quot;lsform&quot;]/div/div[1]/table/tbody/tr[2]/td[3]/button&#x27;</span>).get_attribute(<span class="string">&quot;type&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印type属性值</span></span><br><span class="line">print(<span class="built_in">type</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位“登录”按钮并进行点击操作</span></span><br><span class="line">driver.find_element_by_xpath(<span class="string">&#x27;//*[@id=&quot;lsform&quot;]/div/div[1]/table/tbody/tr[2]/td[3]/button&#x27;</span>).click()</span><br></pre></td></tr></table></figure><p>在终端执行<code>python3 demo3.py</code>运行，结果显示如下：</p><p>页面显示：</p><p><img src="document-uid600404labid7463timestamp1542344866802.png" alt="此处输入图片的描述"></p><img src="document-uid600404labid7463timestamp1542344875747.png" alt="此处输入图片的描述" style="zoom:80%;" /><p>执行以上代码后会在 xfce 中输出如下信息：</p><img src="document-uid600404labid7463timestamp1542344885450.png" alt="此处输入图片的描述" style="zoom:80%;" /><h4 id="下拉页面"><a href="#下拉页面" class="headerlink" title="下拉页面"></a>下拉页面</h4><p>说明：下拉页面需要用 js 命令</p><ul><li>下拉指定高度</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">js = <span class="string">&#x27;document.documentElement.scrollTop=具体的下拉高度值;&#x27;</span></span><br><span class="line">driver.execute_script(js)</span><br></pre></td></tr></table></figure><blockquote><p>解释：<code>js = &#39;document.documentElement.scrollTop=具体的下拉高度值;&#39;</code>为 js 语句，意为下拉页面滚动条；<code>driver.execute_script(js)</code>为 python 代码，意为执行上面的 js 语句。</p></blockquote><ul><li>用目标元素做参考下拉页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">target_element = driver.find_element_by_xx()</span><br><span class="line"></span><br><span class="line">js = <span class="string">&#x27;arguments[0].scrollIntoView();&#x27;</span></span><br><span class="line"></span><br><span class="line">driver.execute_script(js,target_element)</span><br></pre></td></tr></table></figure><blockquote><p>解释：<code>target_element = driver.find_element_by_xx()</code>先对目标元素进行定位；<code>js = &#39;arguments[0].scrollIntoView();&#39;</code>js 下拉命令；<code>driver.execute_script(js, target_element)</code>python 代码，执行脚本，传两个参数，第一个是 js 命令，第二个是目标元素。</p></blockquote><p>在终端使用命令<code>vim demo4.py</code>创建文件并写入代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.get(<span class="string">&quot;http://bbs.51testing.com/forum.php&quot;</span>)</span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 页面下拉指定高度</span></span><br><span class="line">js = <span class="string">&#x27;document.documentElement.scrollTop=800;&#x27;</span></span><br><span class="line">driver.execute_script(js)</span><br></pre></td></tr></table></figure><p>在终端执行<code>python3 demo4.py</code>运行，页面在等待 3 秒后会出现下拉行为。</p><h4 id="页面中的aleart弹窗"><a href="#页面中的aleart弹窗" class="headerlink" title="页面中的aleart弹窗:"></a>页面中的aleart弹窗:</h4><p>如果页面有<code>alert</code>形式的提醒框，则用以下语句</p><ul><li>driver.switch_to.alert</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">alert = driver.switch_to.alert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看alert中的文字</span></span><br><span class="line">print(alert.text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击确定</span></span><br><span class="line">alert.accept()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击取消（如果有）</span></span><br><span class="line">alert.dismiss()</span><br></pre></td></tr></table></figure><h4 id="切换窗口"><a href="#切换窗口" class="headerlink" title="切换窗口"></a>切换窗口</h4><ul><li>.switch_to.window()</li></ul><blockquote><p>说明：很多时候我们点击按钮以后会新开页面，这时候要根据页面的<code>句柄</code>来切换窗口，获取所有页面句柄方法为<code>.window_handles</code>，而获取当前页面的句柄语法则为<code>.current_window_handle</code>，现在我们假设页面开了两个窗口，那么如何在两个窗口之间进行切换呢？很简单，就是用一个<code>for</code>循环即可，如果循环到的句柄与当前句柄不一致，那么就切换句柄：</p></blockquote><p>注: 所谓句柄,是一个数字的字符串,”15” “21”等等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取窗口所有句柄</span></span><br><span class="line">all_handles = driver.window_handles</span><br><span class="line"><span class="comment"># 获取当前窗口句柄</span></span><br><span class="line">curr_window = driver.current_window_handle</span><br><span class="line"><span class="comment"># 遍历所有句柄</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> all_handles:</span><br><span class="line">    <span class="comment"># 如果不是当前窗口句柄</span></span><br><span class="line">    <span class="keyword">if</span> k != curr_window:</span><br><span class="line">        <span class="comment"># 窗口句柄切换</span></span><br><span class="line">        driver.switch_to.window(k)</span><br></pre></td></tr></table></figure><h4 id="定位iframe"><a href="#定位iframe" class="headerlink" title="定位iframe"></a>定位iframe</h4><ul><li>.switch_to.frame():切换到 iframe</li><li>.switch_to.default_content(): 切换出 iframe</li></ul><blockquote><p>说明：iframe 经常在账号、密码输入框、发帖内容编辑框处出现，一般我们需要先通过开发人员工具确定该输入框是否是 iframe，如果是，则需要先定位 iframe。对 iframe 定位，一般需要先通过 xpath 定位到 iframe 的位置，然后通过<code>.switch_to.frame()</code>方法切换到 iframe 中，iframe 就像一个盒子，我们进入了盒子内部，进行预期的操作，然后需要跳出盒子才能继续对页面元素进行操作，所以执行完 iframe 内的操作后需要跳出 iframe 可以通过<code>.switch_to.default_content()</code>方法。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">iframe = driver.find_element_by_xpath()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到iframe</span></span><br><span class="line"></span><br><span class="line">driver.switch_to.frame(iframe)</span><br><span class="line"></span><br><span class="line">...页面操作代码...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳出iframe</span></span><br><span class="line"></span><br><span class="line">driver.switch_to.default_content()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SELENIUM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium-2 xpath</title>
      <link href="/new/2021/04/24/SELENIUM/Selenium-2xpath/"/>
      <url>/new/2021/04/24/SELENIUM/Selenium-2xpath/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>xpath 使用路径表达式在 XML 文档中进行导航。也就是说，当我们用 xpath 进行定位的时候，代码会根据你写的 xpath 一层一层的进行定位。xpath 就像是一个地图，指引代码找到它的目标元素。</p><h4 id="浏览器获得xpath"><a href="#浏览器获得xpath" class="headerlink" title="浏览器获得xpath"></a>浏览器获得xpath</h4><p>点击屏幕左下方的<code>所有应用程序&gt;互联网&gt;Firefox 网络浏览器</code>就可以打开 Firefox 浏览器，然后进入实验楼 (<a href="http://www.shiyanlou.com/">www.shiyanlou.com</a>) 网站。现在要对“路径”按钮进行定位：</p><img src="document-uid18510labid8069timestamp1540365219551.png" alt="此处输入图片的描述" style="zoom:80%;" /><p>点击键盘的 F12，这时浏览器会弹出开发者工具：</p><p><img src="document-uid18510labid8069timestamp1540365247532.png" alt="此处输入图片的描述"></p><p>最左侧的方框+小箭头叫做元素选择器。单击这个元素选择器以后，去页面点击想定位的元素——“路径”：</p><p><img src="document-uid18510labid8069timestamp1540365506028.png" alt="此处输入图片的描述"></p><p>此时定位到的标签，就是“路径”按钮对应的 HTML 标签了。然后将光标移动至该标签处，单击鼠标右键，选择复制，可以看到，这里可以选择复制 css 路径（即 css_selector)，也可以选择复制 XPath。</p><p><img src="document-uid18510labid8069timestamp1540365526863.png" alt="此处输入图片的描述"></p><p>这里我们选择 XPath，然后在文本编辑器里就可以粘贴复制的 XPath 了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;*[@id&#x3D;&quot;header-navbar-collapses&quot;]&#x2F;ul[1]&#x2F;li[3]&#x2F;a</span><br></pre></td></tr></table></figure><h4 id="XPath介绍"><a href="#XPath介绍" class="headerlink" title="XPath介绍"></a>XPath介绍</h4><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>/</td><td>从根节点选取</td></tr><tr><td>//</td><td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td></tr><tr><td>.</td><td>选取当前节点</td></tr><tr><td>..</td><td>选取当前节点的父节点</td></tr><tr><td>@</td><td>选取属性</td></tr><tr><td>*</td><td>匹配任何元素节点</td></tr></tbody></table><p>根据上面的表格，我们分析一下这个 xpath：<code>//*[@id=&quot;header-navbar-collapses&quot;]/ul[1]/li[3]/a</code></p><ul><li><code>//</code>即从当前选择的文档节点开始</li><li><code>*</code>匹配任何元素节点</li><li><code>[@id=&quot;header-navbar-collapses&quot;]</code>通过<code>id</code>属性确认当前文档开始的节点位置，即从<code>id</code>为<code>header-navbar-collapses</code>的位置开始</li><li><code>/</code>这个斜杠没有打头，所以这里意思是<code>下一级</code></li><li><code>ul[1]</code>这里方括号中的<code>1</code>表示第一个<code>ul</code>标签。注意：xpath 中的标签数从 1 开始</li><li><code>li[3]</code>表示第三个<code>li</code>标签</li></ul><p><img src="document-uid18510labid8069timestamp1540365583668.png" alt="此处输入图片的描述"></p><p>再举一个例子</p><p><img src="document-uid18510labid8069timestamp1540365604687.png" alt="此处输入图片的描述"></p><p>现在来看“登录”的 xpath：<code>//*[@id=&quot;header-navbar-collapses&quot;]/ul[2]/li[2]/a</code></p><p><img src="document-uid18510labid8069timestamp1540365620203.png" alt="此处输入图片的描述"></p><ul><li><code>//</code>即从当前选择的文档节点开始</li><li><code>*</code>匹配任何元素节点</li><li><code>[@id=&quot;header-navbar-collapses&quot;]</code>通过<code>id</code>属性确认当前文档开始的节点位置</li><li><code>/</code>斜杠没有用作开头，所以这里是<code>下一级</code>的意思</li><li><code>ul[2]</code>定位到上面<code>id</code>属性下一层的第二个<code>ul</code>标签</li><li><code>li[2]</code>定位到<code>ul</code>下一层的第二个<code>li</code>标签</li><li><code>a</code>定位到<code>li</code>标签下一层的<code>a</code>标签</li></ul><h4 id="手写XPath"><a href="#手写XPath" class="headerlink" title="手写XPath"></a>手写XPath</h4><p>有时候我们用复制来的 xpath 并不能定位到我们想要的元素，原因在于有一些网站的<code>id</code>元素属性也是变化的。这时候我们就只能自己来写 xpath 了。</p><h5 id="例子一"><a href="#例子一" class="headerlink" title="例子一"></a>例子一</h5><p><img src="document-uid18510labid8069timestamp1540366178381.png" alt="此处输入图片的描述"></p><p>我们来定位“实验楼”这个图片元素的 xpath，看到的 HTML 文档结构如下图：</p><p><img src="document-uid18510labid8069timestamp1540366196719.png" alt="此处输入图片的描述"></p><p>分析：</p><ul><li>目标元素是<code>img</code>标签</li><li>从<code>img</code>标签往上查找文档，看有没有唯一的属性值，如<code>id</code>。注意，<code>class</code>属性值一般不是唯一的，所以一般不用<code>class</code>属性作为定位元素</li><li>发现文档中直到文档顶部也没有属性唯一的元素，所以这里我们就从文档顶部即根节点开始</li><li><code>/</code>的意思即<code>从根节点选取</code></li><li>所以我们可以确定 xpath 开头是<code>/</code></li><li>第一层是<code>html</code>标签，所以 xpath 初步确定为<code>/html</code></li><li>第二层是<code>body</code>标签，xpath 确定为<code>/html/body</code></li><li>目标元素在<code>body</code>标签下第三个<code>div</code>中，所以 xpath 确定为<code>/html/body/div[3]</code></li><li>下一层只有一个<code>div</code>标签，这是可以省略后面的<code>[1]</code>，即<code>/html/body/div[3]/div</code></li><li>再下一层在第二个<code>div</code>中，所以 xpath 确定为<code>/html/body/div[3]/div/div[2]</code></li><li>依次类推，继续向下一层定位，即可确定 xpath 为<code>/html/body/div[3]/div/div[2]/div/nav/div[1]/a/img</code></li></ul><h5 id="例子二"><a href="#例子二" class="headerlink" title="例子二"></a>例子二</h5><p><img src="document-uid18510labid8069timestamp1540366244466.png" alt="此处输入图片的描述"></p><p>我们来定位搜索框的 xpath，看到的 HTML 文档结构如下图：</p><p><img src="document-uid18510labid8069timestamp1540366263561.png" alt="此处输入图片的描述"></p><p>分析：</p><ul><li>目标元素是<code>a</code>标签</li><li>从目标元素开始往上查找属性唯一的元素</li><li>发现有<code>id</code>属性，且该属性值固定不变，所以可以直接利用<code>id</code>属性进行定位</li><li><code>//</code>即从当前选择的文档节点开始，即<code>//*[@id=&#39;header-navbar-collapses&#39;]</code></li><li>下一层<code>ul</code>不唯一，所以 xpath 里要写索引，即<code>//*[@id=&quot;header-navbar-collapses&quot;]/ul[1]</code></li><li>接下来的<code>li</code>标签也不是唯一的，所以 xpath 确定为<code>//*[@id=&quot;header-navbar-collapses&quot;]/ul[1]/li[1]</code></li><li>最后定位到<code>a</code>标签，所以确定 xpath 为<code>//*[@id=&quot;header-navbar-collapses&quot;]/ul[1]/li[1]/a</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> SELENIUM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium-3 自动化测试思路</title>
      <link href="/new/2021/04/24/SELENIUM/Selenium-3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%80%9D%E8%B7%AF/"/>
      <url>/new/2021/04/24/SELENIUM/Selenium-3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>  对于测试人员来说，完善的测试用例是避免漏测的关键。对任何模块测试前编写对应的测试用例可以提高测试点覆盖率、测试效率，也可以在出现漏测的情况时进行回查反思，避免接下来的工作中再次出现类似情况。</p><p>常用的测试方法包括：<code>等价类</code>、<code>边界值</code>、<code>正交排列</code>、<code>因果图</code>、<code>场景法</code>。</p><ul><li>等价类</li></ul><blockquote><ol><li>适用场合:有数据输入的地方,可以使用等价类划分,将大量的数据划分出若干范围,从每个范围中挑选代表数据进行测试,避免穷举,提高测试效率。</li></ol></blockquote><blockquote><ol><li>等价类方法划分：<code>有效等价类</code>，<code>无效等价类</code> <code>有效等价类</code>:输入有意义,合理的数据集合； <code>无效等价类</code>:输入无意义的,不合理的数据集合；</li><li>等价类划分法使用步骤:</li></ol></blockquote><ul><li><p>分析需求划分等价类(分为初步划分和细化);</p></li><li><p>将等价类填写到&lt;&lt;等价类表&gt;&gt;中;</p></li><li><p>从每个等价类中至少挑选一个代表数据,编写测试用例,执行测试。</p></li><li><p>边界值</p></li></ul><blockquote><ol><li>适用场合:常用于数据输入的地方,一般作为等价类划分的补充,和等价类划分一起使用。</li><li>使用步骤:找到有效数据和无效数据之间的分界点,对分界点及其两边的点进行测试。</li></ol></blockquote><blockquote><ul><li><strong>使用等价类+边界值测试的思路</strong>：</li></ul></blockquote><ul><li><p>1.先对有效数据进行测试- 1 个测试用例尽可能的将多个控件的有效数据组合起来测(优化)</p></li><li><p>2.再对无效数据进行测试- 无效数据需要单独测试(为了避免屏蔽现象)</p></li><li><p>3.最后对多个无效数据组合测试(适当强化)</p></li><li><p>因果图</p></li></ul><blockquote><ol><li>适用场合:界面中考虑控件的组合和限制关系的情况(组合数量较少)。</li><li>因果图中常用的 9 个图形符号:恒等,与,或,非;互斥(E),唯一(O),包含(I),要求(R),屏蔽(M);</li><li>使用步骤:</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+ 找出所有的输入条件(因),和所有的输出结果(果);</span><br><span class="line">+ 找出输入条件的所有组合和限制;</span><br><span class="line">+ 每组输入条件组合对应的输出结果,画因果图,填判定表(画因果图可以省略);</span><br><span class="line">+ 编写测试用例,每一列对应一条测试用例。</span><br></pre></td></tr></table></figure><ul><li>场景法</li></ul><blockquote><ol><li>适用场合:当需要测试软件的业务流程(逻辑)时,适合用场景法,场景法是基于业务的方法,有测试人员模拟用户在使用软件的各种不同的情况;</li></ol></blockquote><blockquote><ol><li>场景法划分：<code>基本流</code>和<code>备选流</code> &gt; <code>基本流</code>：也叫有效流或正确流,模拟用户正确的操作的过程; <code>备选流</code>：也叫无效流或错误流,模拟用户错误的操作的情景;</li></ol></blockquote><blockquote><ol><li>场景法的使用步骤:</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ 分析需求,整理业务流程(逻辑),列出场景;</span><br><span class="line">+ 根据列出场景填写场景表;</span><br><span class="line">+ 为每个场景编写适当的测试用例(不一定是1:1的)。</span><br></pre></td></tr></table></figure><ul><li>正交排列</li></ul><blockquote><ol><li>适用场合:对于参数配置类软件,以及兼容性测试时需要考虑各个控件之间的组合情况(组合较多),使用正交排列法选择较少的组合达到最佳的测试效果。</li></ol></blockquote><blockquote><ol><li>使用步骤:</li></ol></blockquote><ul><li>分析需求,列出参与组合的控件以及每个控件的取值;</li><li>选择合适的正交表(确定 m = 控件取值个数, k = 控件数);</li><li>完成控件,控件取值对应因子和状态的映射;</li><li>编写测试用例。</li></ul>]]></content>
      
      
      <categories>
          
          <category> SELENIUM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ 引用类型</title>
      <link href="/new/2021/03/02/CPP/cpp%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B/"/>
      <url>/new/2021/03/02/CPP/cpp%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>$\alpha$<br>hhh</p><p>// 引用类型<br>// 引用类型是cpp中新增加的类型,用标识符&amp;来表示,<br>// 本质是对已经有的变量起的一个别名<br>// 一般形式: 数据类型 &amp; 引用变量名 = 已定义过的变量名<br>float x = 5;<br>float &amp; y1 = x; //针对一个变量,重新定义一个别名<br>cout&lt;&lt;y1&lt;&lt;endl;<br>// 引用类型可以用在函数传参上,使用引用进行接受参数<br>// 例如:<br>int max_a=3, max_b=8, max_res;<br>bs_max(max_a, max_b, max_res); // 传入的是int类型,使用引用类型进行接收.这样,函数内部的更改就是对int类型的更改<br>cout&lt;&lt;max_res&lt;&lt;endl;</p><p>// const类型<br>cout&lt;&lt;”============”&lt;&lt;endl;<br>// 关键字const可以用来限制 变量,函数参数,函数返回值 的修改<br>// const修饰一个变量的时候,则限定该变量在定义域范围内为常量,并要求该变量在初始化的时候进行赋值,以后不允许重新赋值或者修改<br>// c语言时,使用的是宏定义命令常量,即 #define, cpp后就用const定义常量<br>//      相对于宏定义,const可以用来进行类型检查,且可以像局部变量一样在程序的任意位置进行定义<br>const int Maxlen = 50;<br>// todo 此处应该补上关于 限制函数参数,函数返回值 的方法</p><p>// 函数<br>// 相对与c,cpp的函数有很多优点, 主要体现在 1,要求函数原型, 2,允许内联函数, 3,带缺省值的函数, 4,函数重载 ,…<br>int show1(); // 只要定义了函数原型,系统编译即可通过, 然后再程序后面补上函数体就可以,如果不补的话依旧运行不了,会报错undefined reference<br>show1();<br>// 内联函数:<br>// 在函数声明的时候加上inline字样,此时编译器会将 程序中出现的对该函数的调用 用该函数的函数体 来代替,用于提高运行效率<br>// 另外,内联函数中不允许使用 循环和开关 ,否则系统将其视为普通函数<br>// 内联函数的使用会增加代码量,但是会提高性能,也有说,用空间换取时间<br>// 网上还提到一点:类结构中所在的类说明内部定义的函数是内联函数。 具体等看看类再说啵<br>// todo 对应上一行<br>// 带缺省参数的函数:<br>// 函数的参数可以带有默认值,但是默认值的设置要遵守从右到左的顺序, 即 若某个参数有默认值,则后面必须都有默认值<br>defaultPara(5, 6); // 使用的时候从左到右填入,不可以跳着填,最后的可以省略<br>// 缺省参数的优点– 1方便函数调用语句的书写, 2,方便软件系统的扩张和改进,函数增加功能后,可以通过缺省参数的形式保证原有程序的正确运行<br>//          3, 方便类的构造函数设计</p><p>// 函数的重载:<br>// 建立多个函数名相同,但是参数列表不相同的函数.<br>// 函数返回类型可以相同,也可以不同,但是形参必须不同,这种不同可以是参数个数不同也可以是参数类型不同<br>// 函数的重载又称为函数的多态性.通过改变形参个数或类型使多个函数共用一个函数名</p><p>// 名字空间:<br>// 名字空间可以看作一个比程序模块更大的包,在名字空间中可以封装代码<br>// 使用方式– 1, 使用作用域运算符”::”, 2,使用using namespace xxx语句,将所有名字在该空间内可见<br>first_space::func();<br>second_space::func();</p><p>// cpp内存动态分配:<br>// cpp新增 new和delete运算符,用于动态存储空间的分配和释放<br>// 所谓动态存储空间,是指系统提供的一个叫做堆的内存区域,需要用的时候,使用new申请,不使用的时候使用delete释放内存空间给系统<br>// new一般形式: new 类型名 (初始值) | new 类型名 [数组个数]<br>// 申请单个变量时,可以有初始值,申请数组的时候不能有初始值,只接受数组个数<br>// 当动态空间申请不成功的时候new会返回空指针NULL<br>// delete一般格式: delete 指针 (释放指针的空间) | delete[] 指针 (释放动态数组的空间)<br>char* string1, s1[]=”Data Structure”;<br>int length = 14;<br>string1 = new char[length];<br>for(int i=0;i&lt;length;i++){<br>string1[i] = s1[i];<br>}<br>cout&lt;&lt;string1&lt;&lt;endl;<br>cout&lt;&lt;s1&lt;&lt;endl;</p><pre><code>return 0;</code></pre><p>}</p><p>int show1(){<br>    cout&lt;&lt;”show1 function”&lt;&lt;endl;<br>}</p>]]></content>
      
      
      <categories>
          
          <category> CPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ 标准IO</title>
      <link href="/new/2021/03/01/CPP/cpp%E6%A0%87%E5%87%86io/"/>
      <url>/new/2021/03/01/CPP/cpp%E6%A0%87%E5%87%86io/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="cpp-标准IO"><a href="#cpp-标准IO" class="headerlink" title="cpp 标准IO"></a>cpp 标准IO</h3><p>cpp兼容了C语言的IO系统,并且独创了面向对象式的系统</p><p>流的概念:将输入输出看作一个流,不需要考虑具体设备的细节</p><h5 id="书写格式"><a href="#书写格式" class="headerlink" title="书写格式:"></a>书写格式:</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span>&gt;&gt;内容&gt;&gt;内容&gt;&gt;...;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;内容&lt;&lt;内容&lt;&lt;...;</span><br></pre></td></tr></table></figure><p>cin: 是istream中的对象, 用来进行标准输入</p><p>cout: 是ostream中的对象, 用来进行标准输出</p><h5 id="设置IO格式"><a href="#设置IO格式" class="headerlink" title="设置IO格式:"></a>设置IO格式:</h5><ul><li>设置IO格式时 cpp预定义的算子:</li></ul><p>dec hex oct : 十进制, 十六进制, 八进制<br>ws : 输入跳过开始的空格<br>endl : 换行并刷新输出流<br>ends : 插入空字符结束字符串<br>setw(int w) : 设置输出宽度<br>flush : 刷新输出流(从缓存区实际输出)<br>setbase : 转换基数设置<br>setiosflags(long f) : 设置格式标志<br>resetiosflags(long f) : 解除设置格式标志<br>setfill(int c) : 填充字符<br>setprecision(int p) : 设置填充精度</p><ul><li>注意</li></ul><p>1, 定义即生效,对整个流都有效果<br>2, setwn对于更长的字符串没有效果,但是如果是较短的字符串会自动在左侧进行补齐 (此命令只起作用1次)<br>3, setiostream(ios::left)和setiosflags(ios::right)用来控制屏幕输出字符左对齐还是右对齐, 默认是右对齐<br>4, serfill设置填充字符,默认是空格</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span>&lt;&lt;setfill(<span class="string">&#x27;h&#x27;</span>)&lt;&lt;setw(<span class="number">7</span>)&lt;&lt;<span class="number">1234</span>&lt;&lt;<span class="built_in">endl</span>; 更换默认的填充字符</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setiosflags(ios::left)&lt;&lt;setw(<span class="number">7</span>)&lt;&lt;<span class="number">1234</span>&lt;&lt;<span class="built_in">endl</span>; 更换默认的对齐方式</span><br></pre></td></tr></table></figure><p>5, 一个流只有处于无错状态,我们才能对其进行读写,确定一个流对象的状态的最简单的方法是将其作为一个条件来使用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">while(cin&gt;&gt;word)</span><br></pre></td></tr></table></figure><h5 id="高级的IO"><a href="#高级的IO" class="headerlink" title="高级的IO"></a>高级的IO</h5><ul><li>三个头文件</li></ul><table><thead><tr><th>Header</th><th align="left">Type</th><th></th></tr></thead><tbody><tr><td>iostream</td><td align="left">istream 从流中读取<br />ostream 写到流中去<br />iostream 对流进行读写,从  istream 和 ostream 派生而来</td><td>定义读写控制窗口的类型</td></tr><tr><td>fstream</td><td align="left">ifstream 从文件中读取, 由  istream 派生而来<br />ofstream 写到文件中去, 由  ostream 派生而来<br />fstream 读写文件, 由  iostream 派生而来</td><td>定义读写已命名文件的类型</td></tr><tr><td>sstream</td><td align="left">istringstream 从  string 对象中读取, 由 istream 派生而来<br />ostringstream 写到  string 对象中去, 由 ostream 派生而来<br />stringstream 对 string  对象进行读写, 由 iostream 派生而来</td><td>定义用于读写存储在内存中的 string 对象</td></tr></tbody></table><ul><li>缓冲区</li></ul><p>非系统的IO都会认为增加缓冲区来提高IO效率,cpp标准IO也不例外,以下是触发缓冲区刷新的方式</p><ol><li>程序正常结束,作为main函数return的一部分.</li><li>缓冲区满时,要刷新缓冲,新的数据才能写入.</li><li>可以使用操纵符如endl来显式刷新缓冲区.</li><li>在每个输出操作之后,我们可以用操纵符unitbuf设置流的内部状态,来清空缓冲区.默认情况下,对cerr就是设置unitbuf的.</li><li>一个输出流可能会被关联到另一个流,这种情况下,当读写被关联的流时,关联到流的缓冲区会被刷新.例如,默认情况下,cin和cerr都关联到cout,所以,读cin或者写cerr都会导致cout的缓冲区被刷新.</li></ol><p>刷新输出缓冲区:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;hi&quot;</span>&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//输出hi和一个换行,然后刷新缓冲区</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;hi&quot;</span>&lt;&lt;flush; <span class="comment">//输出hi,然后刷新缓冲区</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;hi&quot;</span>&lt;&lt;ends; <span class="comment">//输出hi和一个空字符,然后刷新缓冲区</span></span><br></pre></td></tr></table></figure><p>unitbuf设置方法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cout&lt;&lt;unitbuf; &#x2F;&#x2F;所有输出操作后都会立刻刷新缓冲区</span><br><span class="line">cout&lt;&lt;nounitbuf; &#x2F;&#x2F;回到正常的缓冲方式</span><br></pre></td></tr></table></figure><p>注意 程序崩溃的时候,会有数据停留在缓冲区中没出来,可以考虑确认刷新.</p><p>… 还有好多</p><p><a href="https://www.jianshu.com/p/1c83da435755">https://www.jianshu.com/p/1c83da435755</a></p><p><a href="https://www.cnblogs.com/1zhk/p/5014442.html">https://www.cnblogs.com/1zhk/p/5014442.html</a></p>]]></content>
      
      
      <categories>
          
          <category> CPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ 数据类型</title>
      <link href="/new/2021/03/01/CPP/cpp%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/new/2021/03/01/CPP/cpp%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型:"></a>数据类型:</h3><p>使用编程语言进行编程时，需要用到各种变量来存储各种信息。变量保留的是它所存储的值的内存位置。这意味着，当创建一个变量时，就会在内存中保留一些空间。可能需要存储各种数据类型（比如字符型、宽字符型、整型、浮点型、双浮点型、布尔型等）的信息，操作系统会根据变量的数据类型，来分配内存和决定在保留内存中存储什么。</p><p>相对于C语言,cpp在枚举类型和结构体类型上有所提高</p><h4 id="7种内置的基本数据类型"><a href="#7种内置的基本数据类型" class="headerlink" title="7种内置的基本数据类型"></a>7种内置的基本数据类型</h4><table><thead><tr><th align="left">类型</th><th align="left">关键字</th></tr></thead><tbody><tr><td align="left">布尔型</td><td align="left">bool</td></tr><tr><td align="left">字符型</td><td align="left">char</td></tr><tr><td align="left">整型</td><td align="left">int</td></tr><tr><td align="left">浮点型</td><td align="left">float</td></tr><tr><td align="left">双浮点型</td><td align="left">double</td></tr><tr><td align="left">无类型</td><td align="left">void</td></tr><tr><td align="left">宽字符型</td><td align="left">wchar_t (本质是short int)</td></tr></tbody></table><p>一些基本类型可以使用一个或多个类型修饰符进行修饰, 类型修饰符包括 signed,unsigned,short,long</p><p>添加修饰符后的数据类型效果是这样的:   (具体数据会根据编译器不同和不同系统有所差异)</p><table><thead><tr><th align="left">类型</th><th align="left">位</th><th align="left">范围</th></tr></thead><tbody><tr><td align="left">char</td><td align="left">1 个字节</td><td align="left">-128 到 127 或者 0 到 255</td></tr><tr><td align="left">unsigned char</td><td align="left">1 个字节</td><td align="left">0 到 255</td></tr><tr><td align="left">signed char</td><td align="left">1 个字节</td><td align="left">-128 到 127</td></tr><tr><td align="left">int</td><td align="left">4 个字节</td><td align="left">-2147483648 到 2147483647</td></tr><tr><td align="left">unsigned int</td><td align="left">4 个字节</td><td align="left">0 到 4294967295</td></tr><tr><td align="left">signed int</td><td align="left">4 个字节</td><td align="left">-2147483648 到 2147483647</td></tr><tr><td align="left">short int</td><td align="left">2 个字节</td><td align="left">-32768 到 32767</td></tr><tr><td align="left">unsigned short int</td><td align="left">2 个字节</td><td align="left">0 到 65,535</td></tr><tr><td align="left">signed short int</td><td align="left">2 个字节</td><td align="left">-32768 到 32767</td></tr><tr><td align="left">long int</td><td align="left">8 个字节</td><td align="left">-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td></tr><tr><td align="left">signed long int</td><td align="left">8 个字节</td><td align="left">-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td></tr><tr><td align="left">unsigned long int</td><td align="left">8 个字节</td><td align="left">0 到 18,446,744,073,709,551,615</td></tr><tr><td align="left">float</td><td align="left">4 个字节</td><td align="left">精度型占4个字节（32位）内存空间，+/- 3.4e +/- 38 (~7 个数字)</td></tr><tr><td align="left">double</td><td align="left">8 个字节</td><td align="left">双精度型占8 个字节（64位）内存空间，+/- 1.7e +/- 308 (~15 个数字)</td></tr><tr><td align="left">long double</td><td align="left">16 个字节</td><td align="left">长双精度型 16 个字节（128位）内存空间，可提供18-19位有效数字。</td></tr><tr><td align="left">wchar_t</td><td align="left">2 或 4 个字节</td><td align="left">1 个宽字符</td></tr></tbody></table><p>具体的判断似乎可以通过下列代码来完成,但是有些数据类型我没有运行通过</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">bool</span>) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 所占字节数</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (numeric_limits&lt;<span class="keyword">bool</span>&gt;::max)() &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 最大值</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (numeric_limits&lt;<span class="keyword">bool</span>&gt;::min)() &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 最小值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型:"></a>枚举类型:</h4><p>在cpp中,枚举类型是一种真正的类型,形式如下:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &lt;</span>表示符&gt; &#123;&lt;枚举列表&gt;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Color</span> &#123;</span>Red, Green, Yellow&#125;;</span><br></pre></td></tr></table></figure><p>其中,enum是枚举类型标识,枚举列表定义了该枚举类型的所有枚举值.<br>定义枚举类型之后,就可以定义该枚举类型的变量.枚举类型的变量只允许赋值操作:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Color myColor;</span><br><span class="line">myColor = Yellow; <span class="comment">// 对枚举类型执行赋值操作</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;myColor&lt;&lt;<span class="built_in">endl</span>; <span class="comment">// 结果为2 对应的是序号2,说明存储的是符号数字常量2</span></span><br></pre></td></tr></table></figure><p>详细参考菜鸟教程 <a href="https://www.runoob.com/w3cnote/cpp-enum-intro.html">https://www.runoob.com/w3cnote/cpp-enum-intro.html</a></p><h4 id="结构体数据类型"><a href="#结构体数据类型" class="headerlink" title="结构体数据类型:"></a>结构体数据类型:</h4><p>大致与c语言相同,比c更加简单,结构体一旦定义,就可以用来定义变量,而不用加标识符struct,</p><p>在cpp中,结构体相当于没有私有成员的类, 不过struct中是可以定义方法的,静态和成员都可以)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">struct Student&#123;</span><br><span class="line">    long number;</span><br><span class="line">    char name[10];</span><br><span class="line">    char sex[4];</span><br><span class="line">    int age;</span><br><span class="line">    static void hello()&#123;</span><br><span class="line">    cout&lt;&lt;&quot;hello world&quot;&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Student student &#x3D; &#123;100001, &quot;张三&quot;, &quot;男&quot;, 26&#125;,y&#123;&#125;,z&#123;&#125;,*p; &#x2F;&#x2F; 将Student 实例化4个</span><br><span class="line">&#x2F;&#x2F; 另, 由于clang-tidy的事, 实例化空的时候也带上括号,但是不带括号也行.</span><br><span class="line">y.number &#x3D; student.number; &#x2F;&#x2F; 等号赋值</span><br><span class="line">p &#x3D; &amp;student; &#x2F;&#x2F; 地址赋值</span><br><span class="line">z.number &#x3D; p-&gt;number; &#x2F;&#x2F; 指针赋值</span><br><span class="line">Student::hello();</span><br></pre></td></tr></table></figure><h4 id="typedef-创造数据类型"><a href="#typedef-创造数据类型" class="headerlink" title="typedef 创造数据类型:"></a>typedef 创造数据类型:</h4><p>定义后, bs就是int的另一个名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typedef int bs; </span><br></pre></td></tr></table></figure><p>如此就可以创建一个整型变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bs L;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cv2 中文路径打开失败</title>
      <link href="/new/2021/02/25/cv2%E4%B8%AD%E6%96%87%E8%B7%AF%E5%BE%84%E6%89%93%E5%BC%80%E5%A4%B1%E8%B4%A5/"/>
      <url>/new/2021/02/25/cv2%E4%B8%AD%E6%96%87%E8%B7%AF%E5%BE%84%E6%89%93%E5%BC%80%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>工具函数解决问题:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def cv_read(file_path):</span><br><span class="line">    cv_img &#x3D; cv2.imdecode(np.fromfile(file_path, dtype&#x3D;np.uint8), -1)</span><br><span class="line">    return cv_img</span><br></pre></td></tr></table></figure><p><a href="https://www.zhihu.com/question/67157462">https://www.zhihu.com/question/67157462</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> opencv cv2 python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyqt5 QLabel</title>
      <link href="/new/2021/02/14/pyqt5-QLabel/"/>
      <url>/new/2021/02/14/pyqt5-QLabel/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="常用信号"><a href="#常用信号" class="headerlink" title="常用信号"></a>常用信号</h3><table><thead><tr><th>信号</th><th>描述</th></tr></thead><tbody><tr><td>linkActivated</td><td>当单击标签中嵌入的超链接,希望在新窗口中打开这个超链接时,setOpenExternalLinks特性必须设置为true</td></tr><tr><td>linkHovered</td><td>当指针划过时候触发</td></tr></tbody></table><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>setAlignment()</td><td>设置文本对齐方式,可设置的有<br /> - Qt.AlignLeft Qt.AlignRight Qt.AlignCenter水平方向左右中对齐<br /> -  Qt.AlignJustify 水平方向调整间距两端对齐</td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用pyuic5工具将调用ui文件转换为python类</title>
      <link href="/new/2021/02/13/%E4%BD%BF%E7%94%A8pyuic5%E5%B7%A5%E5%85%B7%E5%B0%86%E8%B0%83%E7%94%A8ui%E6%96%87%E4%BB%B6%E8%BD%AC%E6%8D%A2%E4%B8%BApython%E7%B1%BB/"/>
      <url>/new/2021/02/13/%E4%BD%BF%E7%94%A8pyuic5%E5%B7%A5%E5%85%B7%E5%B0%86%E8%B0%83%E7%94%A8ui%E6%96%87%E4%BB%B6%E8%BD%AC%E6%8D%A2%E4%B8%BApython%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="原有代码"><a href="#原有代码" class="headerlink" title="原有代码"></a>原有代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QMainWindow</span><br><span class="line"><span class="keyword">from</span> PyQt5.uic <span class="keyword">import</span> loadUi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span>(<span class="params">QMainWindow</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__(parent)</span><br><span class="line">        loadUi(<span class="string">&#x27;main.ui&#x27;</span>, self)</span><br><span class="line">        self.refresh.clicked.connect(self.refresh1)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">refresh1</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.output1.setText(<span class="string">&quot;dsafasdf&quot;</span>)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">app = QApplication(sys.argv)</span><br><span class="line">w = MainWindow()</span><br><span class="line">w.show()</span><br><span class="line">sys.exit(app.exec())</span><br></pre></td></tr></table></figure><h1 id="ui文件生成python类"><a href="#ui文件生成python类" class="headerlink" title="ui文件生成python类"></a>ui文件生成python类</h1><p>在电脑中找到pyuic5.exe可执行文件,在cmd中输入 D:/…/pyuic5.exe xxx.ui,会得到转换完成的python类,如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtCore, QtGui, QtWidgets</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QMainWindow</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ui_MainWindow</span>(<span class="params">QMainWindow</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setupUi</span>(<span class="params">self, MainWindow</span>):</span></span><br><span class="line">        MainWindow.setObjectName(<span class="string">&quot;MainWindow&quot;</span>)</span><br><span class="line">        MainWindow.resize(<span class="number">943</span>, <span class="number">736</span>)</span><br><span class="line">        self.centralwidget = QtWidgets.QWidget(MainWindow)</span><br><span class="line">        self.centralwidget.setObjectName(<span class="string">&quot;centralwidget&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="生成的python类与原有代码合并"><a href="#生成的python类与原有代码合并" class="headerlink" title="生成的python类与原有代码合并"></a>生成的python类与原有代码合并</h1><ul><li><p>删除loadui行</p></li><li><p>使原有代码的类 继承 生成代码的类</p></li><li><p>原有代码的__init__方法,参数修改为(self), __init__方法增加如下三行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">super</span>(ui.Ui_MainWindow, self).__init__()</span><br><span class="line">self.setupUi(self)</span><br><span class="line">self.retranslateUi(self)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt5 </tag>
            
            <tag> qt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS快速查询笔记</title>
      <link href="/new/2021/02/13/web/CSS%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2/"/>
      <url>/new/2021/02/13/web/CSS%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="css属性"><a href="#css属性" class="headerlink" title="css属性"></a>css属性</h3><h4 id="权重分配"><a href="#权重分配" class="headerlink" title="权重分配"></a>权重分配</h4><p>css权重 内联&gt;id&gt;class&gt;标签和通配符</p><h4 id="附加注意"><a href="#附加注意" class="headerlink" title="附加注意"></a>附加注意</h4><p>em 相对单位,相对于最近的父元素的字号大小变化而变化, 但是 本身,子类字号就是跟着父类走的</p><h4 id="文本css"><a href="#文本css" class="headerlink" title="文本css"></a>文本css</h4><p>字体颜色 color:red;<br>字体大小 font-size:16px; 字体的默认大小是16px<br>字体的水平对齐方式: text-align:left/center/right<br>字体 font-family 可以设置多种字体,从第一个开始适配<br>字体粗细 font-weight bold/normal(默认normal)之类的,或者用100-900表示,500等价于normal<br>文字倾斜 font-style normal不倾斜 italic倾斜<br>水平对齐方式 text-aligin left/right/center/justify(两端对齐)</p><h4 id="背景css"><a href="#背景css" class="headerlink" title="背景css"></a>背景css</h4><p>background-color: 颜色<br>background-image: 背景图<br>background-repeat: 重复 可x方向重复,y方向重复,还有no-repeat</p><p>background-size: cover表示完全覆盖  图片大小<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-size">https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-size</a><br>background-attachment: fixed 背景固定,就是不随滑动条滑动</p><h4 id="列表CSS"><a href="#列表CSS" class="headerlink" title="列表CSS"></a>列表CSS</h4><p>list-style:none;  去掉小黑点或者数字</p><h4 id="其他css"><a href="#其他css" class="headerlink" title="其他css"></a>其他css</h4><p>宽度 width<br>高度 height</p><h4 id="浮动css属性"><a href="#浮动css属性" class="headerlink" title="浮动css属性"></a>浮动css属性</h4><p>1,浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。2,由于浮动框不在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。</p><p>用途: </p><p>1, 图文排版</p><p>2.竖着的元素横着排列: 比如全体float:left 然后加一个父类,给父类设置高度使得下一个元素不会串上来</p><h3 id="W3C盒模型"><a href="#W3C盒模型" class="headerlink" title="W3C盒模型"></a>W3C盒模型</h3><p>内容-padding-border-margin</p><h4 id="margin"><a href="#margin" class="headerlink" title="margin:"></a>margin:</h4><p>1, 一共四个, margin-left / margin-right /  margin-top / margin-bottom</p><p>简写:  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 80<span class="selector-tag">px</span> 30<span class="selector-tag">px</span> 50<span class="selector-tag">px</span> 50<span class="selector-tag">px</span> (顺时针 上右下左)</span><br><span class="line"><span class="selector-tag">margin</span>: 80<span class="selector-tag">px</span> 30<span class="selector-tag">px</span> (上下 <span class="selector-tag">-</span> 左右)</span><br><span class="line"><span class="selector-tag">margin</span>: 30<span class="selector-tag">px</span> (所有)</span><br></pre></td></tr></table></figure><p>2, 可以用margin来做水平居中:</p><p>只能用在有宽度 并且宽度生效的元素(大标签) 做水平居中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 0 <span class="selector-tag">auto</span>;</span><br></pre></td></tr></table></figure><h4 id="border"><a href="#border" class="headerlink" title="border:"></a>border:</h4><p>以下三条最好一起出现</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border-color</span>: 边框颜色</span><br><span class="line"><span class="selector-tag">border-width</span>: 边框宽度</span><br><span class="line"><span class="selector-tag">border-style</span>: 边框样式 (可选值: 实线<span class="selector-tag">solid</span> 虚线<span class="selector-tag">dashed</span> 点划线<span class="selector-tag">dotted</span> 双线<span class="selector-tag">double</span>)</span><br></pre></td></tr></table></figure><p>简写: </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border</span>: <span class="selector-tag">red</span> 10<span class="selector-tag">px</span> <span class="selector-tag">solid</span>; (顺序随便)</span><br></pre></td></tr></table></figure><p>注意 边框会加在原有元素外,使原有元素的宽高撑大. 所以可以考虑把元素变小一点</p><p>栗子 用边框画三角形: (原理是两个相邻的边框是不同颜色的时候,交叉的部分是一条斜线分开的)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-top-color</span>: red;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="padding"><a href="#padding" class="headerlink" title="padding:"></a>padding:</h4><h4 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h4><p>1, 子元素设置margin top的时候会使父元素整体下移,可在父元素上设置overflow:hidden来避免</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyqt5调用ui文件作为主界面</title>
      <link href="/new/2021/02/12/pyqt5%E8%B0%83%E7%94%A8ui%E6%96%87%E4%BB%B6%E4%BD%9C%E4%B8%BA%E4%B8%BB%E7%95%8C%E9%9D%A2/"/>
      <url>/new/2021/02/12/pyqt5%E8%B0%83%E7%94%A8ui%E6%96%87%E4%BB%B6%E4%BD%9C%E4%B8%BA%E4%B8%BB%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="最简单版"><a href="#最简单版" class="headerlink" title="最简单版"></a>最简单版</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QMainWindow</span><br><span class="line"><span class="keyword">from</span> PyQt5.uic <span class="keyword">import</span> loadUi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span>(<span class="params">QMainWindow</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__(parent)</span><br><span class="line">        loadUi(<span class="string">&#x27;main.ui&#x27;</span>, self)</span><br><span class="line">        self.refresh.clicked.connect(self.refresh1)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">refresh1</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.output1.setText(<span class="string">&quot;dsafasdf&quot;</span>)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">app = QApplication(sys.argv)</span><br><span class="line">w = MainWindow()</span><br><span class="line">w.show()</span><br><span class="line">sys.exit(app.exec())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt5 </tag>
            
            <tag> qt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完整的reg操作注册表</title>
      <link href="/new/2021/02/10/%E5%AE%8C%E6%95%B4%E7%9A%84reg%E6%93%8D%E4%BD%9C%E6%B3%A8%E5%86%8C%E8%A1%A8/"/>
      <url>/new/2021/02/10/%E5%AE%8C%E6%95%B4%E7%9A%84reg%E6%93%8D%E4%BD%9C%E6%B3%A8%E5%86%8C%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMD检查本地端口被占用情况</title>
      <link href="/new/2021/02/10/CMD%E6%A3%80%E6%9F%A5%E6%9C%AC%E5%9C%B0%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/"/>
      <url>/new/2021/02/10/CMD%E6%A3%80%E6%9F%A5%E6%9C%AC%E5%9C%B0%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul><li>扫描所有端口</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><ul><li>扫描所有端口并在结果中搜索字符串</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | <span class="built_in">findstr</span> &quot;:<span class="number">800</span>&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在右键菜单中添加复制文件名或者路径的功能(原理)</title>
      <link href="/new/2021/02/10/Right-Menu-To-Copy-Path-principle/"/>
      <url>/new/2021/02/10/Right-Menu-To-Copy-Path-principle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="简单添加右键菜单并执行指令"><a href="#简单添加右键菜单并执行指令" class="headerlink" title="简单添加右键菜单并执行指令"></a>简单添加右键菜单并执行指令</h3><p>1, Win+R regedit 启动注册表<br>2, 这里以文件右键菜单为例,在注册表中打开一下目录:</p><img src="image-20210210152826142.png" alt="image-20210210152826142" style="zoom:67%;" /><p>可以看到,Path就是我添加进去的,右键菜单中的选项,新建Path之后,就可以看到文件的右键菜单有了”Path”字样</p><p>3,如果想把Path当成父目录,下设一级菜单的话,在path下新建如图所示键值:</p><img src="image-20210210153137525.png" alt="image-20210210153137525" style="zoom: 50%;" /><p>并下设shell键,shell键不用设置任何内容</p><img src="image-20210210153234690.png" alt="image-20210210153234690" style="zoom: 67%;" /><p>4,shell下设的内容就是下一级菜单内容,这里我设置了三个,shell键和下设的三个键不用设置任何值</p><p>5,三个键,比如File Name,本身不设键值,要下设一个键,键名为command,一定要是command,command键的默认键值的数据字段为要执行的内容</p><img src="image-20210210153507605.png" alt="image-20210210153507605" style="zoom: 67%;" /><p>一般由xxx.exe和参数构成, %1表示右键选择的文件路径和文件名</p><h3 id="注册表与菜单的对应关系"><a href="#注册表与菜单的对应关系" class="headerlink" title="注册表与菜单的对应关系"></a>注册表与菜单的对应关系</h3><p>上一个大标题的对应的是文件右键的菜单</p><p>文件夹右键的内容是不在上面的</p><p>文件夹右键的菜单在这里:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hkcr\Directory\shell\Path</span><br></pre></td></tr></table></figure><h3 id="reg操作注册表"><a href="#reg操作注册表" class="headerlink" title="reg操作注册表"></a>reg操作注册表</h3><p>windows中有一个可执行文件,叫reg.exe,提供了操作注册表的办法.</p><p>详细讲好多嘞,简单举个例子:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg.exe add hkcr\*\shell\<span class="built_in">Path</span> /v SubCommands /t REG_SZ</span><br></pre></td></tr></table></figure><p>👆 hhkr指HKEY_CLASSES_ROOT,其他缩写可以百度,add表示添加,”/v SubCommands /t REG_SZ”表示类型为REG_SZ,名称为SubCommands的键,内容为空.如果想设置内容,就在后面加一段 /d xxx</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg.exe add hkcr\*\shell\<span class="built_in">Path</span>\shell\&quot;File Name&quot;\command /ve /t REG_SZ /d $exePath&quot; name &#x27;%<span class="number">1</span>&#x27; &quot;</span><br></pre></td></tr></table></figure><p>👆 巩固一下,这句话的意思是,add添加,hkcr*\shell\Path\shell&quot;File Name”\command键的值, 这里是/ve,是一个特殊的/v属性,表示默认参数,这句话的意思是,默认参数为,REG_SZ类型的 数据为$exePath” name ‘%1’ “的键值.</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg.exe delete hkcr\*\shell\<span class="built_in">Path</span> /f</span><br></pre></td></tr></table></figure><p>👆这是删除,上面的add表示添加,对应的就是删除, /f指令表示force,如果没有/f参数,是需要二次确认的,完整命令的意思就是,删除hkcr*\shell\Path键,不提示直接删除</p><h3 id="获取文件名并输出到剪贴板"><a href="#获取文件名并输出到剪贴板" class="headerlink" title="获取文件名并输出到剪贴板"></a>获取文件名并输出到剪贴板</h3><p>上面提到的指令,中的%1就是完整的路径文件名,传入exe中作为一个参数出现的,那么这个exe处理这个参数就可以了</p><p>下面这个是python的实现方法,python确实效率不高,打包之后有6M左右,以后有机会再换C实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> win32clipboard <span class="keyword">as</span> w</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv)&lt;<span class="number">3</span>:</span><br><span class="line">    quit()</span><br><span class="line"></span><br><span class="line">args = sys.argv</span><br><span class="line">fullPathName = args[<span class="number">2</span>][<span class="number">1</span>:-<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 当最后一个是斜杠的时候会有问题,但是暂时没出现最后是斜杠的情况</span></span><br><span class="line"><span class="keyword">if</span> args[<span class="number">1</span>]==<span class="string">&quot;name&quot;</span>:</span><br><span class="line">    cp = fullPathName.split(<span class="string">&quot;\\&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line"><span class="keyword">elif</span> args[<span class="number">1</span>]==<span class="string">&quot;pathu&quot;</span>:</span><br><span class="line">    cp = fullPathName</span><br><span class="line"><span class="keyword">elif</span> args[<span class="number">1</span>]==<span class="string">&quot;pathd&quot;</span>:</span><br><span class="line">    cp = fullPathName.replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(cp)</span></span><br><span class="line"></span><br><span class="line">w.OpenClipboard()</span><br><span class="line">w.EmptyClipboard()</span><br><span class="line">w.SetClipboardText(cp)</span><br><span class="line">w.CloseClipboard()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> python </tag>
            
            <tag> 小工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在右键菜单中添加复制文件名或者路径的功能(使用说明)</title>
      <link href="/new/2021/02/10/Right-Menu-To-Copy-Path/"/>
      <url>/new/2021/02/10/Right-Menu-To-Copy-Path/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法:"></a>安装方法:</h3><p><a href="https://github.com/zephms/Right-Menu-To-Copy-Path/releases/download/v0.1/Windows.zip">点击下载</a></p><p>解压Windows.zip,将其中的exe文件放在一个合适的位置(可以根据需要更改文件名)</p><p>然后用记事本或其他文本编辑器打开install.ps1,将下面引号中的exe路径改为上一步放的位置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$exePath</span> = <span class="string">&quot;D:\xxx\rightClick.exe&quot;</span></span><br></pre></td></tr></table></figure><p>在install.ps1所在目录启动powershell,输入:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.ps1</span><br></pre></td></tr></table></figure><p>若没有报错的话,就已经安装好了,exe文件不要随意动,如果动了,需要重新更改install脚本中的文件路径,并安装,不过此时会提示覆盖安装,选择yes就好了. 至于install和uninstall两个脚本,动倒无所谓,别丢了就行,还得下载</p><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载:"></a>卸载:</h3><p>用和install.ps1同样的方法,执行uninstall</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./uninstall.ps1</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h3><p>目前,多文件选中时,仅复制一个文件的文件名,有啥建议可以来GitHub提issue :)</p><p><a href="https://github.com/zephms/Right-Menu-To-Copy-Path/">zephms/Right-Menu-To-Copy-Path: 给右键菜单添加复制文件名或者路径的功能 (github.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> python </tag>
            
            <tag> 小工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行中使用代理</title>
      <link href="/new/2021/02/07/%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/"/>
      <url>/new/2021/02/07/%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h5 id="注意-测试代理可用不可用-不要用ping命令-而要使用curl命令-如"><a href="#注意-测试代理可用不可用-不要用ping命令-而要使用curl命令-如" class="headerlink" title="注意:测试代理可用不可用,不要用ping命令,而要使用curl命令,如"></a>注意:测试代理可用不可用,不要用ping命令,而要使用curl命令,如</h5><ul><li><h3 id="针对cmd"><a href="#针对cmd" class="headerlink" title="针对cmd"></a>针对cmd</h3></li></ul><p>在VPN软件中设置一个端口,这里以ssr代理,1080端口为例</p><img src="image-20201212210926621.png" alt="image-20201212210926621" style="zoom:67%;" /><p>在cmd中执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> http_proxy=http://127.0.0.1:1080</span><br><span class="line"><span class="built_in">set</span> https_proxy=https://127.0.0.1:1080</span><br></pre></td></tr></table></figure><ul><li><h3 id="针对powershell"><a href="#针对powershell" class="headerlink" title="针对powershell"></a>针对powershell</h3></li></ul><p>powershell走的是网络层, 正好能被SSR、SS或V2Ray代理，不用手动设置了, 而无需手动设置代理</p><p>但是要是想代理,也不是不行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:http_proxy</span>=<span class="string">&quot;http://127.0.0.1:1080&quot;</span></span><br><span class="line"><span class="variable">$env:https_proxy</span>=<span class="string">&quot;http://127.0.0.1:1080&quot;</span></span><br></pre></td></tr></table></figure><ul><li><h3 id="git-bash"><a href="#git-bash" class="headerlink" title="git bash"></a>git bash</h3></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global https.proxy http://127.0.0.1:1080</span><br><span class="line">git config --global https.proxy https://127.0.0.1:1080</span><br><span class="line">git config --global http.proxy <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span> </span><br><span class="line">git config --global https.proxy <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过socket进行本地的进程间通信</title>
      <link href="/new/2021/02/06/socket%E9%80%9A%E4%BF%A1/%E9%80%9A%E8%BF%87socket%E8%BF%9B%E8%A1%8C%E6%9C%AC%E5%9C%B0%E7%9A%84%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/"/>
      <url>/new/2021/02/06/socket%E9%80%9A%E4%BF%A1/%E9%80%9A%E8%BF%87socket%E8%BF%9B%E8%A1%8C%E6%9C%AC%E5%9C%B0%E7%9A%84%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>我的一个python程序需要写一个界面,最终定的是逻辑使用python,界面使用electron进行开发,electron的逻辑是由node来解释执行的,所以我把python作为node的一个子线程,node进程和python进程之间使用socket进行通信.</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>我需要一个进程等待另一个进程下达指令,接收到指令后,分析并执行,然后给出返回值</p><img src="image-20210206190449967.png" alt="image-20210206190449967" style="zoom: 67%;" /><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>socket的原理简单来说,就是插头和插座, 一个插座可以由任意一个插头插上,插上就可以导电了. 同样,在socket中分为服务器端和客户端,服务器端进行监听,服务端在需要的时候发送数据包到服务端,服务端处理请求,将返回值返回给客户端.</p><p>当然,socket的运行,是需要借用一个端口的,服务端基于端口进行监听,客户端向端口发送数据.</p><p>由于通信协议,这些数据在传输的时候是以字节进行传输的,在python中体现为byte类型,在node中体现为buffer,用这种类型确实可以方便我们精确控制每一个字节传输的内容,而且如果合理利用可以提高传输效率.但是我考虑到byte类型与顶层逻辑之间转换的麻烦,决定使用字符串进行传输,按utf8进行编码.</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>服务端:</p><p>服务端处理数据,我设置了一个表示处理数据的函数analysis,这个函数接收一个字符串类型的参数,处理,并返回一个字符串类型的参数.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端代码 python版</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analysis</span>(<span class="params">str_</span>):</span></span><br><span class="line">    print(str_)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hhh,&quot;</span>+str_</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">host = <span class="string">&quot;&quot;</span></span><br><span class="line">port = <span class="number">800</span></span><br><span class="line">address = (host, port)</span><br><span class="line">time_now = time.strftime(<span class="string">&quot;%Y-%m-%d %H:%S:%M&quot;</span>, time.localtime())</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">s.bind(address)</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">&quot;Waiting for connections...&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        client_connection, client_address = s.accept()</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;Got connection from&quot;</span>, client_connection.getpeername())</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># client_connection.settimeout(5)</span></span><br><span class="line">            buf = client_connection.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(buf) == <span class="number">0</span>: <span class="comment"># break,跳出while循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                client_connection.send(<span class="built_in">bytes</span>(analysis(buf.decode()), encoding=<span class="string">&quot;utf8&quot;</span>))  </span><br><span class="line">    <span class="keyword">except</span> (KeyboardInterrupt, SystemError):</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    client_connection.close()</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="keyword">raise</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    traceback.print_exc()</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 服务端代码,node版</span></span><br><span class="line"><span class="comment">// 1 引入模块</span></span><br><span class="line"><span class="keyword">const</span> net = <span class="built_in">require</span>(<span class="string">&quot;net&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> analysis = <span class="function"><span class="keyword">function</span>(<span class="params">str_</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;hhh, &quot;</span>+ str_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2 创建服务器</span></span><br><span class="line"><span class="keyword">let</span> clientArr = [];</span><br><span class="line"><span class="keyword">const</span> server = net.createServer();</span><br><span class="line"><span class="comment">// 3 绑定链接事件</span></span><br><span class="line">server.on(<span class="string">&quot;connection&quot;</span>, <span class="function">(<span class="params">person</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(clientArr.length);</span><br><span class="line">  <span class="comment">// 记录链接的进程</span></span><br><span class="line">  person.id = clientArr.length;</span><br><span class="line">  clientArr.push(person);</span><br><span class="line">  person.setEncoding(<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">  <span class="comment">// 客户socket进程绑定事件</span></span><br><span class="line">  person.on(<span class="string">&quot;data&quot;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">    clientArr.forEach(<span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 数据写入全部客户进程中</span></span><br><span class="line">      <span class="comment">//////////// 数据在这里处理</span></span><br><span class="line">      val.write(analysis(chunk));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  person.on(<span class="string">&quot;close&quot;</span>, <span class="function">(<span class="params">p1</span>) =&gt;</span> &#123;</span><br><span class="line">    clientArr[p1.id] = <span class="literal">null</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  person.on(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">p1</span>) =&gt;</span> &#123;</span><br><span class="line">    clientArr[p1.id] = <span class="literal">null</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">server.listen(<span class="number">800</span>);</span><br></pre></td></tr></table></figure><p>客户端:</p><p>客户端由一个csend函数,csend函数唯一的参数就是发送的数据,返回值是从服务器端返回的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 客户端代码, python版</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">host = <span class="string">&quot;localhost&quot;</span></span><br><span class="line">port = <span class="number">800</span></span><br><span class="line">address = (host, port)</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect(address)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">csend</span>(<span class="params">mes</span>):</span></span><br><span class="line">    s.send(<span class="built_in">bytes</span>(mes, encoding=<span class="string">&quot;utf8&quot;</span>))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        buf = s.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">return</span> buf.decode()</span><br><span class="line">    <span class="keyword">except</span> e:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;Error receiving :&quot;</span>, e)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment">#sys.exit(1) # 终止程序用</span></span><br><span class="line"></span><br><span class="line">mes = <span class="string">&quot;hello world&quot;</span></span><br><span class="line">print(csend(mes))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s.shutdown(socket.SHUT_WR)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 客户端代码, node版</span></span><br><span class="line"><span class="comment">// 1 引入模块</span></span><br><span class="line"><span class="keyword">const</span> net = <span class="built_in">require</span>(<span class="string">&quot;net&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> readline = <span class="built_in">require</span>(<span class="string">&quot;readline&quot;</span>);</span><br><span class="line"><span class="comment">// 2 创建套接字和输入输出命令行</span></span><br><span class="line"><span class="keyword">let</span> rl = readline.createInterface(&#123;</span><br><span class="line">  <span class="comment">// 调用std接口</span></span><br><span class="line">  input: process.stdin,</span><br><span class="line">  output: process.stdout,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">let</span> client = <span class="keyword">new</span> net.Socket();</span><br><span class="line"><span class="comment">// 3 链接</span></span><br><span class="line">client.connect(<span class="number">800</span>, <span class="string">&quot;localhost&quot;</span>);</span><br><span class="line"></span><br><span class="line">client.setEncoding(<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line"><span class="comment">// 绑定输io流事件,获取输入输出字符</span></span><br><span class="line"><span class="comment">// rl.on(&#x27;line&#x27;,(mes)=&gt;&#123;</span></span><br><span class="line"><span class="comment">// client.write(mes);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">client.on(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">client.on(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(e.message);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">csend</span>(<span class="params">mes</span>) </span>&#123;</span><br><span class="line">  client.write(mes);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">csend(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>服务端二选一,运行起来,然后执行客户端代码,客户端也是二选一,运行之后控制台会有输出</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>由于我的python进程需要执行很长时间,因此python部分加入了多线程,一下就是举个例子,似乎不是那么有通用性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">此文件作为python后台的控制中心</span></span><br><span class="line"><span class="string">接收并处理 来自前端和子python进程 的指令 并 启动子线程完成任务</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注,暂时子python进程可以直接向前端发送数据,也可以向此父进程发送数据再转发, 看开发者心情</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">接收信息格式: json字符串</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;command&quot;:&quot;online_check_in&quot; // 必须</span></span><br><span class="line"><span class="string">    &quot;其他&quot;:...  // 其他根据情况选择</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">子进程未设置推出,估计会自动退出,后续解决</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">thread_template</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, threadID, name, get</span>):</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.threadID = threadID</span><br><span class="line">        self.name = name</span><br><span class="line">        self.get = get</span><br><span class="line">        self.command = get.get(<span class="string">&quot;command&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;开启线程： &quot;</span> + self.name)</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;此线程执行的指令为&quot;</span>, self.command)</span><br><span class="line">        <span class="comment"># 此处的get为字典类型,具有command字段,其他字段由传入决定</span></span><br><span class="line">        <span class="keyword">if</span> self.command == <span class="string">&quot;online_check_in&quot;</span>:</span><br><span class="line">            <span class="comment"># camera.m()</span></span><br><span class="line">            <span class="comment">####################<span class="doctag">TODO:</span> 在此处执行此时的方法,可以用全局方法,推荐使用类方法</span></span><br><span class="line">            <span class="comment">#<span class="doctag">TODO:</span>执行线上点名的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;offline_check_in&quot;</span>:</span><br><span class="line">            <span class="comment"># todo:执行线下点名的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;online_check_behavior&quot;</span>:</span><br><span class="line">            <span class="comment"># todo:执行线上行为检测的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;offline_check_behavior_danger&quot;</span>:</span><br><span class="line">            <span class="comment"># todo:执行线下危险行为检测的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;offline_check_behavior_state&quot;</span>:</span><br><span class="line">            <span class="comment"># todo:执行线下状态检测的python脚本</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> self.command == <span class="string">&quot;record_face&quot;</span>:</span><br><span class="line">            camera.m()</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;出现了意想不到的情况&quot;</span>)</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="comment"># 获取锁，用于线程同步</span></span><br><span class="line">        <span class="comment"># threadLock.acquire()</span></span><br><span class="line">        self.print_time(self.name, self.counter, <span class="number">3</span>)</span><br><span class="line">        <span class="comment"># 释放锁，开启下一个线程</span></span><br><span class="line">        <span class="comment"># threadLock.release()</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_time</span>(<span class="params">self, threadName, delay, counter</span>):</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">            print(self.threadID, time.gmtime())</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analysis</span>(<span class="params">str_</span>):</span></span><br><span class="line">    get = json.load(str_)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> get.get(<span class="string">&quot;command&quot;</span>):</span><br><span class="line">        print(<span class="string">&quot;接收数据不包含指令,内容为&quot;</span>,str_)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    th = thread_template(thread_id_count, get.get(<span class="string">&quot;command&quot;</span>), get)</span><br><span class="line">    threads.append(th)</span><br><span class="line">    th.start()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hhh,&quot;</span>+str_</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">host = <span class="string">&quot;&quot;</span></span><br><span class="line">port = <span class="number">800</span></span><br><span class="line">address = (host, port)</span><br><span class="line">time_now = time.strftime(<span class="string">&quot;%Y-%m-%d %H:%S:%M&quot;</span>, time.localtime())</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">s.bind(address)</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">threads = [] <span class="comment"># 进程们</span></span><br><span class="line">threadLock = threading.Lock() <span class="comment"># 锁</span></span><br><span class="line">thread_id_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">&quot;Waiting for connections...&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        client_connection, client_address = s.accept()</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;Got connection from&quot;</span>, client_connection.getpeername())</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># client_connection.settimeout(5)</span></span><br><span class="line">            buf = client_connection.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(buf) == <span class="number">0</span>: <span class="comment"># break,跳出while循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                client_connection.send(<span class="built_in">bytes</span>(analysis(buf.decode()), encoding=<span class="string">&quot;utf8&quot;</span>))  </span><br><span class="line">    <span class="keyword">except</span> (KeyboardInterrupt, SystemError):</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    client_connection.close()</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="keyword">raise</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    traceback.print_exc()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> socket通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 国内镜像</title>
      <link href="/new/2021/02/04/Python%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/"/>
      <url>/new/2021/02/04/Python%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="一次性使用"><a href="#一次性使用" class="headerlink" title="一次性使用"></a>一次性使用</h3><ul><li>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a>  numpy表示安装numpy库</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple </span><br></pre></td></tr></table></figure><ul><li><p>其他的镜像源:<br>阿里云 <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a><br>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a><br>豆瓣(douban) <a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a><br>清华大学 <a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a><br>中国科学技术大学 <a href="http://pypi.mirrors.ustc.edu.cn/simple/">http://pypi.mirrors.ustc.edu.cn/simple/</a></p></li><li><p>库名查询:</p><p>[PyPi](<a href="https://pypi.org/">PyPI · The Python Package Index</a>)</p></li></ul><h3 id="长期使用"><a href="#长期使用" class="headerlink" title="长期使用"></a>长期使用</h3><p>Windows新建C:\Users\xx\pip\pip.ini文件,</p><p>Linux新建 ~/.pip/pip.conf</p><p>然后填入以下内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="attr">trusted-host</span> = pypi.tuna.tsinghua.edu.cn</span><br><span class="line"><span class="attr">disable-pip-version-check</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">timeout</span> = <span class="number">120</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拍一拍文案</title>
      <link href="/new/2021/02/04/%E6%8B%8D%E4%B8%80%E6%8B%8D/"/>
      <url>/new/2021/02/04/%E6%8B%8D%E4%B8%80%E6%8B%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="抄来的微信拍一拍后缀文案"><a href="#抄来的微信拍一拍后缀文案" class="headerlink" title="抄来的微信拍一拍后缀文案"></a>抄来的微信拍一拍后缀文案</h1><p><img src="v2-96944c20753a77154316ce02f3454bc1_b.jpg" alt="100句超火搞笑、微信拍一拍后缀文案！"></p><ol><li><p>拍了拍我的 砖头表示自己很怂</p></li><li><p> 拍了拍我的 衣服掉了一地灰</p></li><li><p> 拍了拍我的 枕头说过去点一起</p></li><li><p> 拍了拍我的 球弹弹弹走鱼尾纹</p></li><li><p> 拍了拍我的 窗户露出一张鬼脸</p></li><li><p> 拍了拍我的 狗子转头就是一口</p></li><li><p>拍了拍我的屁股，然后走人</p></li><li><p>拍了拍我的素颜表示磕碜至极</p></li><li><p>拍了拍我的钱包说养我一辈子</p></li><li><p>拍了拍我的儿子说大哥您好！</p></li><li><p>拍了拍我的米饭说再来十碗</p></li><li><p>拍了拍我的前任坟头并烧了香</p></li><li><p>拍了拍我的垃圾桶说我爱我家</p></li><li><p>拍了拍我的 小脑瓜然后变成猪</p></li><li><p>拍了拍我的 脑门，明明没烧啊</p></li><li><p>拍了拍我的 良心，啊，并没有</p></li><li><p>拍了拍我的 狗头并且踹了一脚</p></li><li><p>拍了拍我的 呆毛表示手感极佳</p></li><li><p>拍了拍我的 头顶却没摸到秀发</p></li><li><p>拍了拍我的 肩膀并喊了声爹</p></li><li><p>拍了拍我的 脑袋怀疑注水过度</p></li><li><p>拍了拍我的 脑瓜表示并不灵光</p></li><li><p>拍了拍我的 膝盖并跳起来打我</p></li><li><p>拍了拍我的 脚并被无情地踹飞</p></li><li><p>拍了拍我的 背，您这泥儿真多</p></li><li><p>拍了拍我的 对象，发现在做梦</p></li><li><p>拍了拍我的 钱包说养我一辈子</p></li><li><p>拍了拍我的方便面并碎了一地</p></li><li><p>拍了拍我的黄瓜并撒了把盐</p></li><li><p>拍了拍我的头像并喊了声爹</p></li><li><p>拍了拍我的狗还和狗抢吃的</p></li><li><p>拍了拍我的肩膀说爸辛苦了</p></li><li><p>拍了拍我的 床说睡吧要梦到我</p></li><li><p>拍了拍我的 床说猪啊还在睡</p></li><li><p>拍了拍我的 飞船表示也想上天</p></li><li><p>拍了拍我的 大奔（一切奢侈品）感到十分嫉妒</p></li><li><p>拍了拍我的 后座说送我回家</p></li><li><p>拍了拍我的钱包说真穷</p></li><li><p>拍了拍我的床让我少睡点</p></li><li><p>拍了拍我的西瓜，想挖一勺</p></li><li><p>拍了拍我的奶茶，想喝一口</p></li><li><p>拍了拍我的八块腹肌直流口水</p></li><li><p>拍了拍我的胸说“咋这大个”</p></li><li><p>拍了拍我的我的领导说，开了我</p></li><li><p>拍了拍我的自己的马屁</p></li><li><p>拍了拍我的小嘴说女人你在玩火</p></li><li><p>拍了拍我的脑袋说要快快长大</p></li><li><p>拍了拍我的脑袋说没事小家伙</p></li><li><p>拍了拍我的肚子决定请她吃饭</p></li><li><p>拍了拍我的头却听到噗通噗通</p></li><li><p>拍了拍我的小脑袋觉得很可爱</p></li><li><p>拍了拍我的肚子问：几个月了</p></li><li><p>拍了拍我的小脸并啵儿了一口</p></li><li><p>拍了拍我的头被一脚踹飞</p></li><li><p>拍了拍我的小屁股被揍了</p></li><li><p>拍了拍我的膝盖还要搭梯子</p></li><li><p>拍了拍我的脸蛋说美女在吗</p></li><li><p>拍了拍我的头说你是仙女吗</p></li><li><p>拍了拍我的胸发现她并没有</p></li><li><p>拍了拍我的的素颜照被吓哭</p></li><li><p>拍了拍我的前任遗照上的灰尘</p></li><li><p>拍了拍我的的世界第一帅证书</p></li><li><p>拍了拍我的的世界第一美证书</p></li><li><p>拍了拍我的马桶，留下了口水</p></li><li><p>拍了拍我的车,说打工不可能的</p></li><li><p>拍了拍我的小鹿说怎么还不撞</p></li><li><p>拍了拍我的钱包决定给她转账</p></li><li><p>拍了拍我的傻逼队友的脑瓜子</p></li><li><p>拍了拍我的桃树说要快点开花</p></li><li><p>拍了拍我的窗户露出一张鬼脸</p></li><li><p>拍了拍我的砖头表示自己很怂</p></li><li><p>拍了拍我的桌子，姐就是不服</p></li><li><p>拍了拍我的喇叭，前面的让开</p></li><li><p>拍了拍我的城堡大门却被赶走</p></li><li><p>拍了拍我的网易云，说生而为人</p></li><li><p>拍了拍我的兰博基尼让我载她</p></li><li><p>拍了拍我的胸说好大</p></li><li><p>拍了拍我的肩膀说爸你辛苦了</p></li><li><p>拍了拍我的头 并叫了声爸爸</p></li><li><p>拍了拍我的尊贵的脚指头</p></li><li><p>拍了拍我的男朋友（易烊千玺，王源，王俊凯，杨洋，李易峰等等）</p></li><li><p>拍了拍我的女朋友（赵丽颖，迪丽热巴，古力娜扎等等）</p></li><li><p>拍了拍我的宇宙飞船要我让座</p></li><li><p>拍了拍我的脑袋瓜说 真聪明</p></li><li><p>拍了拍我的充满智慧的大脑</p></li><li><p>拍了拍我的膝盖说 拍不到头</p></li><li><p>拍了拍我的鞋说 假的</p></li><li><p>拍了拍我的小脑瓜 然后变成猪</p></li><li><p>拍了拍我的 良心 啊 没有</p></li><li><p>拍了拍我的 圆润肚子 还可以吃</p></li><li><p>拍了拍我的肩膀，说你真的不胖</p></li><li><p>拍了拍我的手说：就这？</p></li><li><p>拍了拍我的 后背叫了声大哥</p></li><li><p>拍了拍我的 问你不会百度吗</p></li><li><p>拍了拍我的 头发说什么洗发水</p></li><li><p>拍了拍我的 瘪钱包哭出了声</p></li><li><p>拍了拍我的 饭碗给了一只鸡腿</p></li><li><p>拍了拍我的 仙人掌哈哈大笑</p></li><li><p>拍了拍我的 宠物叫了声祖宗</p></li><li><p>拍了拍我的 皮肤说吹弹可破</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10路径过长 解决办法</title>
      <link href="/new/2021/02/04/%E8%B7%AF%E5%BE%84%E8%BF%87%E9%95%BF/"/>
      <url>/new/2021/02/04/%E8%B7%AF%E5%BE%84%E8%BF%87%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>还在解决中,先填坑占位</p><img src="%E8%B7%AF%E5%BE%84%E8%BF%87%E9%95%BF/image-20210204210025986.png" alt="image-20210204210025986" style="zoom: 67%;" /><p>经查证,原有文件名字路径长度</p><p>C:\Users\m1576\Desktop\behavior-electron-vue-master\node_modules\pac-proxy-agent\node_modules\https-proxy-agent.github</p><p>这是由于全局utf8导致的</p>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World!</title>
      <link href="/new/2021/02/03/hello-world/"/>
      <url>/new/2021/02/03/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>经典的问候(这里应该有一张图片,但是还无法显示,目前努力中)</p><img src="source/img/assets/image-20210204134821689.png" alt="image-20210204134821689" style="zoom:25%;" />]]></content>
      
      
      
        <tags>
            
            <tag> Hello world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
